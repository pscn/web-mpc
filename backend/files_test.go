// Code generated by "file2go -v -t -o backend/files.go frontend/dist/*.html frontend/dist/*.ico frontend/dist/js/*.js frontend/dist/js/*.map frontend/dist/css/*.css"; DO NOT EDIT.

// Testing for included files:
// → frontend/dist/index.html
// → frontend/dist/favicon.ico
// → frontend/dist/js/app.08ce4b73.js
// → frontend/dist/js/chunk-vendors.1e34a291.js
// → frontend/dist/js/app.08ce4b73.js.map
// → frontend/dist/js/chunk-vendors.1e34a291.js.map
// → frontend/dist/css/app.dde38c96.css

package backend

import (
	"testing"
)

func TestContentDoesNotExist(t *testing.T) {
	_, err := Content("")
	if err == nil {
		t.Fatalf("Content: returned no error")
	}
}

func TestContentExists(t *testing.T) {
	var err error

	_, err = Content("frontend/dist/index.html")
	if err != nil {
		t.Fatalf("Content \"frontend/dist/index.html\" not found: %s", err)
	}
	_, err = Content("frontend/dist/favicon.ico")
	if err != nil {
		t.Fatalf("Content \"frontend/dist/favicon.ico\" not found: %s", err)
	}
	_, err = Content("frontend/dist/js/app.08ce4b73.js")
	if err != nil {
		t.Fatalf("Content \"frontend/dist/js/app.08ce4b73.js\" not found: %s", err)
	}
	_, err = Content("frontend/dist/js/chunk-vendors.1e34a291.js")
	if err != nil {
		t.Fatalf("Content \"frontend/dist/js/chunk-vendors.1e34a291.js\" not found: %s", err)
	}
	_, err = Content("frontend/dist/js/app.08ce4b73.js.map")
	if err != nil {
		t.Fatalf("Content \"frontend/dist/js/app.08ce4b73.js.map\" not found: %s", err)
	}
	_, err = Content("frontend/dist/js/chunk-vendors.1e34a291.js.map")
	if err != nil {
		t.Fatalf("Content \"frontend/dist/js/chunk-vendors.1e34a291.js.map\" not found: %s", err)
	}
	_, err = Content("frontend/dist/css/app.dde38c96.css")
	if err != nil {
		t.Fatalf("Content \"frontend/dist/css/app.dde38c96.css\" not found: %s", err)
	}
}

func TestContentMustDoesNotExist(t *testing.T) {
	defer func() {
		if r := recover(); r == nil {
			t.Fatalf("ContentMust: should have panic'd")
		}
	}()
	_ = ContentMust("")
	t.Fatalf("ContentMust: should have panic'd")
}

func TestContentMustExist(t *testing.T) {
	defer func() {
		if r := recover(); r != nil {
			t.Fatalf("ContentMust: should not have panic'd")
		}
	}()
	_ = ContentMust("frontend/dist/index.html")
	_ = ContentMust("frontend/dist/favicon.ico")
	_ = ContentMust("frontend/dist/js/app.08ce4b73.js")
	_ = ContentMust("frontend/dist/js/chunk-vendors.1e34a291.js")
	_ = ContentMust("frontend/dist/js/app.08ce4b73.js.map")
	_ = ContentMust("frontend/dist/js/chunk-vendors.1e34a291.js.map")
	_ = ContentMust("frontend/dist/css/app.dde38c96.css")
}

func TestFilenames(t *testing.T) {
	filenames := Filenames()
	i := 0
	if filenames[i] != "frontend/dist/index.html" {
		t.Fatalf("Filenames: mismatch got '%s' want '%s'",
			filenames[i], "frontend/dist/index.html")
	}
	i++
	if filenames[i] != "frontend/dist/favicon.ico" {
		t.Fatalf("Filenames: mismatch got '%s' want '%s'",
			filenames[i], "frontend/dist/favicon.ico")
	}
	i++
	if filenames[i] != "frontend/dist/js/app.08ce4b73.js" {
		t.Fatalf("Filenames: mismatch got '%s' want '%s'",
			filenames[i], "frontend/dist/js/app.08ce4b73.js")
	}
	i++
	if filenames[i] != "frontend/dist/js/chunk-vendors.1e34a291.js" {
		t.Fatalf("Filenames: mismatch got '%s' want '%s'",
			filenames[i], "frontend/dist/js/chunk-vendors.1e34a291.js")
	}
	i++
	if filenames[i] != "frontend/dist/js/app.08ce4b73.js.map" {
		t.Fatalf("Filenames: mismatch got '%s' want '%s'",
			filenames[i], "frontend/dist/js/app.08ce4b73.js.map")
	}
	i++
	if filenames[i] != "frontend/dist/js/chunk-vendors.1e34a291.js.map" {
		t.Fatalf("Filenames: mismatch got '%s' want '%s'",
			filenames[i], "frontend/dist/js/chunk-vendors.1e34a291.js.map")
	}
	i++
	if filenames[i] != "frontend/dist/css/app.dde38c96.css" {
		t.Fatalf("Filenames: mismatch got '%s' want '%s'",
			filenames[i], "frontend/dist/css/app.dde38c96.css")
	}
	i++
}

// eof
