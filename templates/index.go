
// Code generated by "file2go -prefix Index templates/index.html"; DO NOT EDIT.

package templates

import (
  "time"

  "github.com/pscn/file2go/decode"
)

const contentIndex = `H4sIGEhor1wA/2FXNWtaWGd1YUhSdGJBPT0AWlc1amIyUmxaQ0JpZVNCbWFXeGxNbWR2AOxbW3PjNrJ&#43;z6/o8Dyck4pIEaSoi8tUlcfjZHJ2nHjHk0l2t/YBIiEJGRJgAEiyksp/3wIvIilBFzuWJ5tK1dTYAhuNxtdfN8Bu6/Lz199dv//H3Q3MVZqMP7vUPyDBbBZahFnjzwAu5wTH&#43;heAy5QoDNEcC0lUaC3U1B5azUcMpyS0Uj6hCbFXZGLjLLMjnOFJQiyIOFOEqdBaE2mYtqRklXGhGoIrGqt5GJMljYidf&#43;gAZVRRnNgywgkJUSfXAyDngrKPtuL2lKqQ8WqBz20bvuJMwdWKSJ4SmHIBWYLXHcjwQhIgKnJgslCKM2nbzVnf/Hh7cwEp/khgzRcC&#43;IoBjTiTsKJqDvcfvu5AzNn/KpgQSPAva9jMTyj7CIIkoSXVOiFyToiySkvngkxDa65UJi&#43;63YUkzpQzhQvznIinXUESgiWR3WXgDB3UjaTs4iRxIikrJZQpMhNUrUNLzrE/7NmBy199/&#43;YmXWZ//xIlP/TWweDu/Vfp/Br/mLm3b4O4796i28Hijfcl&#43;/l7uvzlGzKZs/i7//&#43;bN8RsOa00R4JLyQWdURZamHG2Tvli4y/jxsot5SO5kScIqzlJif3TQtDmDEVVQsY/kAnc3l1fdouPmoTdgoX61wmP1w03ZVhKyLDAKVFESJgKnkKKKXNmHBSHOY1jwoCybKFgSkkSy9pPMV1ClGApQ2tOY1KaAXBZiNM4tFbSArXOSGgp8qAsWOJkQULr11&#43;dlfztt8rwbkyXuXmlVfcfvi65otcqxuVyBlhQbBcmhZYSC2LBlEcLqSMktKY4kcSCHK3QiqnURL1gnDUsk&#43;t0wpPcNL2AHVER6ejS4fOKP4SWCy54&#43;t9mDsBlIQXRQ2gh14JoXfwUoTW0xpfd4vFmjW6xyN41tVnHVsywmkMcWrfgd3z4AGgAbwENOsiFf&#43;ol9fPTF9ShemxFQSIFRcqwehbMCZ3NVWihngUP&#43;cg6tHy9tBY8eR7yzBOP2swKupwIkleDNDJi1JJGqIHp8ImYCrI83T40bKyIjls4qsW9p9knFc8e4/Jh7bph7rl&#43;7rj&#43;ox0nCRbR/BHQ&#43;J0B&#43;B00MADSjDu/iLtBHnaBEzwh8BIqH8EpTZI30IMP4IN/0Fv9XBINtehh4nVGpcoRjI6oHFUqDwuiDgpKnSgAFBzRmgvnandFj&#43;I35UlMxKkIpuB1PJhDAAn4Hc8JYA75wkN4A95TQo6vjq8&#43;AyUwk1MuUn1EYCYTrMj/uR3b&#43;6IhV9kpeUwzHtOL4pDCIrLqMc07GwVOz/cCN7Aak6EhtA4tzxm4vh&#43;goDFZFDFUf86jyaxDKix0zmyIExaHltuWz31oI89BI7c/Qp2BMwg8NBj04Ar6nT5oQBDYaOQEnuf7g87AcUd&#43;b9gb1I9bCm3PdfqjYcd2HTTwPRcN/JYi3xn1hu4QdWzfQchFnr9P0agAqTfomLDg2ebAbk1ruEpwpf1kI239F7ss3kpXziCoE5bOBjpljfTPdWgFhmOqOzuZZxPMnvVCsB2Crg7B3l7677FKX4cW6bFj/GRe&#43;05/4PYHfe8ArZHv9P1g0B8&#43;O61LLJwR8nojF3XQ0OkPe8GoweSWSgS26/TQCAV939fSrheMXNQiqxOMekM00qerMwhGHgr2kDVwUBDo6Bl6njfyew0towqVzmbvkIDd77jwy1Hq&#43;q6Zt3VCRK4TdPp5JrSRIVNvMXM/C&#43;yY5pfe&#43;C86/Hnp0JZ1gg5ygvwdwHRV2lBnP3cEyQg&#43;dgFqJ7d&#43;K7f1TLlt&#43;5qmc3Bjjm&#43;6qT3G3kdQ/SUMf26nSMpmR19A26YOSju9g3trWIk6fejpMzyAJSDvSYmnsPNpznh&#43;g589NDCLeXpiMi3vtjps&#43;5BAT5/oc&#43;gftFK/ouZ376F&#43;AywnP8kRhamPPQDOaPPTfFF&#43;Ws6adZ&#43;E4xj4QsBPeIllJGim6mpT&#43;VmKKLTq585PUi9TfGjqSjFlMBM0Ntar9NO6KlTJ3wjBBaRESjwjdaGrnKpdsJGympqKeRMuYiJIDEUxrKxqNRQ0ZlxzpgRPmnfKhkSkRHLNGSORopy13VkUW3NjokKk9byslJWKNGOsk8pmbR0AlwtJ4CGh7ONFUXL8n8Y72Piyu5Bka9nCmc2BwtSm9&#43;s6XwtVkuBMai439n9TjG1QtcbuhYdaoDY0xAuBc6yaKl6Xgw0d3gXy9unQU&#43;45m210bBy6edLan2ZNtBCCMJWsAUeKLglIzmYN4rQWyAuytXY6gwlPYmv8Xo9vWdWYhoXKCxf1PGt8lY8dmJNMFmnNURLTRWqNr/TokUlX7dWqqf&#43;6qh/&#43;exvBbb9qZOSKqmgOE6JWhDDIGxTSakGzTfkPlKxgwh/eEZlxJumyTUuT&#43;Ftt6xYR80xCpQIqQc0JxGSKF4nKE&#43;WWa9rxVNSHqsyal5CLHLsTHM8SYnuDLLfDFGOGKDPF2cYjh7G7Lyp1&#43;/GQJoGz775a9ez7fyX4asew5v4nuYB4aQDKMttzAmCM0J0&#43;3qHYvEvwmohHRGcxQf9/AOGiFZLnxdAyyJ4d69yAJyC9d0eCFFWack/vio//7bsqO0iVo4pPptbfS20wt&#43;C8KaIg8L3i2aEUmbdZSlwMsufPlvmaLwDEnSBLWveyTWBklciGKOY556eHIMsXAeVb8rBz/WgAUjQxSzAMsmcHIjfgrAfJFiy3PCaPOCS0&#43;Lvy3buE6XVx6YLylXw/uIVAKW6C5Jmg3QtuZaER3udjmgGjG/YYiArpT4dQXat4HqiOYVWUOQ&#43;gkgtUxNnhnWn62QO1WvWsOesR6JSc2SbcJ8TmGIuMIG3zxYzJfVGD3dHYPOdzkX2ckWYFLxBh1cqnB5aZOwb2/E6szAz61Eg9KRf9Tsiuy87tIczKvt4&#43;gkV7VLwAbpul/4h4mUn26dE6L82Md7L8lZ6wGPgUGhXmzR9QQvO1Py&#43;Pfdiuh20KgUtKVnelmLVdtiZM7d7pqpf5ZE89rnp2w5SgRMKMw5wIsl0pPbFqkZtPmBJrUCTNEqwIrGiSwITo5xGJgTLF21aZt9o0bL3Zq&#43;Rs9o6vtkv6e85WLV3CfeDuu0V2kiQHGZ4lxnrIC3D4QPXgWcP9OALvSMp3UHwRDCaYvUTo7vLoTlD&#43;rCQSlKNNgtRwguKgeAY/L8iiruJkgnJrjM7lSW2Gt2NGSuM4IUZLvHNa4u9YMuFK8dRoif9crr3eNW6Thqrn71stIj1ajOzpERk0bPVv9HA5tK9pZFLSah/lOvKRPR2kfRpMtjTGDzaVjFpfb7f59IPN4Ni78Lc7hKcdKkXP4ciJWPZLDOfhnuOh7qG84g&#43;NruJD82gxnZalOY1vXez2rervWBTS74taU&#43;O7FsUXg4xNnNZ1fTFJqaqaQZe0snOKJUxxox1Dx494Ka8Ne0fkIqlJoA9butVKbW9b5BOecDUo529dDIz&#43;LET/cIe&#43;FFdxbHBClizkfhf8lYz&#43;NMmomW9eU0EixRsMPS3lxNW8t839Hoi7zQQohR4Ze8aFf09slWbs/pHMYcE7QVMsDD3ERoTFSdX23Qmyuu96cpgdsuaeRJzFx&#43;15iYiPTkGx8NhucS/Dlanf4rTOBxtv56Nj/f9lVws/5e21YpP5Xbb&#43;FmC3&#43;P5i8aVGlSbj/wQAAP//Cir1G4Q7AAA=`

var fileIndex *decode.File

func init() {
  var err error
  fileIndex, err = decode.Init(contentIndex)
  if err != nil {
  	panic(err)
  }
}

func IndexContent() []byte    { return fileIndex.Content() }
func IndexName() string       { return fileIndex.Name() }
func IndexComment() string    { return fileIndex.Comment() }
func IndexModTime() time.Time { return fileIndex.ModTime() }

// eof
