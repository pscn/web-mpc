// Code generated by "file2go -v -t -o templates/files.go templates/*.html templates/*.js templates/*.css templates/*.ico"; DO NOT EDIT.

// Encoded files:
// → templates/icons.html
// → templates/index.html
// → templates/javascript.js
// → templates/style.css
// → templates/theme-default.css
// → templates/theme-juri.css
// → templates/favicon.ico

package templates

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"io/ioutil"
	"log"
)

var container map[string]*[]byte

// decode the base64Encoded string and return a *[]byte for the decoded data
func decode(base64Encoded string) *[]byte {
	gzipEncoded, err := base64.StdEncoding.DecodeString(base64Encoded)
	if err != nil {
		log.Panicf("failed to decode data(BASE64): %s", err)
	}

	var buf bytes.Buffer
	_, err = buf.Write(gzipEncoded)
	if err != nil {
		log.Panicf("failed buffer decode data: %s", err)
	}

	zr, err := gzip.NewReader(&buf)
	if err != nil {
		log.Panicf("failed to create reader from buffer: %s", err)
	}
	defer zr.Close()

	decoded, err := ioutil.ReadAll(zr)
	if err != nil {
		log.Panicf("failed to decode data(GZIP): %s", err)
	}

	return &decoded
}

func init() {
	container = make(map[string]*[]byte)
	
	container["templates/icons.html"] = decode(`` +
		`H4sICAAAAAAA/2RHVnRjR3hoZEdWelhHbGpiMjV6TG1oMGJXdz0A7Fpfj9u4EX/fTz` +
		`GnQ4HeQeKSFKk/jrVAmyuQhxY9oEWA9o2WaFuNLBmS7Ngp+t2LIWVbbryWvEgeVBzu` +
		`EIvUcOY3fzkUd/7DL399//d//PonWLeb4uVpjj9QqHKVOLp0Xp4A5mutMnwAmG90qy` +
		`Bdq7rRbeLs2qUXOf1XpdroxNlUi7zQ3me98NR266VqqxaFdiCtylaXbeIcdXNj2T7X` +
		`n7dV3fYIP+dZu04yvc9T7ZmBC3mZt7kqvCZVhU6Ya/gANOs6Lz95beUt8zYpq5OApj` +
		`0W+uXp+Wf4RS/VrmghT6sSzDT8/PxEzPDfTwDLvChmkO7qWpft+6qo6ndPAEbqDJje` +
		`4Git89W6PQ+rva6XRfV5Bus8y3SJc1nebAt1nC2KKv307sS3rEqNg6atq096VuvsMv` +
		`I6GeHvenNFXup/VXk5g7raldm7p/88PS12bduB3aosy8vVDMT2gKs2ql4hMbXDhUo/` +
		`rczCGfyol/ifma4OXpN/MQt3ZaNbO1lnup4B3x6gqYo8g0WhLHT7yqtVlu+as6y7Jm` +
		`n1ofVUka/KGaS6bHWN0K2P5s+dN/DxFFbzRZUdO2f94HnwwVjSeilTrQLPO7lyvwJV` +
		`58qzxk6ctt5pB5ZVumswwhJnqYpGO9a5iXPyBNq+CwfkctwsqgLyLHFQhpfmdYrRie` +
		`H3x+qQOBQocPz/vAZgbqnMqu37bkV6SBxGHUiP9rdOnMh5mT9b2peL0kbiqwAQ45D4` +
		`rWrXVvivhjpLnL+A7/rwEVgIfwYWuozCP1E6ko6XrXbNoO61TttOOJJTx0ZA4gin83` +
		`7iMOHAwcwcE8dHHLjqdSbsDhPGb3MZ1KbUh3aUJY35+MV88U3rXVEz1rN29EZr13o/` +
		`Hh+LehLZMML4Qs7fhq9pq+34YPiboe68GF28GBknBsaHwcM+bLSq0/V4K6HriATfZe` +
		`EN63RpazLVt5kamkSVRL4hVYu8eTDAPoCAj+CDf9d1gaFkEZLeJeRuSGTHFJ9Cq8Yd` +
		`xpbesB4i5i7jHW/GgfEBzobYMB4g5S4LzqjNI/4zxD24AL9FfvHVa85aVkWm67Hu2g` +
		`B3OaxBQgG+y4mENRjZEXwAfi+ZXs326vOw+BW0tSqbZVVvcD9TZVOoVv+euh7/qUd3` +
		`AtpUWb6tsnzWHrc6cVSdOpc5jHKPSSJ8Lql0eouhR3RMHE5C6vuSyd7i2ubsZWyy9z` +
		`aPplU1luseuS6zxKHX9MaTHuOExTSImRuSUHIWhgL+AIEbABqEgcdiIjn3/dANCY19` +
		`EYnw8vqKoccpCeLI9Shhoc8pC/0rRj6JRUQj5no+YYwy7r/GKLZGEqF7yxbV9txdXC` +
		`3ruaquWvSTxxD9T1/H8qlSduWRhPJSILH2YImM8feYOPLGdvm8Gh9oC1WObF/GdSz/` +
		`m4kU81A8vJu0tWoeKOSCSDdASRL3O59I16ReMLDrRbb+R4Z+YAdHGiTG3fQr2mE7p1` +
		`XZ7DaD7dK4RPVJENIgDHg/xK6ylPkk8GUYRI9k6Ygc7fxKYsZFTNEUJIiEjHtp2WPI` +
		`wKNEsJjJwPeRlnIZU3aVd0TGImIx9igklDFn8mbeScKkxDIQcc5jX/R4xCdruGetoQ` +
		`AvcCl86at3IwN9eiP9emUdPe4Gpp577OEg7nzuZbk5YmS/Of//x/nXlFgcsDaENzrJ` +
		`4dpQ661Wg71hrwwHV1VY3KzCV90rbha9Ff79BvY+ztHh/L0Bf0sXNHm5Gn2QR4hhh4` +
		`/f0aiHjrkBCGwtJOxvtLzDJxuD7y2m/7ZAv2nYqzKrNo/02JiKARQgsK9YQzB0csBD` +
		`QIQdQbf0YbNbiI8V8O+E9S2Wf0WrESf1CzRJpDkHMupyYMKO7vdKSPkRbp6pexbqVF` +
		`gDu3M+e0WDTZ5lw+l6rYSwSjBqtRADWuASJs9rCtNjymHVWYy6P6zRomrb8cnQwWMd` +
		`vNCqhONBeOjLj2j9Ye+Eb3VPWujhY8VFmCBBxH3JY9zDKWNhIHFfN1PMpYRyX/rYTc` +
		`hAhDTA6hSEVEZRv0dgJJY8Ftz1uieGQSiIj48ssucCy9PlhAkjprc+wgMmrnIZ8VGO` +
		`jLHvQDFcuBw48UMrXhBhpHPYAydxFBl4X+5a/paKgggzJVwWEAERoZavGRrQPXghCa` +
		`0gw8A8DR5YOnV8wq06jJHQ6G0+kDBUB5jsuBmpfXsK4hstjUDEORBbN5jfUOlu1AUk` +
		`ii0PQQJp9MUm0dhdRi4jwkwGwAh3OYks86+DgDE85nevgXa8AgwN2YXDPXfhNkgsnS` +
		`sIZ1YZjxHzwBCH8Vs//KgNNIyeuBNxgutSEnfGJvIco9Jq1WPhURJaHt7JlnIAZ0Rw` +
		`eyHC+tdj1lECk6YzHz0HHv06qO7HLDLuvEdt8DNTQU5SoLiyPDtJ5q8gHywbKhu1w/` +
		`aknmtVSELUlUsXOxeJD/2zCDV9PNZIpDGlxPVCCMzw2gVc2u7HkySULrVMzaBPJ4wE` +
		`5EVdfDek7fy52a+6VmjeXcV1N03Lqmy9Jv+iZyDo9vDOMQZRvUun/QrSQjWNNZMz6h` +
		`6rZ7Ndo+FQ5OWn2brWy8T5sX919TJ/3jX9M8B+dUJsYb6MwvydwZprrolANbdi08Bq` +
		`7rymAdVcf00DqrkJmwhUe2E2DbDmAm0aULvro2mAtXdN08C6UOVEkNobjGlgPV1OTA` +
		`rt5avMNGB3X3mnBHZqJu6+4k4J7NRM3H20nRLYh0w87oj2vfeOyTSQ3YfYaYDtvrFO` +
		`A6z9hjoNrCobWb7mz/YPdufP9k/G/xsAAP//jtadTkMuAAA=`)
	container["templates/index.html"] = decode(`` +
		`H4sICAAAAAAA/2RHVnRjR3hoZEdWelhHbHVaR1Y0TG1oMGJXdz0A7Fxtj9s28n/fTz` +
		`HV/82/qESLerQW9h7SJL0ekPQWSZB7eCdbtM1WFn0i7V236Hc/kJRlypYle+vdbA8F` +
		`iq5EDefhN0NyyKEz+vrN319/+tfdW1iIZX771Uj+gTwt5mOLFNbtVwCjBUkz+QAwWh` +
		`KRwnSRlpyIsbUWM2domZ+KdEnG1pJNaE6cezJx0tXKmaardJITC6asEKQQY2tLeEu3` +
		`DSX3K1YKg/CeZmIxzsiGTomjXmygBRU0zR0+TXMyxrbiA8AXJS1+dgRzZlSMC7YTkN` +
		`PiZyhJPra42OaELwgRFixKMqta0JTzc4jFgiyJk5FZus6F2elrxzF6a+KFECt+MxjM` +
		`WCE4mjM2z0m6ohxN2XIw5fwvs3RJ8+34A5swwb59zwpmVYYcir+t2h3n9vFi6HwhCF` +
		`vzbiEjQUVObv9BJvD+7vVooF8PoaFTVuxAmaUb+YrolFkgtisytugynZPBg6PIVAAN` +
		`dhE0mrBsCzQbW/LBwA9WKeewSst0SQQpOcxKtoRlSgs0ZyAYLGiWkQJosVoLmFGSZ3` +
		`wPSEY3MM1TzsfWgmakRmykyaW8e75TT5AHYcEmzddkbP36K7rnv/2202SQ0c3tV3ut` +
		`Pn7+K0gztCzdzjdzSEuaOlqlsSXKNbFgxqZrLsNcYpJzYoFCd2xllK/ydHtTsMLQjG` +
		`+XE5Yr1aQAZ0rLqRwicgx8xx7GlgsuePK/ug/ASFPB9GFsYdeC6Vb/LcfW0LodDfTn` +
		`WsZACzkpU6rVJ3GVigVkY+s9+LYPnwHH8A5wbGMX/i1Fyu/nC0zXvNfGkkwF6HFvBR` +
		`YsiAzdsYUDCx5Uy3Zs+VK0JDy7H/baO/bqXOhwORMkbw9S0opRgxpjA9PhIzEtyeZ8` +
		`/fDQkIj7NUz25N7j9OOCrS5x+XDvuqHyXKQcF13sOE7Scro4HxrpLxSCb+O4BRJz5P` +
		`l65MVq4IUofMTQyym/IKpkmPwAAXwGH/xOf0WKEg8laXfo2UnFMoGkh2WyY9lNiG0c` +
		`VjxxCDjs4aqIFdtj0l78ZizPSHkugkvwbA8WEEIOvu2hEBagBA/hB/AeM+jYfb/0OY` +
		`gyLfiMlUu5SKQFz1NB/t+1He8bg26nJ2cZXbGM3uhlKi2n1r5Nxp2DQxT4XuiGltEZ` +
		`DKLt2PJQ7Pp+iEOjc6lH0f5djad2HlykpZw1DXJSZGPLbdIrHzrYQzhxowTbMYpDD8` +
		`dxAK8gsiOQgGBwcIJCz/P92I6Rm/jBMIj3nxsMHc9FUTK0HRfh2PdcHPsNRj5KgqE7` +
		`xLbjI4xd7PmnGCUapCC227Bgq3rJbnQzXFUyIf3kYKn9N8dRfDBhoTjcT1lyNpCTVi` +
		`L/bsdW2LJQDeZnx9kkLa6aEhwOQVcOweBk+LekKazg62XvGn5eQPsoit0ojjzTFY1o` +
		`xj6K/DCOhpdE8xmxXAGAEuwFiYttPETRMAgTI3wNhhgcFwU4wWHk+5LW9cLExY34RG` +
		`ESDHEil1QUh4mHw9b4DBEOQzlchp7nJX5g8Eh2aNi11ZCDE9ku/GKa1xKpvtsSpsbs` +
		`Jxc2O1LTnoMvnuwqnzsZVflt9qfz/3ec36REoY1RqNL7oxxoHyan4qQkK5L2ZjXGfB` +
		`U1pqugdbpq5F1yUjV6+N2pV7eeZ4fzUyt8TRdwWswv2kXGlX5eh0WGdtiOIJBLcAgb` +
		`wN7lmwGl32Ogv66iVw37tMjY8pJUVA7FCHII5AK8gKgzUfZ0ojyUG7aq68WwaxUvm8` +
		`CfSNdrIn/GznKvW4hCO5ayXNsDHOi37v2MpJSb304bvMqGxWO2MUuaZf3jtWlEoI3A` +
		`rrYi6LFCdsFh3ScH2SnsNx0n0vaLLZowIc4fDZV6uFIv1ibJ9171pC8/S/T7vRP3uu` +
		`dk6pOT/gx8Ly1A0dDzQy+Rq7iLcRyFcmVXTdh2kev5oS/ziTAKYjeS81MUu+FwaGYJ` +
		`GCWhlwSe7VRPWEZhgHz5iNXY8iuetodwoMQY/YdyKyZ72Rj5Uk6YyMxDivEC2wMP+b` +
		`EWH6BASfdgAx5KhkOl3i+d0LeZGKBANQU2jlAAQ+RqvupVKW2oF6NYC1IM1FPPGRna` +
		`meMjT5uDMYqV3VJCiKU5gMOKm5Jq4hkgX1mpBEo9e4KrhXmLSZ1hF6FhonkEKAqVvT` +
		`JNVLiHQxujQDVGgJFne2iomR8HAcZyQ1x9BrfiFcnQCKtw6HKXXAiRprMD5GFtjIOR` +
		`esBSD+U3M/xcHWgyepJKxE5d20VJBTYK6xgNtVUGC8dFsebh7LAMe/QcIrnAoED718` +
		`HaUYEcNBV8bh147nFQdcesZFx5z9XBj9UUspMCeQN5vJPsndC8dxJMs7PWWENqPVnF` +
		`KJa2eqEtc5dQPpi7EVdl8nKSlDRqKrGdGCL12nSBF+r8xwlRHNquZqpeTLpASZC8XF` +
		`t+67N2NOCbuVkiyVmaAVuX8FO6Sfm0pCuxL8xU77ycjq39d/QTl0L0i8lrmdIC5iXN` +
		`Wks78uu+gLKjf1uWrIQl4Tydk31NqOoqXVJTWSYn3W/CyoyUJANdN6oKQAYDo8drVo` +
		`iS5aYXdyKmosw/smJeS6j51l8a50dS+em6LEkh8i2kU0E3BDgr5ob+DQGqEFdz1x0k` +
		`20+yHUrC6S/EulVvDRsaTNJSqGPnIy6v1IeajX7t4JNP1ss2NrJ9z0W+tTM56nlXsn` +
		`lJ6orqkcRV/f2Y4Uk1SZ6uuMx2K3HSFW91G/BlmufWrXvj4dMMsnWZCsqKBoc3VeOO` +
		`hXeDvQMWZhmxdje/p2K6gAkR94QUoIrd3Gr428RGivpMyT1M2MMHwles4HRDrFNQ7s` +
		`jfSQcfgKhGqfQv5SAWBKoKtpqgDuINYDRZC8EKZb8uUux2DaqSqfcPzS5VTbTSRBeH` +
		`zymQHnIBGK05gYecFj/f6Ory/+2LJbejwZqTI8l6Omo2aRP6g+QAu4+6YHQaD95G8O` +
		`TW76Q+uf3flez+SDHT/okiKJ8bgKrWc00AWkfoKk+3NqgaNRAxRZ1j8y5Pt6S8YHTq` +
		`DvL/HQjrirya7MdWC+2TY60UeATSJy0qia4XVDZ90K9/dKuqiww7R+m3thsoz2Wg0u` +
		`BppwgdwB8FW3VNkepMpsKlhfbpZ0sl8xmAuCvJhrL1UcpiRsmOpA6U9j5PHx4l2TwL` +
		`KD+Sh6P0wwBE36WpwGihfXIglALPAcQHsmSbrrW01ARfEoxJWjwLFq/VIdppKKpDtg` +
		`qJNuonh0Kr8KQZxgE071lGurIHmZB8/7d/vn97AzNaZJDKnYMgJdynWxAMBJvPcwJi` +
		`QXnbnvFA0oeqRlFh/El31mUBWLKjBasRqYrqjc79v+gqV1Vafpeb2mx7WyjTvog1+6` +
		`LMNaKvLwyqCu1BGKjW3jBQVC8iDLQV1wwDxfELhcFBNfoCsw5d3u70j1VNuOl0XYlt` +
		`c/pBQqfoznL79aA6nd1pW9oxakXplPvbrDwRAM9mV18QXGTgueHxenejqxkf1aWf/g` +
		`CpCF9KhOwuqF09RCrGXy5Gjq5hXS9ITjboV5WMkCIDNgPjILz+SQSYJyjqpPHz4dFi` +
		`faa6oeT+riKzDk/XSSGOz1B25yL5iaPN3be3hSgp4TBnsCAlOcyK+g+AVumcFvpsV5` +
		`DlKk8FabdhT1hbYPQ9inxz1M1oycVdOu9aaQ2a7+Xjxan3bt/ZI6dJJvem6HxRakjo` +
		`CobqX08rRtst4AHuVlVuyHrU3JPITdLFYORpL+B7knfpWXCfPD5UwU8KUW73IXRP8x` +
		`wmRH6fkgxoIVgzpk8EmRHW2xpezor5B3Z/WLc6YbukrgZrx17jYF0ged454a/y1oPJ` +
		`Z5gBO47xft+sdzECrdv7Z8Hg9Kb9qhP/cRzdlZRdNYhKynCddUg49bZ2Bf9Zk/V+Ql` +
		`mVlH0JoE+fIz5zrEmgvCOg9M2xF4JVdY3txcDlH8Glr6W9ELiqO3JfZBi/PkawXnJ2` +
		`3z81Lhs0WnuuGrQwe9W8dNBs7rty0Mavcfmg0dpz9aCF2ZvDCv/hh5qld+O33BQ4p+` +
		`6vyrc9GXFVem7Jh08s8Pty9Hfswbh18mAmB23ZcqWO8Tvq4ysA+19Na+pP+tje+PW0` +
		`/r1+az28sa1eT5ZUtNbV/0hl89PgfyB8ne+DW+Zr9OCuTxP3UnW4fG+y63+QW7YGlC` +
		`Z9GXnjpUnEWVzhMMzKV1lWT/lpll2UScBVp3w4HZFpdnrPDqfmfeg4nmhdLh+JYDMd` +
		`e7EYdmVlLwJD7xDDRqLWqvMLgbYniXsR6PqH6DbyupeMbk/Od0102xKfP/PEl5wnmq` +
		`ngG1qSqWDG2n1eNpjt+r0zYezISOoOUBFdmJW0Cm5mHfWn81OPusvVz62yvPWCIzzH` +
		`jq/zCuOzbpCzXOZKt99eYz+591XHZFET/ZguyXFkyNZ68MiXywZPe4Fi/481DSYs26` +
		`qX0UD/A2f/DQAA///SQou28UwAAA==`)
	container["templates/javascript.js"] = decode(`` +
		`H4sICAAAAAAA/2RHVnRjR3hoZEdWelhHcGhkbUZ6WTNKcGNIUXVhbk09ANxc73IbN5` +
		`L/rqfozN46Q4siJdm53ZNMp7K2U+errOOyUrtX5XLtQjNNEtEQYACMKG2ir/cA94j3` +
		`JFfdAGYwwyEl+bJ1W5sP8RDobnQDje4f/ulaGKj0AmYwr1XhpFb5yi5G8PMBQKGV1R` +
		`VOKr3gwvODu/MDYijxsh5mkXPI56KyOIIO13QKdqmNg7k2UOqiXqFykwW6NxXS5x9u` +
		`35a5LEcsHlPRsvSSDbraqH283BC1tHRubc+mU+tEcaWv0cwrvZkUejX9qUZLUu30d8` +
		`+fP3/+1cl0qTdHTh8t0B25JR6JwtWiOjKoSjRYHs21ckebJaoj6eyR0u6oxLlUWB5J` +
		`dVRYy/oW1qYao1drDGuj12jcbceAjVSl3pD6r/RqXTssL9xthS2XqqtqRPXvA/ufRF` +
		`Vj3gh7lJknJ78/fX4yLURV1JVweOTwxh1tZOmWRxvplkc/imthCyPXbnp6cnzy1bN/` +
		`e/ab+MHGLdD9gDfuz8SSWkmCxkD9cyH/ht7E6ZQcYCGvUY2htgiFKJZYQiHUtbA89p` +
		`foHBpYo5lrsxKqQM+HlcUxFAaFQ1C4CTwHANzDXsDsAAA6Gk1CzS+/cFU+VDdrncbL` +
		`D36TZ54gG43OQztkzrdiJavbobaS2sH2Um5yihzz7FKXt9loDBl70pxrkwYLragjiZ` +
		`518X7BZXl2WmZMGIhYPg1B6HM4hGx9AxkcJnpHwSt0RhZkfOReobC1QVKXB49FB6cM` +
		`1BN2jEdN2ElRCWu/k9ZNRFnm/MvPYlGWRdWbGGMoKut9BastVvu4WJHwm1Xaslk9uG` +
		`GDK32NbdvEvpQldrk9ozeIhWVEk7Usdqk3QyysySBHKa24rAbbwWoSakuYQRa/s4YX` +
		`1QNZs45Nb8uhuEo1OdLPrjnD1FTTpw4tDjOEyj6PN2GYxdelHAfTpwfwFOxGumJJIW` +
		`SzQQWlnM/RoHJwLXFjD+Dp9IBSVvgNsxiT6CcoscIzuKyd0wrevqZpInHzvhK3lbTu` +
		`DDL6JxuH8gsUplieQWb5oyl/LQ0WTpvbM8gujd5YNFnaa3+iphKbiKcT/psaXwqcJr` +
		`OlUGWFZzSVmeOcq8j/c5J8BVJ5oyIX2xX6dhr8gc30Blp4wupM2ZepInD5/sEKZoD5` +
		`VWgHYs/mV618gEJYz3sGfkpuYCVcsZRqkYpsjCAKNqGVy7LZZapOWeMy3EH249WnTv` +
		`WlQXHVFpQ4F3XlzhIKSn+yLBG0W6KxfVW4bkAX7+xdXaIrPkCVu4P2/9QlayykqEDw` +
		`iFq4FBZL0ArcEsFihYVrOyp2cesRTR9nHc/KWjsLvVoJVebB1bIxZNnonJtGVYKIBA` +
		`eD2rayvTcnggmmsbvMZh2KdPh7zhJmAqWPrNt/1cTbmveL57qobVp6N6QoFd75aR7S` +
		`xptr9Ikujd/udo1jmKsWZ2I1icQUy1GhifoPVOVRwBg8QKXW7xh3JEzOiWLJfHmmFT` +
		`lQ0y7TR+z1AS1l4GutS6190vElPa1XUn17MYaVuPn2wivHMIOCE5fFdO0YA2A1kUqh` +
		`+fcf/vhdk8jFTcRenLkkKg83iGCzlBVCPrfwcubbgidPOqAldwzT7IhQgoWXjbzYVX` +
		`MLRzM49dYFAG/hhZeWEAX5fswapZ4SKznkBkFUld6AVghrsUA/xEzNBppaFcJxXuL+` +
		`94KCAe7GTSpUC7eEl/D7R9sQZr3TGiqtFmeMiVyAOPSf715qxVaywPx4DEmTR3DSUi` +
		`Z6OlPjeTLlqW+a+rbtdNT2tvKMDMieLLGq5Po8S9zfp25LC4FJA+9mZCxjPJ/Hp08T` +
		`RzOJp0HeSTFe7bvzg6fTHQx564o8uwdAlv3D7StCSe/ECvPMi8ga2Crpg9OThBkcn4` +
		`OEF2SBN/Uc5OFh7B/PmmP1UX4aw8npGE5+n8wl7xtysUDzYWsGeRlhxVRKu6b042cn` +
		`LRHCPI3K+cgYhMX5iERjm6Cs1QKsq+fzpvGN/YsoSzOGjfVTuxtaI+cGL60urtD5FV` +
		`+oTHQtVuUYSuFEG6C+oHwd8370efLUn6GhhjvujI2dULv5f1x8/25inZFqIee3ROhb` +
		`Oms5ziJfCuCbMScLNkas12jAab8IC8oKC0KBVkUliyuiwxuxWld4RtF9XYnbbDQJtT` +
		`CDS6dexfTDlWM48fC6rdlj/y64E8pjZmu5zts0MJ2CgDlu4MtFpS9FZb8kU5wRxRWP` +
		`xdroAi1ZU0JRG4aA1tHCUc89QSVu0fjl6+vaCJ4kMziZHHuktnhTibXlOX7clF2wBA` +
		`8aScAZZGtRU9YNWyE1AUgexzEbuEbhkgIr1aLqUAhV6lVKwbHpmD4V3rjwM8LHxRtj` +
		`tKFA+/FTKIno9FtZYVphUJQEWi6w0KrsLHWuRVVjO71XkgxfC2PxrXK+Fqbwr8fNVL` +
		`ZYbFP8NlKQGxPFCzg5jkPoObJjCrIWi5g54lJSKgpaZ01tNO89JYUZnPgBdktpG60t` +
		`mFrx/gBeo+FxXaCzUIiKVjJUeEvCtCrZqdclDZVbIntxGEviKuNgS8XbC/wdnIJQ2r` +
		`UPAayQl/Le6IXB7gZOWIbkWRCdjToBvtf7efQm7jDMs6jEfWzRM5uO9i740U+3T4zN` +
		`+JPzYXTZF61LxwGZTkGqwnDcDtjT+4WcsycTYKfeUdrBXCppl+ghYyP0kMelRQADml` +
		`in1w0+pIAROi4bhby1CSglO/5tto2t9jA0HQjT1LancHJ8TK4UxNEEQveDXKGuXd4d` +
		`vTHRHo9aFEmLDp5POzc2W2C7ElIxbdaMxMou4AtaQEeDw+ScrGu7DLuaXqXpFL59+5` +
		`9/fHMGldZXFupFddvMrHVYhIffzjS/o7yVWOdDcxeY+nDGQg6Ba87D7GOpLy4NTF/6` +
		`nvGO10Uh1pnzg3Tx1e2+rbjMox6UapDYcQtyYp1dynmC9Jt+zrO4KrjbJW82SwXSUs` +
		`xzJnx3Y/iqO5AN2fYE3TuKve7wvd4u/6J470bk7XUnBLSJjPe68ywl9C20I09JNgZ0` +
		`yLVpfshyRPFqKRfLSi6WfnJSpY9C0YQ44MJxmoAmjI3DuoRnh/8REtE4JFPKQeGbs4` +
		`3/9qkofGu18F9RK56bM8667Ipp4oupL1GmSX0DTZ91VIgZMG0+JsGOepz4thU766gY` +
		`+tj3/1/T/s//5WfW7270Vx6JuLTmwuhhfvXrM/hZWkIhLa6EnV4sKqQ0+54Ig4To3C` +
		`l2iEPS1LUQIoxPrEmWtr5FjpyxRfqRD7bASGRLeFLaCA5xp02DsNIlQuFMdQDwMQsD` +
		`lY0h88NDX35QuIyHIvu0J/iEqfW62aTEAAwOIQuFcboH0jdqm9KXRcIkrzDFpzYW+C` +
		`gVBDed42erFxJjRJpTIkWfz0vr8oUw2Z323zAiuKBZOzj1w+yEuaxwDMI4ad0YnHT8` +
		`s7qsV3+JhfxrDGttJQ9nOsEwz2hoqJ1sNGF2ak9WGGq9kB5c8IWBgpl6BFwWJVDz3X` +
		`q2m8vhEHIvjXJaqjd8DdmLzaV5+ZHQWqfmELJPGZxB1hxBJLHW75q36bIxezaDo5M4` +
		`rs3WbzWw16LSKg7Xw0uP0FTbtROnL3h9lI96y0iFG+rjd7rsHSCOAZUzt2NQ5qED2x` +
		`/fBljSwLK0mNWVbw7DiYRWSArktCBj/ah++8ChOQ4IBH2v4EJJAUCWcAjKNIU/1Whu` +
		`L3jDjbLubyhcvsKq+ma/E+3l/WGfe02noFV16zeAvUMFH5FzkO5L227E36vj39tN97` +
		`b++mG4vExheVjUkNw2eqzFQqoYths/W4sFjqES1r3nr2JVXjjT7gbEGpokJ73lsKqr` +
		`Kkb2jlNlbVvZ57nX2uC11LUNyy/emjvyaJ+ybVp8GIqHOjGss4m813+BNZvS4EQjm8` +
		`jQNzgGhcFG5tLY0MTOkPEgxh1GJGTD4caP2Riyk2yUroc6nfjigdakTI81aIB3h01d` +
		`ymGz4oGAty78ShmToMq1HeMbN3nZDO+D7I98j7W9x7fD7pbqETZHpr32Rp99lLGR+L` +
		`HG9vh2GNtSPcLYyLTT2OHg5jfXPqBda2U7mVRf/tjNn/5sxG9Hwgz05Y/tDmdaF5af` +
		`AaZTTRelI6/bUpQu1Vy3mLlZZDY7hYNA+xqNpUB5lh4K/PH9a7LJ6UJXECj8AcF+YR` +
		`4iNrI66w/inFj+9qZB2OII+3W9CJll534lU6FD0FUJkTDi/c5GX7NehuNGeNw945bX` +
		`IcBGd/FBOKSJvCHxvT9pM1Kw6QPy/aD2FI8nOcn5YuZvHyWngF2rxHqNqmTiUXsoGj` +
		`5oSUKLFqdhLhe1QdA1g4QNLXp9BYOItZG6Oaim5bJuznb9DSK/mTub8WoJnjwJe3fU` +
		`OyAtWHRU+FONtd/kfzE7hf/5r/8GpbsNhTYeI1tpx/JJ3D0yvmhlbKtSai9qUETYN5` +
		`AW3FI4KLQxWLiv4yzm2cUiwzkQjyMXxBOWDmkwCRK35H+wS5YYGmhFswCaRODJga5t` +
		`rrNEDChadi4JdKA0jWwL1ccgrV9j0dc7vHFd+Nx6X6Trnj/7+OTnjlZfht7s7eWC9A` +
		`c0yXRKD5p7U4v370jX5FQ6AVzJEqL1+zekb9YsImTC6q2/dIpaIf7BDF2958OVh5gc` +
		`c0wQ2TlRD/ePqI0xZO3YpZJ7C2SObF7U/qOdXaurfnd6zWkou3p3daM0u6VZ87Wjkz` +
		`6EReXeDEf/NWvCpGxA/6Y2UaKde3z+wOualbhCiimU7KSCAo0TUvGWioXcb5bAIXw9` +
		`Ghh1I/XJnmGn6mzQXYzUp/sZT3cyPtvP+KzvaV/E3fy48dMdOt5EicZs35aJ2u6seb` +
		`bf/fhEFQFv1pUIiyZxqa8xISElk58QdvJ4B543z+CXX9LoFXbmnzzpMsUZRdRt9Hwx` +
		`g9NRQtg1vjvjtnpgq/p0f/WzTvVAb7QoiEJlX5eAPY7PeqX3tOP/612aSuSdnP7uXo` +
		`l9w/ZLPP3qq3sl9ntyh8S7zq/IuytaGamzMWTUPkG4/WErEXh6j0DqokcJfHaPwOMH` +
		`ibsbCI8PQFwt6OxvZOa9vJ7ca0nuWORDsDfdsearXh/Q1pVrEHBzBSyU34dxPTEYpv` +
		`4ctOoF+GXPA6FqT8FhuOr/bY4WfoYFY4Oz/nn7XadVD64S+cPHWp0jMaUd35ac61qV` +
		`2ZYK2yIfBbeGwJSvH0Izvp0BLLOdZL4py10pxppvynJnZtqZC635zFzoGT8jF3rG/4` +
		`9c2M198Z53uHg814bHzoKoDIryNsLX3oow6tuDr1IVVV2i9RC2nz5adGOXuq5KvpRX` +
		`liBi606Dx04gHcyNXnWa/npXZvumLHdELQjukgTDrZPlBwjcuhaUibLMxtAD6uFQMH` +
		`xuJ9c4El78P984/Or4pLdK6CXeh4zkr63SoCe872X9fW4xmPH/4SyJcONBljz7R7bk` +
		`+F477g4em6F3g5Zt1OIBSxkvz39HqClBLN2KLcjSz+9LYd8Lg6qzum0PYzrSfCodPJ` +
		`Rp+fwZXlZWH/TGS856BPHkLwAhIjnvYIlu5+xYPjeavRMrHDhhC8PctuEXUfB1p+wM` +
		`sskkS0Lnx77kMWS/Kas/+OcI/RsEXZ8c0PN61wXT5n1Dok26rEy+9+7ClxXDk4R8wA` +
		`f2oUJuv8PwcEwWdrwj83gnSIsbTl1oQux8066RkG136Of44bYn0pSVKYF/pxZ2b9qz` +
		`w891ubYTUin/F2f6XHeK7XWDU+dXgyd3QcngVL3I/Mig/CC8s0PdvaDnUVj/EVZvIf` +
		`1/Ghi1DwP9PUZ1f3KMXw8MVDtX8nfba/q79DpsXZUfcG7QLtsXOFSl16j+jJcX/Lhh` +
		`4PGF9c4FDU0eXkzEdwtakYjOw6frJn+G25Pfv3/zLvrS1sVPvmOeKpg+6yl4m2BisN` +
		`KizP0Tj7k2BYIJ1jgNC3RQCYfWwdKtKkBXHED7tCyoWVS6e565reer776/eBMV9aaH` +
		`mxm9dT3NH4UsJr7nAYOx0J9KPI/3sJsXP6NGUmc02ndGyQ3dzriM4bm/Fpvas0Jr/a` +
		`ngkEW9c1z/soSv+RPVhA8/ewKxf882EecPdfHaBUdrn2qEOUrTDqbAFy5h6k/GSo1W` +
		`felgo80VCAt4s8bCYQk51fABWXi7Gk8DRVXxJHZyhf61CQvacsswXv5S+jnfegyPNS` +
		`AzGG8/cnU4j6B/45WHkGz8o+jI7g9C4uGCp/APofdRxNej7dPmtT8KGlZ43ZwEfUz0` +
		`HJTc1S4ad49JXYUfyDRgA4/iTiNYbr+R+4148MB0rHgw17YZveu9qUHJXeH2knH/Ov` +
		`Aj7hmnt4rpx+AW6/adZPBdPUDtg3d4+7b1mDWjcEi5ZWuqhujsgeLGZqOJfzxAZlKK` +
		`9omSH0grkGpdO5hLrEr/Bw78kzrfqp9K8m/U9+ENIau5TaaNROU4UhdLoRZdjgPoJp` +
		`mwkOu+4AiF0ymn+JiFnQ6Pf3x8ONj7Jh7bF9xJGo+v8sNr9zvvU373bwx770rvuyE9` +
		`cM15GIwy2Rgy7FyGHrpPvZ+/TK9dhxMAgnr15Uq6+Hx7CL4kQbyPT+IfN+g/7/Yu02` +
		`aHfvW2O17hbb1O/BFyfniZvi4ZbKN9a/IseRT/CP3au93sPP5Yd+5QQYWitHwVBFVJ` +
		`Kdm/jOJDCbeRBa/Vwt/KqJWTFbyFuVQl554gTcNc3oAkGDt9OtAR0d9/5f5+Oj3oZZ` +
		`wmU9wb0smnKxSq772sELdz0B6CBje8x/U6Phciklb8ur9reDLiHG34nhEI8EDH30wh` +
		`HGD1CiH8+QwLOU5gMYFXS6NXOAJbW4K9oGsTJcWnYwk+at8OHnRcpnvFaewvTm3dGY` +
		`+xprlQkv4tkPBs6m2ZZ2kx//GWkcc8qOcH/xsAAP//PHKQdTpLAAA=`)
	container["templates/style.css"] = decode(`` +
		`H4sICAAAAAAA/2RHVnRjR3hoZEdWelhITjBlV3hsTG1OemN3PT0AtFp7b+O4Ef/fn4` +
		`LV4YrEWNtJbtPbOCjQNt0CBbrXYFMUBYr7g5ZGNhuKVCnKj1vkuxd8SSQtyk7Sw+Ec` +
		`k/Pk8DfDIb2LKfrLX//15fMSUc6f2xq1DZQtRX+ooCAY/bcFQaBB08VksuLFAX2bIN` +
		`TLrEBKEKjkTKIGKOSScKaZNZcmzEpcEXpYouwrX3HJ0RfOePYBVZzxpsY53E8XkyNW` +
		`st5I4G2TfUB5KxqyhfuJ42rIL7BEN5/q/f0EoQqLNWFL9NEMa1wUhK2X6MqMc065WK` +
		`ItFhezWckFrAVvWXGpaCucP5uhY+hnLu8nL5OJDcNFRdhsRwq5WaIff/ep3l/qQHQR` +
		`Uav1lX0HpfrPrGzQ6xelnbC6lf+Whxp+n0nYy+znD8Eca6sViHi2xk2z46LIfta2rV` +
		`vXV1ff6zVxUYBYout6jxpOSZFYumabCVyQtumCt+J75aeOn+VYcU2Z7WD1TORshKPi` +
		`v4yQvRhcQ6WDu5iinFcVZ6iRB2pQNl+RtV6Wz3+jlvYymcxXnBY9dQcKJcoQLQxd7V` +
		`ZbHclfOfmmwpTG5Kv5j7fWoznJOTN0QukSMc7g3ouxYkNoY+3aId+CKCnfLdGGFAUw` +
		`NVeQpqb4sEQryvNnNdNIwZ8hAURDdAj79L03RwmD/3AFcM3u4qBCC4VLR1wUCBsGG3` +
		`b0W9SARHIDHsqRxqNDyM1bEOKy7doMF1Obb7MVl5JXhs8UgOPsym8vnf/7r9DUnKnE` +
		`dotodkTmG8LWqqzsAJjK3bZi6KLiK0LhEmFWIMF36KKA5lny+tIsqAt2ScFgjcJ+Vh` +
		`Bh6tHS6lEUTMmazYiEqlmiHJgEYTzakMI4UvOGGCm8ajhtJaDfkKrmQmImlQrJ6yWa` +
		`3d3d3dX7iEShlMM0ZaIWhNuycVaKmlDPhAGbjv/LZLJqpbQY7UrdTbg3N8fJ3LIG5P` +
		`17N380DVQBm+n49pGN8uzOcKaBYRa33KiUMqE6xVryvG3OYy1Ig1fUJg2vcU7kQXl1` +
		`e3RM5B8Tx0N+c86xMADvY0wKvuvOASXwYLDuEpru8KFxCfA6lLsE47tIm0qd81RZ50` +
		`KAeXrnJTZB34KQJMfUbbzktWHMwRbayJYp+xUmDK0F0RVprkcBryIpB9TfmYSqpljC` +
		`zCzQwBFdl8LBMuTCAnCz1DHP5trSZyG4QPPMn3vgTApOB2aBSTTPztnmzu9zHfVbJ4` +
		`oPvJXIdgjJJQwvIrWMwYU4kPVavrmgKUPLXn0M+u/K8rq8Lu87cWduQIElhbzKhQQv` +
		`2LK4mCJgBeJlCAqHEmcxAIvvxrmYwa3k5kNtSDcax08uBf0ngR1SX544W498yd4l8k` +
		`jxAQTyvs714AsvoPuS2dxyJqLQuvmeS1sb4FLzPddniuvG1sWI0ZK84v/R1PCgrt+a` +
		`OXO4NkDLpdrT1KHgzP65FVjfFwbsOtqx4TOOmZQ7zrAN8IBZQ+k5dfQH+NT8AHpjsO` +
		`oO121Wh+Bg+14D3/Ow+jfSyAiLT4BFvokm/yT4roHMP8l/cG2wryuFMkULuY2ZFL+h` +
		`hhLGh5SEoUZxPoqnC7Ld1SDM3k6/vk6EH6ng++mrPj1fniSvveGjgC3hbeNN/QR76Q` +
		`2/QsW34E08UMAsM432yc1P+nBUZhKeZOaMmi6iTNEqk9miPuPc0itPSjz1XcKxS2k7` +
		`liOW1DFMSilqLGHDnJQx9FhK70VaSJMHsBrB0qFVV5YAq12teQdSx0GqLDxw1rRVf6` +
		`R8hRqw7IZPhK2pR8Ws4FUWFkSnIlEXLTmUsWYSIoYaSlhPEhKGGtnQziZtaKqRkHy9` +
		`pvB3s5v6QCkg5+bEUXelAoS6dg/sZrBtbi/1KbsWpNvK7tjtGmjbALpC+9GdUa/aa9` +
		`e4jJ8DOJdkC8qFfxBJAZ0YZ7HUH4VUVf/kxLEgXbUVOjH2apFrO3qOR8HXApoGBT2A` +
		`hV+8jmifI3K6VfDbAr8lOVpw0oChv8uCDk3agCK/R38XyKQJx/GKJ8Nhs0NWC7JNXM` +
		`mD99U+H67mtrtz7w72ZWHMoReVfhg1KtcIQxhRtWkqBdWUu/2+6XqQLqNKtevyGr1k` +
		`wvWXB6A0815t/OewM66Svsvn+/h2L4f9dDdF54331uRhJL4lmkfSl15s3tkcenlZTM` +
		`8CnHmqPPlArzFgXi64OERA6ObfhIZRIHSqXZz7ifch4cjns5x8h5vjUAjcGcDD1Qge` +
		`AtlxUJxVgnyViZeImB4JuUepQQmgdKTM1XhNWH9f/ZWeHVBWEtHIR7wGVNuGVw/yVg` +
		`hghsBgb75QbFiz2ENvoyzEugdgV3LtxMtk3luMQtMR4rA0EgsjG/gYifu0tAZ/YXHr` +
		`1pNSG5N6YZh3MYp0uvnEA8HchTSWc/PJhwVXXmNBN/+abs9v9NzvK/pnh5tTD57Omm` +
		`mR3KjrpEIm2+eEw5hHdyrB6Jy30cUU2d9ozAtnGJ7Rhbv/XQBGD7luqSi1qMB/r6X0` +
		`z7peTWLzupYy1XpF1hNq+sbxpJ6hBjEgnqMl9cIW0+M80u1XImV7RNomzf02sJiilm` +
		`1BkJKUYO5Hc3USk+MnSDttnLWD//8RbRW7k8IOPzMpDllgOnGWhNRX5u94moaqHwWp` +
		`sDhkQ7QnyDkrsHP5RPMwsKBTudZngh+gRCw07a2VLB0OpUpZMDnoRlHVctM2xcJhzK` +
		`PTJxhZju64/wlXgIJRFj0kf7L/auCVle4ojMng/FAKdFMK/fd0xXM/8AwHK47KcQAS` +
		`cR2Pyfkjr6SGHsZdgU+8D/iHi2dIjSSGymRADPlTBTGma6mCbL3itGRyM8s3hBYXsA` +
		`V2+UHT7ZUnJp74QXpcc9wgj1sa6qaPf8weM8qLIrkaRUst5hy9565liHdgKbfdpQ94` +
		`qfLtfwEAAP//RqhdtL8mAAA=`)
	container["templates/theme-default.css"] = decode(`` +
		`H4sICAAAAAAA/2RHVnRjR3hoZEdWelhIUm9aVzFsTFdSbFptRjFiSFF1WTNOegBcik` +
		`EOgjAURPc9xSTdkZSqqGnKacpvESL4SVvThfHuBiQunLd7b2xkzngJQFcgXsbg0Uee` +
		`MeS8JKt1KaUuTaKBeUo18aynsdOlUXkIc1Ax+JpSQqWFAJTqHN1vkZ8PbyFDv9Juoe` +
		`cYfuGw7RvoaCGNN2RoFycLeTUruzj/Py4W0jlnnGnF+xMAAP//Q68dl8MAAAA=`)
	container["templates/theme-juri.css"] = decode(`` +
		`H4sICAAAAAAA/2RHVnRjR3hoZEdWelhIUm9aVzFsTFdwMWNta3VZM056ADzMQQ6DIB` +
		`CF4T2nmMSdCaJVUfE0OkA11Y4BGhZN795oSWf5f5OnHFGANwMQOSAdq9FgHe2whHB4` +
		`JUSMsYi1x4Vo8wXSLrZ1FrHmYTG74c7oAr2HXDAGwPk84ePu6PXUCrJOo+7b8QJLzv` +
		`yhvO4HWCnIZIlGzincFGT9oJuhSqE5P5oB5ZRCe45LtJ0d2ecbAAD//9Kzz8TDAAAA`)
	container["templates/favicon.ico"] = decode(`` +
		`H4sICAAAAAAA/2RHVnRjR3hoZEdWelhHWmhkbWxqYjI0dWFXTnYA7JhtSORVFMZ/M0` +
		`pJjS9QgRUxQ6G9EkKU+iGmDxYEQdLbh6IoiOjFwkIwM5qRIAqEwYygAokKNLCSXiAo` +
		`ybQyK8iVdZWFdVnd1X1xd51dlh13Z/+zXHkGrpeBda4L7gcPXP7e555zn+M995xzGQ` +
		`gRJhYLEyJEXQhqgVjM4DEGquCJENxiMOA+WNO71CW3xbL+vGJbfRzb4icmjL9oTAD/` +
		`AVPAHuAYsF9/z2l+ClgRNiP9P2Tf4sFfY66y9p7Ufn8Du4WPW/59C0wL/w0Yk/4+YS` +
		`948F8l2/ccPCn8Wgf/UPjlFtYh7HYP/jCQBT518N4CPEa+VAxs+RE4rr185AjwjYP1` +
		`AycK6P4AHLDmplAeBX7y5DayF9gFPG6NHcBhBzNjFpi35m/onD7YBP+i9tjMeMaTOy` +
		`77j4AmZzxXAHPHoOyv9uT/GjgDXGdhJqZtwKryM6zvY8C7QB9QLt0hxd9HqsXdb2El` +
		`wPfWub6p3MzPTa7cb+mbGvSnJ/872vNeB7/ROtd/lYP/a/6WpVcq//s8uEtVW6cc3M` +
		`7heuAv+XMrMKDY5KVWPrV78D8i2xctrFy51aPWnvenyrG9Qd8GIJCPFUXy/6r6Ytu1` +
		`OHEedGrqFcD7OvOEsFYPH2pk02thIdUg00vuAb4Qz7DW69XzjG+H9H3b04fXZX+3hT` +
		`UJ67CwHu17B/CZzuRJncOwlR8oX3OqhxeSvG6thX0HnAausbAHpPeJ+vCstVYh/WnN` +
		`83exzYPf1K6zqsM3CbsTWFKvexBI6z7kpVl7vHIR+I08pf9nGXhVNW1FtSGiuzonX8` +
		`2b4R9h5Zvgd98L9VYvMj35LmvtYeCc6tFB3YtOa70Y/kdlP1ngfXO9evxtBew6xTGv` +
		`u2FLSmsvbYDfyNPKL9P7b96gjcnRl4FKB+8S95Dq6kblId0vE+vGIuxseU3cpp6Ved` +
		`g3iv+kzvB51Z+Io1eqGDcr5z/XHQz0/r7S038U6xnnPROo3v0M7NRbwF5fFf5VgXj4` +
		`SpXyzfSkj4FRvTUn9P+2Kw9qiozztmyh2L8ZBBBdGw0L0aBhKZprXIznYG0EZtSFE9` +
		`lnL0tkWyOJzHIkkRlti2dGRqPpZFdluptUurs6lS6rTqWTpNK/d6VWFsZSmcR4ZTYe` +
		`RIOSpNknkRspWfc7xfkAAAD//yhdGif+EQAA`)
}

// Content for the given filename
func Content(filename string) (*[]byte, error) {
	if content, ok := container[filename]; ok {
		return content, nil
	}
	return nil, fmt.Errorf("file2go %s not found", filename)
}

// ContentMust for the given filename, panics if filename not found
func ContentMust(filename string) *[]byte {
	content, err := Content(filename)
	if err != nil {
		log.Panic(err)
	}
	return content
}

// eof
