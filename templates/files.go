// Code generated by "file2go -output templates/files.go templates/index.html templates/javascript.js templates/style.css templates/theme-default.css templates/theme-juri.css"; DO NOT EDIT.

// Encoded files:
// → templates/index.html
// → templates/javascript.js
// → templates/style.css
// → templates/theme-default.css
// → templates/theme-juri.css

package templates

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"io/ioutil"
	"time"
)

// file stores the content and modTime of the decoded string
type file struct {
	content *[]byte
	modTime *time.Time
}

var container map[string]*file

// Init populates *file with data decoded from base64Encoded string
func decode(base64Encoded string) (*file, error) {
  gzipEncoded, err := base64.StdEncoding.DecodeString(base64Encoded)
	if err != nil {
		return nil, fmt.Errorf("failed to decode data(BASE64): %s", err)
	}

	var buf bytes.Buffer
	_, err = buf.Write(gzipEncoded)
	if err != nil {
		return nil, fmt.Errorf("failed buffer decode data: %s", err)
	}

	zr, err := gzip.NewReader(&buf)
	if err != nil {
		return nil, fmt.Errorf("failed to create reader from buffer: %s", err)
	}
	defer zr.Close()

  decoded, err := ioutil.ReadAll(zr)
	if err != nil {
		return nil, fmt.Errorf("failed to decode data(GZIP): %s", err)
	}

	return &file{
		content: &decoded,
		modTime: &zr.ModTime,
	}, nil
}

func init() {
  container = make(map[string]*file)
  var err error
  
  container["templates/index.html"], err = decode(`` +
    `H4sICPaksVwA/2FXNWtaWGd1YUhSdGJBPT0A7Fvdj+O2EX/PXzFRXxpEkkXJsq2Ftc` +
    `Xl7toUyKWLvcP2442WaJuJJKokba8T5H8vSMqyZMtfG+/uXRHgcF5Rw/n4zZAcztjj` +
    `r9/94+2nf9+9h7nMs9uvxuoDMlzMYosU1u1XAOM5wan6A2CcE4khmWMuiIythZw6I6` +
    `v5qsA5ia2cTWhGnBWZOLgsnQSXeJIRCxJWSFLI2FoT0TFtScmqZFw2CFc0lfM4JUua` +
    `EEc/2EALKinOHJHgjMTI1nwAxJzT4mdHMmdKZVywjYCMFj8DJ1lsCbnOiJgTIi2Ycz` +
    `KtRtxEiHOI5ZzkxEnJFC8y2Zz0teM0ZhviuZSluOn1pqyQwp0xNssILqlwE5b3EiH+` +
    `MsU5zdbxPZswyb79wApmVYbsir+txh3n9uli6GwuCVuI40LGksqM3P6TTODD3dtxzz` +
    `yqGOhtgmA8YekaaBpb6o8GBFBiIaDEHOdEEi5gylkOOaaFO2MgGcxpmpICaFEuJEwp` +
    `yVKxtSmlS0gyLERszWlKaqPHhlzJWwkL5LoksSXJo7RgibMFia1ff3VX4rffNpr0Ur` +
    `q8/Wqr1ceHvwFNWGFkmXGxnAHmFDtGpdiSfEEsmLJkIVSkxtYUZ4JYoAGKrZSKMsPr` +
    `m4IVDc3EOp+wTKumBDgJ5YmKchXG37HH2PLAA1/9q+cAjA0VJI+xhTwLkrX55LE1sm` +
    `7HPfO6ltEzQg7KVGqdklhiOYc0tj5AYAfwAGgIPwAa2siD/yiR6v35AvFCnLSRk0SC` +
    `WbpW34I5UdEXW6hvwaMeWcdWoEQrwrPnIb974kmdCxMuZ4Lkb0GKOjFqUSPUwHT0RE` +
    `w5WZ6vHxo1JKLTGkZbcv9p+gnJyktcPtq6bqQ9N9COG1zsOEEwT+bnQ6P85YYQ2GjY` +
    `AUlz5QVm5Q31wgvd8AlLL6PigqhSYfI99OEBAgiO+mugKdFIkR4PPTuqWEYQnWAZbV` +
    `geJ0Q2CiueKAQUnuCqiTXbfdKT+E1ZlhJ+LoI5+LYPcwghg8D23RDmoAWP4Hvwn7Lo` +
    `2Oq09BlIjgsxZTxXhwQuRIYl+bNnO/43DbqNnoKltGQpvTHHFOaJtR1Tceeg0O0Hfu` +
    `iFVmMyNIjWseW7Qy8IQhQ2JnOzirbPej118xASc7VrNshJkcaW16bXPnSQ76LIG0TI` +
    `HrrD0EfDYR/ewMAegAIEgYMiN/T9IBjaQ9eLgv6oP9y+bjF0fM8dRCPb8Vw0DHwPDY` +
    `MWo8CN+iNvhGwncBHykB8cYhQZkPpDuwsLVtZHdmtaw1WcSeUnByntv9mP4p0Nyx2G` +
    `2y1L7QZq04rU5zq2wo6Dqjc7O84muLhqSrC7BD21BPsHw78jTWGFWOQnz/DzAjpwB0` +
    `NvMBz4TVe0ohkF7iAIh4PRJdF8RixXALgR8vuRh2w0cgejfhg1wrfBEIHjuX0UoXAQ` +
    `BIrW88PIQ634dMOoP0KROlLdYRj5KOyMz9BFYaiWy8j3/SjoN3hEGzTs2mrIwBnYHv` +
    `zSNK8jUgOvI0wbu5862OyB3vYcdPFmV/ncSanOb9M/nP//4/w2pRvayA11er+XA23D` +
    `5FCccFISfDKraexXg9Z21e/crlp5l9pUGzOC46nXcT3PDufnVviaLhC0mF10ixxW+v` +
    `lHLGpoh+wB9NURHMISkH/5ZUDr9xTor6voVcMeFynLL0lF1VIcQAZ9dQDPYXA0UfZN` +
    `ojxSF7Zq6sWwGxUv28CfSddrIn/GzXKrW+iG9lDJ8mwfUN88Hb/PKEp1+T1qg1/ZMH` +
    `/KNSanaXp6vbaN6BsjkGes6J+wQk1BYT0nAzUpPG06ipTtF1s0YVKevxoq9VCl3tCY` +
    `pJ5Pqqd8+aDQP+2d4VnuGffEctYs/mUMp8AWHH7CSywSTku5LTlWz4InsbV97/4klB` +
    `Dz0OSVY1rAjNO0s2ip3m5Lgxv695wzDjkRAs/IttpZTVWI11RWk5OZN2E8JZykYCqi` +
    `VWmzwaAx4y0rJGdZ00MbEYnk2UdWzGoJNd/6TetmpJRPFpyTQmZrwImkSwKCFbOG/i` +
    `0BukpcczcTFNtPahw4EfQXYt3qp5YNLSaYS11Q2ePyRr+o2ZjHI3yyySLvYqPGt1zU` +
    `UzeTvZl3nM04qcv9exLL+v0+w4NqkgyXQu3jlTjlivdmDESOs8y69W58dJhBuuBYUl` +
    `a0OLyrBjcs/Bvk77BoFshrd4sVlckcJkSuCClAd2KE1fJ3Exsl6oGSFUzY4z0RJSsE` +
    `XRLrEJQb8h+Ug3dA1KtU+ZcKkHMCVXtFbz478QYwniykZIW235TfNuehrtGbk7E9pa` +
    `r2V5qo/c06q/S/ywVgvBAEHjNa/Hxjei9/2pYBb8e9hSB7ks121B4yJpwOkh3sPppS` +
    `6GE8RBfBs1u/kfrs9n/H2WpPsab9E03AXxqAqop5TQA6V2iZ4bUNuvsCRCbu0bV5l+` +
    `E14ResTjNB/X8EYdNr0pt9bHXQPjvWWoEnIH3QIk5MJayy6d48fulWVS26jaPMU1dv` +
    `9aUM1Bo87xZhAvijuk4c2SL1baPCpYP2+XdLLfMFgLjjZEnZYi9laUbJhqQOlO45zx` +
    `8enCxfBJQfyeNe+tEAxHSJKzA6aJ8dCK3ASwBxT3K2PHaWckPwmmBMcHFtLNQx+te/` +
    `/+vD+xvAaQqW7sxUVksGxmidhFa3n/1Lz97RvIPvB5aSY8duQ4UpLVLAKuWWhMMKr5` +
    `UOks1mmdKBiq7L1o6k+6psVbnpk5lsKkWQs72dvuViTfXOJM2vejxUxbff5ewu294X` +
    `2rRXsWZbp7tGDJ8Kg6povxMGevRkGGiqzyIMjBXXDAPN8ZXCYKdBcYFZuy7vdvrHqk` +
    `3Qdropznc5fScT0nQbt3dYdSV0DmdCRv1uWDqBOeTxLsMO+PzF7Drl94sMPDci3m76` +
    `+u2QqFq/p2OiInzFoNh8M+HqUVExfr2w2Ou/Xy8uDg6YR51ykCIFNoVGnbj+Liw0Cw` +
    `y6EPewW3mrS45LSlZ3FZm1W3wmhdwvMWzKBtmByt/m3ftCckoEzBjMCSe7uc+Z9RGt` +
    `PikkX4MkeZlhSWBFswwmRL1PSAq0kKytVbepTcXWta0qH7xnq93C/IHzWVFXcB/JCX` +
    `cWM8myo6u0zDorLy8Qw0fqFL8vbi9GoPP+8iIYHL6VXHXp7sfRHafsqkHEKUP1UWEu` +
    `Pur6UcJ/F2SxzQRLTtlrAH24UPLCsaaA8veAMk3fzwSrqgP92cAV7MFlOsqfCVxVe/` +
    `tVlvHbfQTrI2fz/lOrm9oaPdFL7WD2pt1VbQ+f6ql28Wt1V1ujJ3qrHcze7bYwd1/U` +
    `LP2boKMVek5jU/enTuQ0VW+tI6M5cMBv+23fscdGW/2xmRx05TuVOo2fQO33OLc/eD` +
    `LUn0xdsvHDJ/Nruc6GX+sutJjkVHY2Dr+kvuBh8O+JWGTb4Fb5Gt35MkMbd64nPCG7` +
    `rObv5JadAWVIP7u8UfA3aWrdfvvHTvYF7mTNzeod5SSRrBFd5+1X6WbeD00Yj6yZeg` +
    `JURBeum07B7XVRvzp/cdRTrr5C0qzzOwbwEjnJ0W8RvGgKl2bX2ye2vjqyWdREP+Kc` +
    `7EeGGq0Xj3q4bPF0F0G2vwTuTVi61g/jnvkB/P8CAAD//0qO/QERPwAA`)
  if err != nil {
  	panic(err)
  }
  container["templates/javascript.js"], err = decode(`` +
    `H4sICM4wslwA/2FtRjJZWE5qY21sd2RDNXFjdz09ALR773IbN5L4dz1FZ/JbZxhRpC` +
    `Qnv81RZlKJrdT5KnFcVmr3qlyu3dFMk0Q0BBgAI0qb6Os9wD3iPclVo4EZYDik5Oye` +
    `PthDoP8C/Q89mNtCQ62WMIdFI0srlMzXZjmC344ASiWNqnFSq6UbvDh6uDgihAqvm2` +
    `EUsYB8UdQGR5BgTadgVkpbWCgNlSqbNUo7WaK9rJEev7t/XeWiGjnyGJMWFVPWaBst` +
    `D+E6RsRpZe3GzKZTY4vyRt2iXtRqOynVevprg4aomumfv/jiiy++PJuu1PbEqpMl2h` +
    `O7wpOitE1Rn2iUFWqsThZK2pPtCuWJsOZEKntS4UJIrE6EPCmNcfKWxsQSI4s1ho1W` +
    `G9T2PlFgK2SltiT+S7XeNBarK3tfY4clm7oe0fxbj/6Xom4wb4l9lJpnZ1+df3E2LY` +
    `u6bOrC4onFO3uyFZVdnWyFXZ38UtwWptRiY6fnZ6dnXz7/t+efhgen3BLtz3hn/0oo` +
    `sZZEaAy0PlfiH8gqTqdkAEtxi3IMjUEoi3KFFZSFvC2M2/trtBY1bFAvlF4XskTGw9` +
    `rgGEqNhUWQuPU4RwBuhZnA/AgAEokmfub3391UPjQ374yG6Xu7yTMGyEajC8+H1Pm+` +
    `WIv6fohXNDvIL8Ymo8gxz65VdZ+NxpA5S1q42YhhqSQtJME7Wdgu3FienVeZA/RAjj` +
    `5tgV9zOIZscwcZHEdyB8JrtFqUpHzAXmNhGo0krts8R9obpYeeOMP4KIedlHVhzA/C` +
    `2ElRVbn7xV5cVFVZ9xxjDGVt2Faw3kE1HxcrIny9jjnr9ZMZa1yrW+x4E/pKVJhiMy` +
    `Ir5IhlBJN1KGaltkMoTpJBjEqY4roe5IP1xM9WMIcsPGctLsonomaJTq+robhKMznS` +
    `z1SdYWia6UN7jsMIfrKPwyoMo/BcjHE0/fwIPgezFbZcUQjZblFCJRYL1Cgt3Arcmi` +
    `P4fHpEKcv/hnmISfQTZLHGGVw31ioJr1+Rmwjcvq2L+1oYO4OM/svGfvwKC12uZpAZ` +
    `99COvxIaS6v0/Qyya622BnUWr9pfiFWkE+Ek4b+d4VFwRp4T+g0IyZKHKSe8X8Cp33` +
    `SnC2th4JnjOXUGSxMeixcBa5gD5jfOz+nPL19+09EHKAvDuDNgv9vCurDlSshlTNLh` +
    `u72vW3r0125vOnytsbjpBipcFE1tZxEE5S9RVQjKrlCbaIYNMqXHylcH2Twcdf8GVf` +
    `2UWzRSb4OlKGoo3BYYuC4MVqAk2BWCwRpL2yndrZJboyzZ/qzTpVTrdSGr3NtDNoYs` +
    `G104digrKALA0aDUHW02uYgw1VJO8vk8gYi3r7fZ3lwpxmfpAtYT1i/vDy9U2Zh49G` +
    `FIUBp8YF/0sf3yFjkbxUHW3m9wDAvZFYNYTwIwBVyUqIP8A1N5IDAGriKJ+4MrDiIk` +
    `a4ty5fDyTEnKfy1fBx8KpHdoKE3eKlUpxZmBR3pSr4X8/moM6+Lu+ysWztUCFEHcmM` +
    `/BxoJ1qRrriZAS9b///OMPbb4t7kKJ5BKMQMlVAQFsV6JGyBcGvp4zN3j2LKktcuuq` +
    `KTOiZG7g65ZeGyYMnMzhnPXzdbaBF0wtAvL0eddaoT4nVDLJLUJR12oLSiJsiiXyJj` +
    `toUsPqRpaFdenD7QAT8grYOzupUS7tCr6Grz5aB3BngswqBbWSy5krXayvROiPl5e4` +
    `mFqUmJ+OIWJ5AmcdZCSn1Q1eRM5Pa9POd7zjXTvI5TkpkD1bYV2LzUUWOQBnWEP1+q` +
    `StwuakrCvFunTLdqZjQ+sMy/nqQF1jvrt/SYXJm2KNecYksrZSFPTgkoWAOZxegIAX` +
    `JA2LfQHi+Djoyqg51u/FhzGcnY/h/KvIM3ifxXKJ+t2OPzANf0iphNlQMmBfo6rce1` +
    `0QjuOcJxa8CwnGtGFVySUY2ywWLfOt+VtRVXoMW8OOmgbKgLnFa6PKG7R8yPKTkazl` +
    `uhpDVdiiCzefUPYMqTbYL1ndb9BCw4NbjK2ZEN/8P65+ejMxVgu5FIt7AmROsw5jFv` +
    `DimpnNzoearS42G9RgFZ97vLCFgUKCkmUtyhuCw7tivalxRrF6Uxf32WjiZ2EO11a+` +
    `DMnETY7hjCvabuaA/vsqDD8e8lSHddEF9ekUCljgFj5b1uq6qM1npIrVRXnj9mKjVY` +
    `mGtKmgbLSruoyls5paMEBd3KPmE+OrRhckAczhbHLKHrG8rIuNcf562o5dOQpcpxGB` +
    `GWSboqEc6iNuQzWb28exU3CDhY0GjJDLOoEoZKXWMYSLM6f0KPHO+p/BTZeXWitNQf` +
    `P9Bz8SCsLvRY3xhMaiohrkCkslq+R0cUvn886914IU3xTa4GtpeRam8P9PW1c2WO5C` +
    `/ClAkBkTxAs4Ow1byBjZKQVMg2XIAuH0JiQFoFk763fUroRpxTSgG+nO4HiL2m3kEq` +
    `2BsqjptECD94StZOWseFPR3tgVOrP1m0dYVdhdId0R3j17K6DC6pZ93q0aU3mr1VJj` +
    `2iTxpX6eedLZKInOveXOg/m4FcI8C0I8hhZMsV1Ztrn37F8fXGnlHl0yCzb6orPhsA` +
    `PTKQhZaheofbnIhiAWznSpXqbVkcrCQkhhVsgVX0v0eA5ncfoekMRYtWnLO4oQfuGy` +
    `kU86W19iZKd/ynZLowMI7QLCNNbtczg7PSXb8eTIY9D+LNaoGpunuzcm2NNRVwTSec` +
    `A50N7mYVeXrgshHWzW7sTaLOETOqQGhb03TjaNWfnOIYs0ncL3r//zx8sZ1ErdGGiW` +
    `9X3rSht/0PW/rW5/B3rrYpMPOSs46OO5I3IMbubCu5uj+uJaw/RrXhk2vLSEMFZfHM` +
    `XnonT5dgKx23UvVFtGnXYVSpgzK7GICvV2nfMsFPUP++jN5zFBOkoxZoT3MIYv041s` +
    `wXYd9OAu9paDV707vgXybEZk7U0SArrM5frJeRYDModu5ymrhggOudLtD1GNKF6txH` +
    `JVi+WKnZMmOQoFFcKGF9blBWjD2NgfK5x38A+fecY+e1LS8c8uvfAz5x7/rOSSn4JU` +
    `zjfnLs06U4wzXch1kTBtrhtgPUtECCkvZh+yXiKey3S7gs0SEf0a8/r/PV7//P/95u` +
    `R7GP3d7UQ4UbvBYGF8eOWUPYtHKKSFg6xVy2WNlFffEqCnEIw7LhbClrRzXc3g9yfM` +
    `RCdT5ugiZ+BIP/JBDq702CEejbaEfdzp0iCsVYVQWl0fAbzP/EbRaZ+3h554U9yY24` +
    `rsw4Hg413rlTDOubgKOIbsFbdUgqt7sEuZQl3KGCjKJw7iQxcDODq9EqZdEPbQSxli` +
    `QpxDwmwMzxQ6eB8OU/f+1mX+K/LOQRf3XggLUeMYCm2FsWOwwrqf9XWz/lsYdL/GsF` +
    `FGuG2LHQnzjLaA+GSjiUMnfqJGP8tEemUBD3oIh9QDcGOBArFP553ebhyOIWdqlLti` +
    `ueEbyF5sr/XX76kMS2aOIfuQwQyytp0fxVTuQHdpsVV7PoeTs7CPvT5bmvdl2oLDes` +
    `+ZwrPqlnZi1ZU7+OSj3vlQ4pbW+I2qei/jxoDS6vsxSP3Uje3vb1tA0sY6aiF7S2aH` +
    `vruvJJIAdJjngEHzu837trXuAfpW4QYFObqo4Bikbgd/bVDfX7m+GGXXTyksvsS6/v` +
    `awER3E/fmQeU2noGR9z31WNihvI2IBwn5muqb2ozL+X5vpQe6vnlZ/V3H57U8rRLeL` +
    `Hv5g+Q7NRkmTGJu6/iU1Me7y8VEc5qCuf+lO9/Gcr8R8xqKZNGGhK2HihEVHmS59tP` +
    `VWe0oezDm3qA0twSxubv349hXpZFWpavAQ3Og6TIyjaEsrScWEOTHumVUL1b4/q/Y2` +
    `IcsuOKnXSOfzuoIAGFJfcshtS0dosyAlPkqNVsFCLBuNoBpnolsqrXjCmfBGC9W+ja` +
    `CiTLVNfn4XzD2C+dzlZDpj8QmRGIMwVC3T4K8NNtw7ejE/h//5r/8GqVJGnsfH0KaT` +
    `GNEnco/Q+KSjsStKpZjUIAlfnQoDdlVYKJXWWNpvkhcxjqRvFbqtdAOhcZeAepUg2n` +
    `H3H6ZgkaIetmjT7ySEPZc2OnZJIeJjuEjeBCWBnHa2SxRjEIYzPD29oeo6Cd78R+kr` +
    `wKUvKdj12SyV/MyvZq9jAIL7fpGlxm8jelbrTokka/TqIsohUQLrHOWS5M3aFCYiVN` +
    `b+2kriQvhD0W9Tv3U9u6eoHDK2J5m8dvFvkonHGLJu72LKvbLMBQ0mdbhjuC+395eT` +
    `JaetTOVOZaPDwo5k7dOeRXrnS5phQSNebUUSjQ3I385GQnS+57pcLquuixukmEJ5RE` +
    `goUdtCSFe4G8i5JIdj+GY0sOtaqLMD207T2aC5aKHODyOe70V8fhjxed/SPgk9o3C8` +
    `SLfOle5BmcTg4pnzvTPPD5ufa9Qj4N2mLiRXcMW1usUIhISMfoI/L7o+jzuiwe+/x9` +
    `HL93+ePUuRgkcRdBc9X8zhfBQBpsqnHrezAjvT54ennyfTA6vRFRgUKvuy+LR+OuuN` +
    `PsKH/3pvzyN6Z+d/fpRiX7HDFM+//PJRiv2V3EPxIfkVcPdFKy0UHZSJP1VHh8NWRP` +
    `D8EYK0RB9F8PkjBE+fRO5hIDymJVqx2aCsXGBtMR+6eq5/jM57eT169Rm9usv3V5R8` +
    `FeAdmqa2bV3ZXhHw449VjgwM2kF3ZQ83jH6DpcvFs/5rk4dWKgoITpGBF7JJZzNhBL` +
    `VYC8vlXyidJ+vijoXuOhMPfS6xbsMt0YSpVNZddFmoRlbZDtldkh9VRA2VSDw/VKMw` +
    `n6dUKPuShtHfVlWW5shwzczfe1oo7UQzUNR0VrsPNVfvhOA7SmnFJWRZNxUarrpG/d` +
    `zg07FZqaau3EWDqoIicLYKONmDsLDQap2w/Wa4cBq+lWJl5LE7TfZDRHbehWZFVWVj` +
    `6JWRDxexC/f8ZZ8b73HOfd5ZhZtEP1B0iNwzndjxz77FrwrzttAokyqu7aOk1Ni4Bj` +
    `srHR53SrKqfqe2TDnrAYT+iuO/cSAXiXeli7OnTGwle1OscaCPEbkg8+BiAb5JxmaQ` +
    `TSZZu8wA7/uUx5B9WtXf8d2sfj82NZoBOW/3vZ9vL3tF0sQmFD0HWxxehto57Sgxub` +
    `4NDNpcHKQShMejVDgnpdWlg5zY+407VHdCZLur9EeMa9e8KLSLxDvX0dGj6+r9UTvi` +
    `KNotTkzrn7GTj7KUXuXUGk5vvCdqMpsWGoeL9D+UWv5Icvnn0svhBMOLMZBm/qWJZn` +
    `+WeEgP3Y+nm/2k9qWcSMWE81DGe2JE2FsaPuwWiV2nX21Q/hWvr9xNq4GbYIatCVqY` +
    `3F/fCpeolCQSyZ3K2zYb+Te7P729fBOMp/dS+qElU9YqbQDv0nn5w09Xl4EQi9bUNf` +
    `9M6joyaIklt6hTNms0pljuY9TrR/PtMHdVh6AmronbI4j9V+cRuU6oFvsiuXXljZns` +
    `E6bgXqXClLuRlUIjP7OwVfoGCkMHbyypKs5pxjUl/aXw0IEt6tpZuxVr5ItjjtDOpv` +
    `rV5OsmF+59pr93BRlV4BwO3bTvAdH/G423QjXGR0f+pCCgc/MpNHQYgj8jOAQRPgPo` +
    `PgzYcPttWOBN2317H8k5SDmVLij3iEqpwE9EGtDB7eJeJRzdPpPHlXjyxiRaPBlrV4` +
    `3ei/tYoegWQHd9oP+i/yNuEMT3BejHgWNtfNsAeKkHoDm++WusO7fMs1oVru7f8Vgf` +
    `27i+2ZpsNOFrQaQmZTTOKO7LBQlCbhoLC4F1xZ8H8e1Y5squJP5Ba++vAzsxd8GUFi` +
    `ita6iVq0IuU4wjSEO0P1Skd7P84HTqcmFIV1b5a30cH44OfmyC7lsD8/7mQ1zIhG9a` +
    `/GckD2xT3H0cw8FbEIfuPgxcZBiunhzYGDJMrjsM3ZY4jF/Flyp814Uqo+Z6LWz4rm` +
    `Ioz0exvJ/Iw6dB/e8u2GRCnD+Cnfmwz/9qPnGQbYPjE6PYwX16ZHGTVfU+p6T7sCRV` +
    `MTqmOn9y36lCAQuNZgX8vosynVFrBP95lYEcJ7CcwMuVVmscgWkM1T6gGh0ohWuP0e` +
    `277t4rx46wmOw375h11gkf/Kd9MRV/HeYv+b2u8iwedp/zjTiPo1oc/W8AAAD//zSc` +
    `OihMPQAA`)
  if err != nil {
  	panic(err)
  }
  container["templates/style.css"], err = decode(`` +
    `H4sICGqlsVwA/2MzUjViR1V1WTNOegCsGXtv27j9f38KTocbGiO2k1yzaxQM2NZ1wI` +
    `D1VjTDMGC4P2jpJ5sLRWok5ccd8t0PfMkiLcp2UhR1TP7eb5JeTNHf/v6fz59yRDl/` +
    `bhvUSqhaiv5UQ0kw+n8LgoBE08VksuTlHv06QehAswSlQKCKM4UkUCgU4cwgGywDmF` +
    `W4JnSfo+wrX3LF0WfOeHaNas64bHABj9PF5AiVrNYKeCuza1S0QpINPE48liS/QI7u` +
    `PjS7xwlCNRYrwnL03i4bXJaErXJ0Y9cFp1zkaIPFu9ms4gJWgresvNKwJS6e7dIjHH` +
    `auHicvk4lzw7uasNmWlGqdox//8KHZXRlHdB7R1vaZfQeV/mctG9T6RXMnrGnVf9W+` +
    `gT9mCnYq+/k62GNtvQQR7zZYyi0XZfazke3Uur25+d7YxEUJIke3zQ5JTkmZMN2gzQ` +
    `QuSSs75y35Tutp/OcwltxAZltYPhM1G8Go+S8j4J4PbqE2zl1MUcHrmjMk1Z7aLJsv` +
    `ycqY1ce/06a9TCbzJaflAboFnSVaEC0tXEerrY/obzy9rDGlMfhm/uO902hOCs4snF` +
    `CaI8YZPPZ8rNEQWju5bsk3ICrKtzlak7IEpvdKIhuK9zlaUl486x2pBH+GRCJaoM+w` +
    `D9/39ihh8D+uE9ygez9o10LpyxGXJcIWwbkd/R5JUEitoZflyOSjz5C712SIr7bboN` +
    `pmS64Urx3WYGUV91de991XkA1nuqi9AXJLVLEmbKVbyhaA6bpta4be1XxJKFwhzEok` +
    `+Ba9K0E+K95cWWM6R1cUbJ5R2M1KImwvyh0fDcGUrNiMKKhljgpgCoTVaE1Kq0jDJb` +
    `FUeCk5bRWg35G64UJhpjQLxZsczR4eHh6aXQSiUKlh2MtksmyVconV9ae70KF3xxXY` +
    `Mgnq8a0RG81d3XVmxjEHl0TF8WAxRyLaCMJdPzyr91iTZ8JqYtTsfJSvdTkZbrzBBV` +
    `F7rcP9ed3asah40cq3sSiJxEvqCizmEoyU4n1ilBR354yQgXI4zmHBt93M0AQfbW34` +
    `4qdbvJe+YC6rCl+QfBtx06V2HiunXJjXPb7zCttgbEAoUmDq803xxiIW4JpyJMuOiB` +
    `oThlaCmO41N6sAV4O0AvrvTEHdUKxgZg20VYBuK+GrIcTCArDMjc+zuZH0SQgu0Dzr` +
    `733kTAlOB3aBKTTPzglzp/e5ivaPWRTveauQO00kTRg2ImXGoCE+yQ5cfvVO04LyA/` +
    `s46b+rqtvqtnrsyL24AQYOFOJqFRK44NroYoqAlYhXYVL4LPESg2Tpq3FuzuBWcfuh` +
    `A9KtxvOnUIL+m8AW6S9PnK1GvmTfhuQLxXsQaG4Wn3kJ3ZfMVZbHjhzr9w9YRtYAlt` +
    `4/YH2iuJGuK0aIDtSbOO/t4AiGyb3ds6NYAq1yHdHUJPJi/9oKbG4WA3I97FjwGbMt` +
    `pY4X7Bw8INZCDpjG+wN4en8gd+NUNWdhH6wuf4PwXZK852XqP4hUUVo9ARbFOtr8i+` +
    `BbCVn/+PCDPzD3eaWyTMNCbCsmhW+hIYXVIUVhoZGfj/zpneyiGri5F+nLu0T4kXK+` +
    `dagVpD97ujwp3vSWXwRsCG9lb+sn2Kne8ivUfGNDspieDHZSZnaEMyw5sxNpuogqw7` +
    `BMVof+jGvJWJqkeDqcCY5VSstxGDGl8VmSSkM1xTz2aprEwgfSLMoon2imKQRp1rWJ` +
    `NyTZeH5pCR85k219mAZfoQGsuuUTYSvag2JW8joLe5lnkWhpDhzSODEJEgsNKZwmCQ` +
    `oLjWQYZZMyDNRSKL5aUfinHRpmFpRQcDss9N2qBKHv1gPRDMLmY2kG5EqQLpTdxOxO` +
    `vu7k5nvkez9eLoq1P3GMt3BcKLIBrcK/iKKATqyzmOrPQumGfXLjmJAu2xqdWPfaij` +
    `8xHDC+CL4SICUKxrdLv9iOKM4ROD3l+xO9f5o4MjgpwMLfJMG4Ji1Ag9/Cv3NkUoTH` +
    `uOBdcFjskNSSbOylf/xOfaiHm7k7mPl3CvcSMabQiy4/jKSuNcIQRlQHTZeg3vLX1l` +
    `ed69NtVLP2BzRpTCbcfPkIlGa9F4zg1ev0HbCv8vk6vl7LYT39Fc9r03ub8jnins77` +
    `kbUvoS8Hsnknc+jJ5Kxss40XI/uYwMU+CnG3/6o4j4a4Y+09eNh4W4yPdD5LyTeoOR` +
    `7kQJ0LIx3QfpNwz4/siVpXDI+I/DvRIAVQGnfI68mcwU51k3oxHXqnu73qP9f6Q66v` +
    `pFig379ksPdnun8xN0/Jd6cepbw0Ow39qhuaIZIbaeEyxjFDKVid8361mCL37m5foU` +
    `L3jBru/3sHjPazzlSUMirQv3d66Le1A5tE8LrTQ2rKRtITbA5nhJN8hs4CAfAcLql3` +
    `kBgenyrMpI0FSIWF6mekm8f+/XYxRS3bgCAVqcAehee6NZPjhyK3bZV1i2/fsx1j3z` +
    `rc8hNTYp8FohPNJYReWL/jZRqy/iJIjcU+G4I9QcFZib3KJ6bJgEGnau1QCX0HJXxh` +
    `YK/tZGl3aFZagq1Bv4q6lt92JRYuYxxTPsHKYXT9/ydcAwpWWfTc98H9CnxhpztyY9` +
    `I5P1QC3VXC/D3d8fwj/LCzYq8cOyDh13GfnL/qtdRQwyiTAuBjgD/cPENoRDHUJgNg` +
    `iJ9qiDHcUJVk02tOOVPrWbEmtHwHG2BX1wbuTrcxMHHR8b+AjnOOT0zjkoaOV8c/OI` +
    `4J5WWZtEbDUsacw/dcW4ZwB0y5724BwCtdb78FAAD//2HYeROPJAAA`)
  if err != nil {
  	panic(err)
  }
  container["templates/theme-default.css"], err = decode(`` +
    `H4sICNOasVwA/2RHaGxiV1V0WkdWbVlYVnNkQzVqYzNNPQBcikEOgjAURPc9xSTdkZ` +
    `SqqGnKacpvESL4SVvThfHuBiQunLd7b2xkzngJQFcgXsbg0UeeMeS8JKt1KaUuTaKB` +
    `eUo18aynsdOlUXkIc1Ax+JpSQqWFAJTqHN1vkZ8PbyFDv9JuoecYfuGw7RvoaCGNN2` +
    `RoFycLeTUruzj/Py4W0jlnnGnF+xMAAP//Q68dl8MAAAA=`)
  if err != nil {
  	panic(err)
  }
  container["templates/theme-juri.css"], err = decode(`` +
    `H4sICNOasVwA/2RHaGxiV1V0YW5WeWFTNWpjM009ADzMQQ6DIBCF4T2nmMSdCaJVUf` +
    `E0OkA11Y4BGhZN795oSWf5f5OnHFGANwMQOSAdq9FgHe2whHB4JUSMsYi1x4Vo8wXS` +
    `LrZ1FrHmYTG74c7oAr2HXDAGwPk84ePu6PXUCrJOo+7b8QJLzvyhvO4HWCnIZIlGzi` +
    `ncFGT9oJuhSqE5P5oB5ZRCe45LtJ0d2ecbAAD//9Kzz8TDAAAA`)
  if err != nil {
  	panic(err)
  }
}

func Content(filename string) (*[]byte, error) {
  if file, ok := container[filename]; ok {
    return file.content, nil
  }
  return nil, fmt.Errorf("file2go %s not found", filename)
}

func ContentMust(filename string) *[]byte {
	content, err := Content(filename)
	if err != nil {
		panic(err)
	}
	return content
}

func ModTime(filename string) (*time.Time, error) {
  if file, ok := container[filename]; ok {
    return file.modTime, nil
  }
  return nil, fmt.Errorf("file2go %s not found", filename)
}

func ModTimeMust(filename string) *time.Time {
	modTime, err := ModTime(filename)
	if err != nil {
		panic(err)
	}
	return modTime
}

// eof