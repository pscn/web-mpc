// Code generated by "file2go -output templates/files.go templates/index.html templates/javascript.js templates/style.css templates/theme-default.css templates/theme-juri.css"; DO NOT EDIT.

// Encoded files:
// → templates/index.html
// → templates/javascript.js
// → templates/style.css
// → templates/theme-default.css
// → templates/theme-juri.css

package templates

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"io/ioutil"
	"time"
)

// file stores the content and modTime of the decoded string
type file struct {
	content *[]byte
	modTime *time.Time
}

var container map[string]*file

// Init populates *file with data decoded from base64Encoded string
func decode(base64Encoded string) (*file, error) {
  gzipEncoded, err := base64.StdEncoding.DecodeString(base64Encoded)
	if err != nil {
		return nil, fmt.Errorf("failed to decode data(BASE64): %s", err)
	}

	var buf bytes.Buffer
	_, err = buf.Write(gzipEncoded)
	if err != nil {
		return nil, fmt.Errorf("failed buffer decode data: %s", err)
	}

	zr, err := gzip.NewReader(&buf)
	if err != nil {
		return nil, fmt.Errorf("failed to create reader from buffer: %s", err)
	}
	defer zr.Close()

  decoded, err := ioutil.ReadAll(zr)
	if err != nil {
		return nil, fmt.Errorf("failed to decode data(GZIP): %s", err)
	}

	return &file{
		content: &decoded,
		modTime: &zr.ModTime,
	}, nil
}

func init() {
  container = make(map[string]*file)
  var err error
  
  container["templates/index.html"], err = decode(`` +
    `H4sICPaksVwA/2FXNWtaWGd1YUhSdGJBPT0A7Fvdj+O2EX/PXzFRXxpEkkXJsq2Ftc` +
    `Xl7toUyKWLvcP2442WaJuJJKokba8T5H8vSMqyZMtfG+/uXRHgcF5Rw/n4zZAcztjj` +
    `r9/94+2nf9+9h7nMs9uvxuoDMlzMYosU1u1XAOM5wan6A2CcE4khmWMuiIythZw6I6` +
    `v5qsA5ia2cTWhGnBWZOLgsnQSXeJIRCxJWSFLI2FoT0TFtScmqZFw2CFc0lfM4JUua` +
    `EEc/2EALKinOHJHgjMTI1nwAxJzT4mdHMmdKZVywjYCMFj8DJ1lsCbnOiJgTIi2Ycz` +
    `KtRtxEiHOI5ZzkxEnJFC8y2Zz0teM0ZhviuZSluOn1pqyQwp0xNssILqlwE5b3EiH+` +
    `MsU5zdbxPZswyb79wApmVYbsir+txh3n9uli6GwuCVuI40LGksqM3P6TTODD3dtxzz` +
    `yqGOhtgmA8YekaaBpb6o8GBFBiIaDEHOdEEi5gylkOOaaFO2MgGcxpmpICaFEuJEwp` +
    `yVKxtSmlS0gyLERszWlKaqPHhlzJWwkL5LoksSXJo7RgibMFia1ff3VX4rffNpr0Ur` +
    `q8/Wqr1ceHvwFNWGFkmXGxnAHmFDtGpdiSfEEsmLJkIVSkxtYUZ4JYoAGKrZSKMsPr` +
    `m4IVDc3EOp+wTKumBDgJ5YmKchXG37HH2PLAA1/9q+cAjA0VJI+xhTwLkrX55LE1sm` +
    `7HPfO6ltEzQg7KVGqdklhiOYc0tj5AYAfwAGgIPwAa2siD/yiR6v35AvFCnLSRk0SC` +
    `WbpW34I5UdEXW6hvwaMeWcdWoEQrwrPnIb974kmdCxMuZ4Lkb0GKOjFqUSPUwHT0RE` +
    `w5WZ6vHxo1JKLTGkZbcv9p+gnJyktcPtq6bqQ9N9COG1zsOEEwT+bnQ6P85YYQ2GjY` +
    `AUlz5QVm5Q31wgvd8AlLL6PigqhSYfI99OEBAgiO+mugKdFIkR4PPTuqWEYQnWAZbV` +
    `geJ0Q2CiueKAQUnuCqiTXbfdKT+E1ZlhJ+LoI5+LYPcwghg8D23RDmoAWP4Hvwn7Lo` +
    `2Oq09BlIjgsxZTxXhwQuRIYl+bNnO/43DbqNnoKltGQpvTHHFOaJtR1Tceeg0O0Hfu` +
    `iFVmMyNIjWseW7Qy8IQhQ2JnOzirbPej118xASc7VrNshJkcaW16bXPnSQ76LIG0TI` +
    `HrrD0EfDYR/ewMAegAIEgYMiN/T9IBjaQ9eLgv6oP9y+bjF0fM8dRCPb8Vw0DHwPDY` +
    `MWo8CN+iNvhGwncBHykB8cYhQZkPpDuwsLVtZHdmtaw1WcSeUnByntv9mP4p0Nyx2G` +
    `2y1L7QZq04rU5zq2wo6Dqjc7O84muLhqSrC7BD21BPsHw78jTWGFWOQnz/DzAjpwB0` +
    `NvMBz4TVe0ohkF7iAIh4PRJdF8RixXALgR8vuRh2w0cgejfhg1wrfBEIHjuX0UoXAQ` +
    `BIrW88PIQ634dMOoP0KROlLdYRj5KOyMz9BFYaiWy8j3/SjoN3hEGzTs2mrIwBnYHv` +
    `zSNK8jUgOvI0wbu5862OyB3vYcdPFmV/ncSanOb9M/nP//4/w2pRvayA11er+XA23D` +
    `5FCccFISfDKraexXg9Z21e/crlp5l9pUGzOC46nXcT3PDufnVviaLhC0mF10ixxW+v` +
    `lHLGpoh+wB9NURHMISkH/5ZUDr9xTor6voVcMeFynLL0lF1VIcQAZ9dQDPYXA0UfZN` +
    `ojxSF7Zq6sWwGxUv28CfSddrIn/GzXKrW+iG9lDJ8mwfUN88Hb/PKEp1+T1qg1/ZMH` +
    `/KNSanaXp6vbaN6BsjkGes6J+wQk1BYT0nAzUpPG06ipTtF1s0YVKevxoq9VCl3tCY` +
    `pJ5Pqqd8+aDQP+2d4VnuGffEctYs/mUMp8AWHH7CSywSTku5LTlWz4InsbV97/4klB` +
    `Dz0OSVY1rAjNO0s2ip3m5Lgxv695wzDjkRAs/IttpZTVWI11RWk5OZN2E8JZykYCqi` +
    `VWmzwaAx4y0rJGdZ00MbEYnk2UdWzGoJNd/6TetmpJRPFpyTQmZrwImkSwKCFbOG/i` +
    `0BukpcczcTFNtPahw4EfQXYt3qp5YNLSaYS11Q2ePyRr+o2ZjHI3yyySLvYqPGt1zU` +
    `UzeTvZl3nM04qcv9exLL+v0+w4NqkgyXQu3jlTjlivdmDESOs8y69W58dJhBuuBYUl` +
    `a0OLyrBjcs/Bvk77BoFshrd4sVlckcJkSuCClAd2KE1fJ3Exsl6oGSFUzY4z0RJSsE` +
    `XRLrEJQb8h+Ug3dA1KtU+ZcKkHMCVXtFbz478QYwniykZIW235TfNuehrtGbk7E9pa` +
    `r2V5qo/c06q/S/ywVgvBAEHjNa/Hxjei9/2pYBb8e9hSB7ks121B4yJpwOkh3sPppS` +
    `6GE8RBfBs1u/kfrs9n/H2WpPsab9E03AXxqAqop5TQA6V2iZ4bUNuvsCRCbu0bV5l+` +
    `E14ResTjNB/X8EYdNr0pt9bHXQPjvWWoEnIH3QIk5MJayy6d48fulWVS26jaPMU1dv` +
    `9aUM1Bo87xZhAvijuk4c2SL1baPCpYP2+XdLLfMFgLjjZEnZYi9laUbJhqQOlO45zx` +
    `8enCxfBJQfyeNe+tEAxHSJKzA6aJ8dCK3ASwBxT3K2PHaWckPwmmBMcHFtLNQx+te/` +
    `/+vD+xvAaQqW7sxUVksGxmidhFa3n/1Lz97RvIPvB5aSY8duQ4UpLVLAKuWWhMMKr5` +
    `UOks1mmdKBiq7L1o6k+6psVbnpk5lsKkWQs72dvuViTfXOJM2vejxUxbff5ewu294X` +
    `2rRXsWZbp7tGDJ8Kg6povxMGevRkGGiqzyIMjBXXDAPN8ZXCYKdBcYFZuy7vdvrHqk` +
    `3Qdropznc5fScT0nQbt3dYdSV0DmdCRv1uWDqBOeTxLsMO+PzF7Drl94sMPDci3m76` +
    `+u2QqFq/p2OiInzFoNh8M+HqUVExfr2w2Ou/Xy8uDg6YR51ykCIFNoVGnbj+Liw0Cw` +
    `y6EPewW3mrS45LSlZ3FZm1W3wmhdwvMWzKBtmByt/m3ftCckoEzBjMCSe7uc+Z9RGt` +
    `PikkX4MkeZlhSWBFswwmRL1PSAq0kKytVbepTcXWta0qH7xnq93C/IHzWVFXcB/JCX` +
    `cWM8myo6u0zDorLy8Qw0fqFL8vbi9GoPP+8iIYHL6VXHXp7sfRHafsqkHEKUP1UWEu` +
    `Pur6UcJ/F2SxzQRLTtlrAH24UPLCsaaA8veAMk3fzwSrqgP92cAV7MFlOsqfCVxVe/` +
    `tVlvHbfQTrI2fz/lOrm9oaPdFL7WD2pt1VbQ+f6ql28Wt1V1ujJ3qrHcze7bYwd1/U` +
    `LP2boKMVek5jU/enTuQ0VW+tI6M5cMBv+23fscdGW/2xmRx05TuVOo2fQO33OLc/eD` +
    `LUn0xdsvHDJ/Nruc6GX+sutJjkVHY2Dr+kvuBh8O+JWGTb4Fb5Gt35MkMbd64nPCG7` +
    `rObv5JadAWVIP7u8UfA3aWrdfvvHTvYF7mTNzeod5SSRrBFd5+1X6WbeD00Yj6yZeg` +
    `JURBeum07B7XVRvzp/cdRTrr5C0qzzOwbwEjnJ0W8RvGgKl2bX2ye2vjqyWdREP+Kc` +
    `7EeGGq0Xj3q4bPF0F0G2vwTuTVi61g/jnvkB/P8CAAD//0qO/QERPwAA`)
  if err != nil {
  	panic(err)
  }
  container["templates/javascript.js"], err = decode(`` +
    `H4sICDAxslwA/2FtRjJZWE5qY21sd2RDNXFjdz09ALR773IbN5L4dz1FZ/JbZxhRpC` +
    `Qnv81RZlKJrdT5KnFcVmr3qlyu3dFMk0Q0BBgAI0qb6Os9wD3iPclVo4EZYDik5Oye` +
    `PthDoP8B/Rc9mNtCQ62WMIdFI0srlMzXZjmC344ASiWNqnFSq6UbvDh6uDgihAqvm2` +
    `EUsYB8UdQGR5BgTadgVkpbWCgNlSqbNUo7WaK9rJEev7t/XeWiGjnyGJMWFVPWaBst` +
    `D+E6RsRpZe3GzKZTY4vyRt2iXtRqOynVevprg4aomumfv/jiiy++PJuu1PbEqpMl2h` +
    `O7wpOitE1Rn2iUFWqsThZK2pPtCuWJsOZEKntS4UJIrE6EPCmNcfKWxsQSI4s1ho1W` +
    `G9T2PlnAVshKbUn8l2q9aSxWV/a+xg5LNnU9ovm3Hv0vRd1g3hL7qGWenX11/sXZtC` +
    `zqsqkLiycW7+zJVlR2dbIVdnXyS3FbmFKLjZ2en52effn8355/Gh7c4pZof8Y7+1dC` +
    `iVdJhMZA+3Ml/oG8xOmUDGApblGOoTEIZVGusIKykLeFcbq/RmtRwwb1Qul1IUtkPK` +
    `wNjqHUWFgEiVuPcwTgdpgJzI8AIJFo4md+/91N5UNz885omL63mzxjgGw0uvB8aDnf` +
    `F2tR3w/ximYH+cXYZBQ55tm1qu6z0RgyZ0kLNxsxLJWkjSR4JwvbhRvLs/Mqc4AeyN` +
    `EnFfg9h2PINneQwXEkdyC8RqtFSYsP2GssTKORxHXKc6S9UXroiTOMj3LYSVkXxvwg` +
    `jJ0UVZW7X+zFRVWVdc8xxlDWhm0F6x1U83GxIsLX65izXj+Zsca1usWON6GvRIUpNi` +
    `PyghyxjGCyDsWs1HYIxUkyiFEJU1zXg3ywnvjZCuaQheesxUX5RNQsWdPraiiu0kyO` +
    `9DNdzjA0zfShPcdhBD/Zx+ElDKPwXIxxNP38CD4HsxW2XFEI2W5RQiUWC9QoLdwK3J` +
    `oj+Hx6RCnL/4Z5iEn0E2SxxhlcN9YqCa9fkZsI3L6ti/taGDuDjP7Lxn78CgtdrmaQ` +
    `GffQjr8SGkur9P0MsmuttgZ1Fu/aX4hVtCbCScJ/O8Oj4Iw8J/QbEJIlD1NOeL+BU6` +
    `90txZehYFnjufUGSxNeCzeBKxhDpjfOD+nP799+U1HH6AsDOPOgP1uC+vClishlzFJ` +
    `h+90X7f06K9Vbzp8rbG46QYqXBRNbWcRBOUvUVUIyq5Qm2iGDTKlF0ziAJeHo+7fsF` +
    `I/5faMVrfBUhQ1FE4DBq4LgxUoCXaFYLDG0nZr7jbJbVGWaD/rllKq9bqQVe7NIRtD` +
    `lo0uHDuUFRQB4GhQ6o42W1xEmEopJ/l8nkDE2uvp2lsrhfgs3b96wuvL+8MLVTYmHn` +
    `0YEpQGH9gVfWi/vEVORnGMtfcbHMNCdrUg1pMATPEWJeog/8BUHgiMgYtI4v7gaoMI` +
    `ydqiXDm8PFOS0l/L18GH+ugdGsqSt0pVSnFi4JGe1Gshv78aw7q4+/6KhXOlAAUQN+` +
    `ZTsLFgXabGeiKkRP3vP//4Q5tui7tQIbn8IlByUUAA25WoEfKFga/nzA2ePUtKi9y6` +
    `YsqMKJcb+Lql10YJAydzOOf1+TLbwAumFgF5+qy1VqjPCZVMcotQ1LXagpIIm2KJrG` +
    `QHTcuwupFlYV32cBpgQn4B9s5OapRLu4Kv4auPXgO4I0FmlYJayeXMVS7WFyL0x9tL` +
    `XEwtSsxPxxCxPIGzDjKS0+oGLyLnp71p5zvesdYOcnlOC8ierbCuxeYiixyAE6yhcn` +
    `3SFmFzWqyrxLpsy3amY0PrDMv56kBZY767f0l1yZtijXnGJLK2UBT04HKFgDmcXoCA` +
    `FyQNi30B4vg4rJVRc6zfiw9jODsfw/lXkWewnsVyifrdjj8wDX9GqYTZUC5gX6Oi3H` +
    `tdEI7jnCcWvAsJxrRhVcklGNssFi3zrflbUVV6DFvDjpoGyoC5xWujyhu0fMbyk5Gs` +
    `5boaQ1XYogs3n1DyDJk22C9Z3W/QQsOD24ytmRDf/D+ufnozMVYLuRSLewJkTrMOYx` +
    `bw4pKZzc6Hmq0uNhvUYBUfe7ywhYFCgpJlLcobgsO7Yr2pcUaxelMX99lo4mdhDtdW` +
    `vgzJxE2O4YwL2m7mwPr3FRh+POSpDuuiC+rTKRSwwC18tqzVdVGbz2gpVhfljdPFRq` +
    `sSDa2mgrLRrugylo5qasEAdXGPmg+MrxpdkAQwh7PJKXvE8rIuNsb562k7duUocJlG` +
    `BGaQbYqGcqiPuA2VbE6PY7fADRY2GjBCLusEopCVWscQLs6c0qPEO+t/BjddXmqtNA` +
    `XN9x/8SKgHvxc1xhMai4pKkCsslaySw8UtHc87914LWvim0AZfS8uzMIX/f9q6ssFy` +
    `F+JPAYLMmCBewNlpUCFjZKcUMA2WIQuEw5uQFIBm7azXqF0J04ppQDfSHcHxFrVT5B` +
    `KtgbKo6bBAg/eErWTlrHhTkW7sCp3ZeuURVhW0K6Q7wbtnbwVUWN2yz7tdYypvtVpq` +
    `THskvtLPM086GyXRubfdeTAft0OYZ0GIx9CCKbY7yzb3nv3rgyut3KNLZsFGX3Q2HD` +
    `QwnYKQpXaB2peLbAhi4UyXymXaHaksLIQUZoVc8bVEj+dwFqfvAUmMVZu2vKMI4Tcu` +
    `G/mks/UlRnb6p2y3NDqA0G4gTOO1fQ5np6dkO54ceQzan8UaVWPzVHtjgj0ddUUgHQ` +
    `ecA+3tHXZ16boQ0sFmrSbWZgmf0Bk1LNh742TTmJVvHLJI0yl8//o/f7ycQa3UjYFm` +
    `Wd+3rrTx51z/2+r2d6C3Ljb5kLOCgz6eOyLH4GYuvLs5qi+uNUy/5p1hw0tLCGP1xV` +
    `F8LEq3bycQO617odoy6rSrUMKcWYlFVKi3+5xnoah/2EdvPo8J0kmKMSO8hzF8mSqy` +
    `Bdt10INa7G0H73p3egvk2YzI2pskBHSZy7WT8ywGZA6d5imrhggOudLtD1GNKF6txH` +
    `JVi+WKnZMmOQqFJQSFF9blBWjD2NgfK5x38A+fecY+e1LS8c8uvfAz5x7/rOSSn4JU` +
    `zjfnLs06U4wzXch1kTBtrhtgPUtECCkvZh+yXiKey3S7gs0SEf0e8/7/Pd7//P/95u` +
    `R7GP3daSKcqN1gsDA+vHLKnsUjFNLCQdaq5bJGyqtvCdBTCMYdFwtBJe1cVzN4/YSZ` +
    `6GTKHF3kDBzpRz7IwZUeO8Sj0ZawjztdGoS1qhBKq+sjgPeZVxSd9lk99MRKcWNOFd` +
    `mHA8HHu9YrYZxzcRVwDNkr7qgEV/dglzKFupQxUJRPHMSHLgZwdHolTLsh7KGXMsSE` +
    `OIeE2RieKXTwPhym7v2ty/xX5J2DLu69EBaixjEU2gpjx2CFdT/r62b9tzDofo1ho4` +
    `xwaosdCfOMVEB8stHEoRM/UaOfZSK9soAHPYRD6gG4sUCB2Kfzbt1uHI4hZ2qUu2K5` +
    `4RvIXmyv9dfvqQxLZo4h+5DBDLK2mx/FVG5Ad2mxXfZ8DidnQY+9Nlua93u9Maz3nC` +
    `k8q25rJ1ZduYNPPuqdDyVuaY/fqKr3Lm4MKK2+H4PUT1VsX79tAUmKddRC9pbMDn1z` +
    `X0kkAegwzwGD5nd7921n3QP0rcINCnJ0UcExSN0O/tqgvr9yfTHKrp9SWHyJdf3tYS` +
    `M6iPvzIfOaTkHJ+p7brGxQ3kbEAoT9zHQ97Udl/L8204PcXz2t/q7i8tufVohuFz38` +
    `wfIdmo2SJjE2df1LamLc5eOjOMxBXf/Sne7jOV+J+YxFM2nCQlfCxAmLjjJd+mjrrf` +
    `aUPJhzblEb2oJZ3Nz68e0rWpNVparBQ3Cj6zAxjqItrSQVE+bEuGdeWqj2/Vm1p4Qs` +
    `u+CkXiOdz+sKAmBIfckhty0doc2ClPgoNVoFC7FsNIJqnIluqbTiCWfCGy1U+zKCij` +
    `LV9vj5VTD3COZzl5PpjMUnRGIMwlC1TIO/Nthw7+jF/Bz+57/+G6RKGXkeH0ObTmJE` +
    `n8g9QuOTjsauKJViUoMkfHUqDNhVYaFUWmNpv0newziSvlXoVOkGQuMuAfVLgkjj7j` +
    `9MwaKFetiiTb+TEPZc2ujYJYWIj+EieRGUBHLSbJcoxiAMZ3h6ekPVdRK8+Y/SV4BL` +
    `X1Kw67NZKvmZ381exwAE9/0iS43fRvSs1p0SSdbo1UWUQ6IE1jnKJcmbtSlMRKi8+m` +
    `sriQvhD0W/Tf3W9eyesuSQsT3J5LWLf5FMPMaQdbqLKffKMhc0mNThjuG+3N7fTpac` +
    `VJnKncpGh4UdydqnPZv0zpc0w4JGvNqKJBobkL+djYTofM91uVxWXRc3SDGF8oiQUK` +
    `K2hZCucDeQc0kOx/DNaEDrWqizA2qn6WzQXLRQ54cRz/ciPj+M+LxvaZ+EnlE4XqSq` +
    `c6V7WExicPHM+d6Z54fNzzXqEfBuUxeSK7jiWt1iBEJCRj/Bnxddn8cd0eD33+Po5f` +
    `s/z56lSMGjCLqLni/mcD6KANPFpx63swM70+eHp58n0wO70RUYFCr7svi0fjrrjT7C` +
    `h/96L88jemfnf36UYn9hhymef/nloxT7O7mH4kPyK+Dui1ZaKDooE3+qjg6HrYjg+S` +
    `MEaYs+iuDzRwiePoncw0B4TEu0YrNBWbnA2mI+dPVc/xid9/J69OozenWX768o+SrA` +
    `OzRNbdu6sr0i4McfqxwZGLSD7soebhj9BkuXi2f91yYPrVQUENxCBl7IJp3NhBHUYi` +
    `0sl3+hdJ6sizsWuutMPPS5xGsbbokmTKWy7p7LQjWyynbI7pL8qCJqqETi+aEahfk8` +
    `pULZlzSM/raqsjRHhltm/trTQmknmoGiprPafai5eicE31FKKy4hy7qp0HDVNernBp` +
    `+OzUo1deUuGlQVFIGzVcDJHoSFhVbrhO03w4XT8K0UKyOP3WmyHyKy8y40K6oqG0Ov` +
    `jHy4iF245y/73HiPc+7zzircJPqBokPknunEjn/2LX5VmLeFRplUcW0fJaXGxjXYWe` +
    `nwuFOSVfU7tWXKWQ8g9Fcc/40DuUi8K92cPWViK9mbYo0DfYzIBZkHFwvwTTI2g2wy` +
    `ydptBnjfpzyG7NOq/o7vZvX7sanRDMh5u+/9fHvZK5ImNqHoOdji8DbUzmlHicn1bW` +
    `DQ5uIglSA8HqXCOSmtLh3kxN5v3KG6EyLb3aU/Yly75kWhXSTeuY6OHl1X74/aEUfR` +
    `bnNiWv+MnXyUpfQqp9ZweuM9UZPZtNA4XKT/odTyR5LLP5deDicY3oyBNPMvTTT7s8` +
    `RDeuh+PN3sJ7Uv5URLTDgPZbwnRoS9peHDbpHYdfrVBuVf8frK3bQauAlm2Jqghcn9` +
    `9a1wiUpJIpHcqbxts5F/s/vT28s3wXh6L6UfWjJlrdIG8C6dlz/8dHUZCLFoTV3zz6` +
    `SuI4OWWHKLOmWzRmOK5T5GvX403w5zV3UIauKauD2C2H91HpHrhGqxL5JbV96YyT5h` +
    `Cu5VKky5G1kpNPIzC1ulb6AwdPDGkqrinGZcU9LfCQ8d2KKunbVbsUa+OOYI7SjV7y` +
    `ZfN7lw7zP9vSvIqALncOimfQ+I/t9ovBWqMT468hcFAZ2bT6GhwxD8FcEhiPAVQPdd` +
    `wIbbb8MCb9ru2/tIzkHKqXRhcY8sKRX4iUgDa3Ba3LsIR7fP5PFFPFkxySqejLW7jN` +
    `6L+3hB0S2A7vpA/0X/R9wgiO8L0I8Dx9r4tgHwVg9Ac3zz11h3bplntSpc3b/jsT62` +
    `cX2zNdlowteCaJmU0TijuA8XJAi5aSwsBNYVfx3Et2OZK7uS+Aftvb8O7MTcBVNaoL` +
    `SuoVauCrlMMY4gDdH+UJHezfKD06nLhSFdWeWv9XF8ODr4rQm6bw3M+5sPcSETPmnx` +
    `X5E8sE1x93EMB29BHLr7MHCRYbh6cmBjyDC57jB0W+IwfhVfqvBdF6qMmuu1sOG7iq` +
    `E8H8XyfiIPXwb1v7tgkwlx/gh25oOe/9V84iDbBscnRrGDenpkc5Nd9T6npPuwJF1i` +
    `dEx1/uQ+U4UCFhrNCvh9F2U6o9YI/usqAzlOYDmBlyut1jgC0xiqfUA1OlAK1x6j23` +
    `fdvVeOHWEz2W/eMeusEz74T/tiKv44zF/ye13lWTzsvuYbcR5HtTj63wAAAP//b0qX` +
    `0Us9AAA=`)
  if err != nil {
  	panic(err)
  }
  container["templates/style.css"], err = decode(`` +
    `H4sICGqlsVwA/2MzUjViR1V1WTNOegCsGXtv27j9f38KTocbGiO2k1yzaxQM2NZ1wI` +
    `D1VjTDMGC4P2jpJ5sLRWok5ccd8t0PfMkiLcp2UhR1TP7eb5JeTNHf/v6fz59yRDl/` +
    `bhvUSqhaiv5UQ0kw+n8LgoBE08VksuTlHv06QehAswSlQKCKM4UkUCgU4cwgGywDmF` +
    `W4JnSfo+wrX3LF0WfOeHaNas64bHABj9PF5AiVrNYKeCuza1S0QpINPE48liS/QI7u` +
    `PjS7xwlCNRYrwnL03i4bXJaErXJ0Y9cFp1zkaIPFu9ms4gJWgresvNKwJS6e7dIjHH` +
    `auHicvk4lzw7uasNmWlGqdox//8KHZXRlHdB7R1vaZfQeV/mctG9T6RXMnrGnVf9W+` +
    `gT9mCnYq+/k62GNtvQQR7zZYyi0XZfazke3Uur25+d7YxEUJIke3zQ5JTkmZMN2gzQ` +
    `QuSSs75y35Tutp/OcwltxAZltYPhM1G8Go+S8j4J4PbqE2zl1MUcHrmjMk1Z7aLJsv` +
    `ycqY1ce/06a9TCbzJaflAboFnSVaEC0tXEerrY/obzy9rDGlMfhm/uO902hOCs4snF` +
    `CaI8YZPPZ8rNEQWju5bsk3ICrKtzlak7IEpvdKIhuK9zlaUl486x2pBH+GRCJaoM+w` +
    `D9/39ihh8D+uE9ygez9o10LpyxGXJcIWwbkd/R5JUEitoZflyOSjz5C712SIr7bboN` +
    `pmS64Urx3WYGUV91de991XkA1nuqi9AXJLVLEmbKVbyhaA6bpta4be1XxJKFwhzEok` +
    `+Ba9K0E+K95cWWM6R1cUbJ5R2M1KImwvyh0fDcGUrNiMKKhljgpgCoTVaE1Kq0jDJb` +
    `FUeCk5bRWg35G64UJhpjQLxZsczR4eHh6aXQSiUKlh2MtksmyVconV9ae70KF3xxXY` +
    `Mgnq8a0RG81d3XVmxjEHl0TF8WAxRyLaCMJdPzyr91iTZ8JqYtTsfJSvdTkZbrzBBV` +
    `F7rcP9ed3asah40cq3sSiJxEvqCizmEoyU4n1ilBR354yQgXI4zmHBt93M0AQfbW34` +
    `4qdbvJe+YC6rCl+QfBtx06V2HiunXJjXPb7zCttgbEAoUmDq803xxiIW4JpyJMuOiB` +
    `oThlaCmO41N6sAV4O0AvrvTEHdUKxgZg20VYBuK+GrIcTCArDMjc+zuZH0SQgu0Dzr` +
    `733kTAlOB3aBKTTPzglzp/e5ivaPWRTveauQO00kTRg2ImXGoCE+yQ5cfvVO04LyA/` +
    `s46b+rqtvqtnrsyL24AQYOFOJqFRK44NroYoqAlYhXYVL4LPESg2Tpq3FuzuBWcfuh` +
    `A9KtxvOnUIL+m8AW6S9PnK1GvmTfhuQLxXsQaG4Wn3kJ3ZfMVZbHjhzr9w9YRtYAlt` +
    `4/YH2iuJGuK0aIDtSbOO/t4AiGyb3ds6NYAq1yHdHUJPJi/9oKbG4WA3I97FjwGbMt` +
    `pY4X7Bw8INZCDpjG+wN4en8gd+NUNWdhH6wuf4PwXZK852XqP4hUUVo9ARbFOtr8i+` +
    `BbCVn/+PCDPzD3eaWyTMNCbCsmhW+hIYXVIUVhoZGfj/zpneyiGri5F+nLu0T4kXK+` +
    `dagVpD97ujwp3vSWXwRsCG9lb+sn2Kne8ivUfGNDspieDHZSZnaEMyw5sxNpuogqw7` +
    `BMVof+jGvJWJqkeDqcCY5VSstxGDGl8VmSSkM1xTz2aprEwgfSLMoon2imKQRp1rWJ` +
    `NyTZeH5pCR85k219mAZfoQGsuuUTYSvag2JW8joLe5lnkWhpDhzSODEJEgsNKZwmCQ` +
    `oLjWQYZZMyDNRSKL5aUfinHRpmFpRQcDss9N2qBKHv1gPRDMLmY2kG5EqQLpTdxOxO` +
    `vu7k5nvkez9eLoq1P3GMt3BcKLIBrcK/iKKATqyzmOrPQumGfXLjmJAu2xqdWPfaij` +
    `8xHDC+CL4SICUKxrdLv9iOKM4ROD3l+xO9f5o4MjgpwMLfJMG4Ji1Ag9/Cv3NkUoTH` +
    `uOBdcFjskNSSbOylf/xOfaiHm7k7mPl3CvcSMabQiy4/jKSuNcIQRlQHTZeg3vLX1l` +
    `ed69NtVLP2BzRpTCbcfPkIlGa9F4zg1ev0HbCv8vk6vl7LYT39Fc9r03ub8jnins77` +
    `kbUvoS8Hsnknc+jJ5Kxss40XI/uYwMU+CnG3/6o4j4a4Y+09eNh4W4yPdD5LyTeoOR` +
    `7kQJ0LIx3QfpNwz4/siVpXDI+I/DvRIAVQGnfI68mcwU51k3oxHXqnu73qP9f6Q66v` +
    `pFig379ksPdnun8xN0/Jd6cepbw0Ow39qhuaIZIbaeEyxjFDKVid8361mCL37m5foU` +
    `L3jBru/3sHjPazzlSUMirQv3d66Le1A5tE8LrTQ2rKRtITbA5nhJN8hs4CAfAcLql3` +
    `kBgenyrMpI0FSIWF6mekm8f+/XYxRS3bgCAVqcAehee6NZPjhyK3bZV1i2/fsx1j3z` +
    `rc8hNTYp8FohPNJYReWL/jZRqy/iJIjcU+G4I9QcFZib3KJ6bJgEGnau1QCX0HJXxh` +
    `YK/tZGl3aFZagq1Bv4q6lt92JRYuYxxTPsHKYXT9/ydcAwpWWfTc98H9CnxhpztyY9` +
    `I5P1QC3VXC/D3d8fwj/LCzYq8cOyDh13GfnL/qtdRQwyiTAuBjgD/cPENoRDHUJgNg` +
    `iJ9qiDHcUJVk02tOOVPrWbEmtHwHG2BX1wbuTrcxMHHR8b+AjnOOT0zjkoaOV8c/OI` +
    `4J5WWZtEbDUsacw/dcW4ZwB0y5724BwCtdb78FAAD//2HYeROPJAAA`)
  if err != nil {
  	panic(err)
  }
  container["templates/theme-default.css"], err = decode(`` +
    `H4sICNOasVwA/2RHaGxiV1V0WkdWbVlYVnNkQzVqYzNNPQBcikEOgjAURPc9xSTdkZ` +
    `SqqGnKacpvESL4SVvThfHuBiQunLd7b2xkzngJQFcgXsbg0UeeMeS8JKt1KaUuTaKB` +
    `eUo18aynsdOlUXkIc1Ax+JpSQqWFAJTqHN1vkZ8PbyFDv9JuoecYfuGw7RvoaCGNN2` +
    `RoFycLeTUruzj/Py4W0jlnnGnF+xMAAP//Q68dl8MAAAA=`)
  if err != nil {
  	panic(err)
  }
  container["templates/theme-juri.css"], err = decode(`` +
    `H4sICNOasVwA/2RHaGxiV1V0YW5WeWFTNWpjM009ADzMQQ6DIBCF4T2nmMSdCaJVUf` +
    `E0OkA11Y4BGhZN795oSWf5f5OnHFGANwMQOSAdq9FgHe2whHB4JUSMsYi1x4Vo8wXS` +
    `LrZ1FrHmYTG74c7oAr2HXDAGwPk84ePu6PXUCrJOo+7b8QJLzvyhvO4HWCnIZIlGzi` +
    `ncFGT9oJuhSqE5P5oB5ZRCe45LtJ0d2ecbAAD//9Kzz8TDAAAA`)
  if err != nil {
  	panic(err)
  }
}

func Content(filename string) (*[]byte, error) {
  if file, ok := container[filename]; ok {
    return file.content, nil
  }
  return nil, fmt.Errorf("file2go %s not found", filename)
}

func ContentMust(filename string) *[]byte {
	content, err := Content(filename)
	if err != nil {
		panic(err)
	}
	return content
}

func ModTime(filename string) (*time.Time, error) {
  if file, ok := container[filename]; ok {
    return file.modTime, nil
  }
  return nil, fmt.Errorf("file2go %s not found", filename)
}

func ModTimeMust(filename string) *time.Time {
	modTime, err := ModTime(filename)
	if err != nil {
		panic(err)
	}
	return modTime
}

// eof