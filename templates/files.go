// Code generated by "file2go -output templates/files.go templates/index.html templates/javascript.js templates/style.css templates/theme-default.css templates/theme-juri.css"; DO NOT EDIT.

// Encoded files:
// → templates/index.html
// → templates/javascript.js
// → templates/style.css
// → templates/theme-default.css
// → templates/theme-juri.css

package templates

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"io/ioutil"
	"time"
)

// file stores the content and modTime of the decoded string
type file struct {
	content *[]byte
	modTime *time.Time
}

var container map[string]*file

// Init populates *file with data decoded from base64Encoded string
func decode(base64Encoded string) (*file, error) {
  gzipEncoded, err := base64.StdEncoding.DecodeString(base64Encoded)
	if err != nil {
		return nil, fmt.Errorf("failed to decode data(BASE64): %s", err)
	}

	var buf bytes.Buffer
	_, err = buf.Write(gzipEncoded)
	if err != nil {
		return nil, fmt.Errorf("failed buffer decode data: %s", err)
	}

	zr, err := gzip.NewReader(&buf)
	if err != nil {
		return nil, fmt.Errorf("failed to create reader from buffer: %s", err)
	}
	defer zr.Close()

  decoded, err := ioutil.ReadAll(zr)
	if err != nil {
		return nil, fmt.Errorf("failed to decode data(GZIP): %s", err)
	}

	return &file{
		content: &decoded,
		modTime: &zr.ModTime,
	}, nil
}

func init() {
  container = make(map[string]*file)
  var err error
  
  container["templates/index.html"], err = decode(`` +
    `H4sICPaksVwA/2FXNWtaWGd1YUhSdGJBPT0A7Fvdj+O2EX/PXzFRXxpEkkXJsq2Ftc` +
    `Xl7toUyKWLvcP2442WaJuJJKokba8T5H8vSMqyZMtfG+/uXRHgcF5Rw/n4zZAcztjj` +
    `r9/94+2nf9+9h7nMs9uvxuoDMlzMYosU1u1XAOM5wan6A2CcE4khmWMuiIythZw6I6` +
    `v5qsA5ia2cTWhGnBWZOLgsnQSXeJIRCxJWSFLI2FoT0TFtScmqZFw2CFc0lfM4JUua` +
    `EEc/2EALKinOHJHgjMTI1nwAxJzT4mdHMmdKZVywjYCMFj8DJ1lsCbnOiJgTIi2Ycz` +
    `KtRtxEiHOI5ZzkxEnJFC8y2Zz0teM0ZhviuZSluOn1pqyQwp0xNssILqlwE5b3EiH+` +
    `MsU5zdbxPZswyb79wApmVYbsir+txh3n9uli6GwuCVuI40LGksqM3P6TTODD3dtxzz` +
    `yqGOhtgmA8YekaaBpb6o8GBFBiIaDEHOdEEi5gylkOOaaFO2MgGcxpmpICaFEuJEwp` +
    `yVKxtSmlS0gyLERszWlKaqPHhlzJWwkL5LoksSXJo7RgibMFia1ff3VX4rffNpr0Ur` +
    `q8/Wqr1ceHvwFNWGFkmXGxnAHmFDtGpdiSfEEsmLJkIVSkxtYUZ4JYoAGKrZSKMsPr` +
    `m4IVDc3EOp+wTKumBDgJ5YmKchXG37HH2PLAA1/9q+cAjA0VJI+xhTwLkrX55LE1sm` +
    `7HPfO6ltEzQg7KVGqdklhiOYc0tj5AYAfwAGgIPwAa2siD/yiR6v35AvFCnLSRk0SC` +
    `WbpW34I5UdEXW6hvwaMeWcdWoEQrwrPnIb974kmdCxMuZ4Lkb0GKOjFqUSPUwHT0RE` +
    `w5WZ6vHxo1JKLTGkZbcv9p+gnJyktcPtq6bqQ9N9COG1zsOEEwT+bnQ6P85YYQ2GjY` +
    `AUlz5QVm5Q31wgvd8AlLL6PigqhSYfI99OEBAgiO+mugKdFIkR4PPTuqWEYQnWAZbV` +
    `geJ0Q2CiueKAQUnuCqiTXbfdKT+E1ZlhJ+LoI5+LYPcwghg8D23RDmoAWP4Hvwn7Lo` +
    `2Oq09BlIjgsxZTxXhwQuRIYl+bNnO/43DbqNnoKltGQpvTHHFOaJtR1Tceeg0O0Hfu` +
    `iFVmMyNIjWseW7Qy8IQhQ2JnOzirbPej118xASc7VrNshJkcaW16bXPnSQ76LIG0TI` +
    `HrrD0EfDYR/ewMAegAIEgYMiN/T9IBjaQ9eLgv6oP9y+bjF0fM8dRCPb8Vw0DHwPDY` +
    `MWo8CN+iNvhGwncBHykB8cYhQZkPpDuwsLVtZHdmtaw1WcSeUnByntv9mP4p0Nyx2G` +
    `2y1L7QZq04rU5zq2wo6Dqjc7O84muLhqSrC7BD21BPsHw78jTWGFWOQnz/DzAjpwB0` +
    `NvMBz4TVe0ohkF7iAIh4PRJdF8RixXALgR8vuRh2w0cgejfhg1wrfBEIHjuX0UoXAQ` +
    `BIrW88PIQ634dMOoP0KROlLdYRj5KOyMz9BFYaiWy8j3/SjoN3hEGzTs2mrIwBnYHv` +
    `zSNK8jUgOvI0wbu5862OyB3vYcdPFmV/ncSanOb9M/nP//4/w2pRvayA11er+XA23D` +
    `5FCccFISfDKraexXg9Z21e/crlp5l9pUGzOC46nXcT3PDufnVviaLhC0mF10ixxW+v` +
    `lHLGpoh+wB9NURHMISkH/5ZUDr9xTor6voVcMeFynLL0lF1VIcQAZ9dQDPYXA0UfZN` +
    `ojxSF7Zq6sWwGxUv28CfSddrIn/GzXKrW+iG9lDJ8mwfUN88Hb/PKEp1+T1qg1/ZMH` +
    `/KNSanaXp6vbaN6BsjkGes6J+wQk1BYT0nAzUpPG06ipTtF1s0YVKevxoq9VCl3tCY` +
    `pJ5Pqqd8+aDQP+2d4VnuGffEctYs/mUMp8AWHH7CSywSTku5LTlWz4InsbV97/4klB` +
    `Dz0OSVY1rAjNO0s2ip3m5Lgxv695wzDjkRAs/IttpZTVWI11RWk5OZN2E8JZykYCqi` +
    `VWmzwaAx4y0rJGdZ00MbEYnk2UdWzGoJNd/6TetmpJRPFpyTQmZrwImkSwKCFbOG/i` +
    `0BukpcczcTFNtPahw4EfQXYt3qp5YNLSaYS11Q2ePyRr+o2ZjHI3yyySLvYqPGt1zU` +
    `UzeTvZl3nM04qcv9exLL+v0+w4NqkgyXQu3jlTjlivdmDESOs8y69W58dJhBuuBYUl` +
    `a0OLyrBjcs/Bvk77BoFshrd4sVlckcJkSuCClAd2KE1fJ3Exsl6oGSFUzY4z0RJSsE` +
    `XRLrEJQb8h+Ug3dA1KtU+ZcKkHMCVXtFbz478QYwniykZIW235TfNuehrtGbk7E9pa` +
    `r2V5qo/c06q/S/ywVgvBAEHjNa/Hxjei9/2pYBb8e9hSB7ks121B4yJpwOkh3sPppS` +
    `6GE8RBfBs1u/kfrs9n/H2WpPsab9E03AXxqAqop5TQA6V2iZ4bUNuvsCRCbu0bV5l+` +
    `E14ResTjNB/X8EYdNr0pt9bHXQPjvWWoEnIH3QIk5MJayy6d48fulWVS26jaPMU1dv` +
    `9aUM1Bo87xZhAvijuk4c2SL1baPCpYP2+XdLLfMFgLjjZEnZYi9laUbJhqQOlO45zx` +
    `8enCxfBJQfyeNe+tEAxHSJKzA6aJ8dCK3ASwBxT3K2PHaWckPwmmBMcHFtLNQx+te/` +
    `/+vD+xvAaQqW7sxUVksGxmidhFa3n/1Lz97RvIPvB5aSY8duQ4UpLVLAKuWWhMMKr5` +
    `UOks1mmdKBiq7L1o6k+6psVbnpk5lsKkWQs72dvuViTfXOJM2vejxUxbff5ewu294X` +
    `2rRXsWZbp7tGDJ8Kg6povxMGevRkGGiqzyIMjBXXDAPN8ZXCYKdBcYFZuy7vdvrHqk` +
    `3Qdropznc5fScT0nQbt3dYdSV0DmdCRv1uWDqBOeTxLsMO+PzF7Drl94sMPDci3m76` +
    `+u2QqFq/p2OiInzFoNh8M+HqUVExfr2w2Ou/Xy8uDg6YR51ykCIFNoVGnbj+Liw0Cw` +
    `y6EPewW3mrS45LSlZ3FZm1W3wmhdwvMWzKBtmByt/m3ftCckoEzBjMCSe7uc+Z9RGt` +
    `PikkX4MkeZlhSWBFswwmRL1PSAq0kKytVbepTcXWta0qH7xnq93C/IHzWVFXcB/JCX` +
    `cWM8myo6u0zDorLy8Qw0fqFL8vbi9GoPP+8iIYHL6VXHXp7sfRHafsqkHEKUP1UWEu` +
    `Pur6UcJ/F2SxzQRLTtlrAH24UPLCsaaA8veAMk3fzwSrqgP92cAV7MFlOsqfCVxVe/` +
    `tVlvHbfQTrI2fz/lOrm9oaPdFL7WD2pt1VbQ+f6ql28Wt1V1ujJ3qrHcze7bYwd1/U` +
    `LP2boKMVek5jU/enTuQ0VW+tI6M5cMBv+23fscdGW/2xmRx05TuVOo2fQO33OLc/eD` +
    `LUn0xdsvHDJ/Nruc6GX+sutJjkVHY2Dr+kvuBh8O+JWGTb4Fb5Gt35MkMbd64nPCG7` +
    `rObv5JadAWVIP7u8UfA3aWrdfvvHTvYF7mTNzeod5SSRrBFd5+1X6WbeD00Yj6yZeg` +
    `JURBeum07B7XVRvzp/cdRTrr5C0qzzOwbwEjnJ0W8RvGgKl2bX2ye2vjqyWdREP+Kc` +
    `7EeGGq0Xj3q4bPF0F0G2vwTuTVi61g/jnvkB/P8CAAD//0qO/QERPwAA`)
  if err != nil {
  	panic(err)
  }
  container["templates/javascript.js"], err = decode(`` +
    `H4sICLAuslwA/2FtRjJZWE5qY21sd2RDNXFjdz09ALQ77XIbN5L/9RSdya0zjChSkp` +
    `PbHGUmldhKna+yjstK7V6Vy7ULzYAkoiHADDCitIn+3gPcI96TXHU3MAMMh5Sc3dUP` +
    `mwT6C+hvALwVNVRmCXNYNLpwyuh8bZcj+PUIoDDamkpOKrOkwYujh4sjRCjldTOMoh` +
    `aQu7qRI0iQplOwK1M7WJgaSlM0a6ndZCndZSXx43f3r8tclSOiLmPKqmTCtXRNrQ/h` +
    `EiPktHJuY2fTqXWiuDG3sl5UZjspzHr6SyMtUrXTP37xxRdffHk2XZntiTMnS+lO3E` +
    `qeiMI1ojqppS5lLcuThdHuZLuS+kQ5e6KNOynlQmlZnih9UlhL8hbWxhJLFmsMm9ps` +
    `ZO3ukwVslS7NFsV/adabxsnyyt1XssPSTVWNcP6tR/+zqBqZt8Q+aplnZ1+df3E2LU` +
    `RVNJVw8sTJO3eyVaVbnWyVW538LG6FLWq1cdPzs9OzL5//x/NPwwda3FK6n+Sd+wui` +
    `xKtEQmPA/blSf5e8xOkU9b9Ut1KPobESClGsZAmF0LfCku6vpXOyho2sF6ZeC11Ixp` +
    `OVlWMoaimcBC23HucIgHaYCcyPACCRaOJnfvuNpvKhuXlnNEzf202eMUA2Gl14Pric` +
    `78VaVfdDvKLZQX4xNhpFLvPs2pT32WgMGVnSgmYjhoXRuJEIT7KwXdBYnp2XGQF6IK` +
    `KPKvB7DseQbe4gg+NI7kB4LV2tClx8wF5LYZtaorikPCLtjdJDT8gwPsphJ0UlrP1B` +
    `WTcRZZnTN/ZiUZZF1XOMMRSVZVuR1Q6q/bhYEeHX65hzvX4y41quza3seCP6SpUyxW` +
    `ZEXhARyxAm61DsymyHUEiSQYxSWXFdDfKR1cTPljCHLHzOWlypn4iaJWt6XQ7FVZzJ` +
    `JX5NlzMMjTN9aM9xGMFP9nF4CcMoPBdjHE0/P4LPwW6VK1YYQrZbqaFUi4WspXZwq+` +
    `TWHsHn0yPMWP47zENMwq+gxVrO4Lpxzmh4/QrdRMnt20rcV8q6GWT4Xzb241dS1MVq` +
    `BpmlD+34K1XLwpn6fgbZdW22VtZZvGt/RlbRmhAnCf/tDI8CGXmO6DegNEsepkh4v4` +
    `FTr3RaC6/CwjPiOSWDxQmPxZsgK5iDzG/Iz/HPb19+09EHKIRl3Bmw321hLVyxUnoZ` +
    `kyR80n3V0sO/Vr3p8HUtxU03UMqFaCo3iyAwf6mylGDcStY2mmGDTOnx4suDbB6Oun` +
    `/DUv0UbRoubyMLJSoQpAIL18LKEowGt5JgZSUL1y262yXaoyxRf9atpTDrtdBl7u0h` +
    `G0OWjS6IndQliABwNCh1R5tNLiKMpRRJPp8nELH6esr25ooxPks3sJrw+vL+8MIUjY` +
    `1HH4YExcEH9kUf2y9vJWejOMi6+40cw0J3taCsJgEYA67Usg7yD0zlgcAYFqKyksR6` +
    `oOIgQnJOFCvCyzOjMf+1fAk+FEjvpMU0eWtMaQxnBh7pSb1W+vurMazF3fdXLBzVAh` +
    `hBaMznYOvAUaqW1URpLev//OlPP7T5VtyFEokSjJKaqwIE2K5UJSFfWPh6ztzg2bOk` +
    `tsgdVVN2hMncwtctvTZMWDiZwzmvj7d2YeEFU4uAPH3WWivU54iKJrmVIKrKbMFoCR` +
    `uxlKxkgsZluLrRhXCUPkgDTMgvwN25SSX10q3ga/jqo9cA1BNkzhiojF7OqHRxvhLB` +
    `P95e5GIrVcj8dAwRyxM46yAjObHduIic37cgPN/xjrV2kMtzXED2bCWrSm0ussgBOM` +
    `NarNcnbRU2x8VSKdalW7azOja0zrDIVwfqGvvd/UssTN6ItcwzJpG1laLCD5QsFMzh` +
    `9AIUvEBpWOwLUMfHYa2MmsvqvfowhrPzMZx/FXkG61ktl7J+t+MPTMM3KaWyG0wG7G` +
    `tYlXuvC8JxnPPEgndJhLFtWDV6CdY1i0XLfGv/KsqyHsPWsqOmgTJgbuW1NcWNdNxk` +
    `+clI1mJdjqEUTnTh5hPMniHVBvtFq/sVWmh4oM3Y2gnyzf/r6sc3E+tqpZdqcY+AzG` +
    `nWYcwCXlwzs9n5ULOtxWYja3CG+x4vrLAgNBhdVKq4QTh5J9abSs4wVm8qcZ+NJn4W` +
    `5nDt9MuQTGhyDGdc0XYzB9a/r8Lw4yFPdVgXXVCfTkHAQm7hs2VlrkVlP8OluFoUN6` +
    `SLTW0KaXE1JRRNTVWXddirmQUDVOJe1twxvmpqgRLAHM4mp+wRy8tKbCz562k7dkUU` +
    `uE5DAjPINqLBHOojboM1G+lxTAvcSOGiAav0skoghC7NOoagOHOKH7W8c/5rcNPlZV` +
    `2bGoPm+w9+JBSE36tKxhO1FCXWIFeyMLpMuotb7M87914rXPhG1Fa+1o5nYQr/ftq6` +
    `spXFLsQfAgSaMUK8gLPToELGyE4xYFpZhCwQujelMQDN2lmvUbdSthXTQt1o6sHlra` +
    `xJkUvpLBSiwm4BB+8R2+iSrHhTom7cSpLZeuUhVhm0qzS18PTZWwEWVrfs87RrTOVt` +
    `bZa1TA9JfKmfZ550Nkqic2+782A+tEMyz4IQj6EFU2x3lm3uPfvXByqt6CMls2CjLz` +
    `obDhqYTkHpoqZA7ctFNgS1INPFehl3RxsHC6WVXUmu+Fqix3M4i9P3gCTWmU1b3mGE` +
    `8BuXjXzS2foSIzv9Q7ZbGh1AaDcQpvHaPoez01O0HU8OPUa6n9RamsblqfbGCHs66o` +
    `pA7AfIgfaeHXZ16VooTbBZq4m1XcIn2KSGBXtvnGwau/InhyzSdArfv/7vP13OoDLm` +
    `xkKzrO5bV9r4Rtd/d3X7PdBbi00+5KxA0MdzInIMNHPh3Y2ovriuYfo17wwbXlpCWF` +
    `dfHMV9Ubp9O4GYtO6Fasuo065CCXN2pRZRod7uc56Fov5hH735PCaIrRRjRngPY/gy` +
    `VWQLtuugB7XY2w7e9a59C+TZjNDamyQEdJmLjpPzLAZkDp3mMauGCA65qdsvqhxhvF` +
    `qp5apSyxU7J05yFApLCAoXjvICtGFs7NsK8g7+4jPP2GdPTDr+M6UX/sy5x382esmf` +
    `glTkm3NKs2SKcaYLuS4Sps11A6xniQgh5cXsQ9ZLxKNMtyvYLBHR7zHv/9/i/c//7V` +
    `eS72H0N9JE6KhpMFgYN6+csmfxCIa00Mg6s1xWEvPqWwT0FIJxx8VCUEk719UMXj9h` +
    `JupMmSNFzsARv+SDHKj02CEejbaEfdzp0iCsTSmhcHV1BPA+84rCbp/Vg59YKTRGqs` +
    `g+HAg+3rVeKUvOxVXAMWSv+EgluLoHu9Qp1KWOgaJ8QhAfuhjA0emVsu2GsIde6hAT` +
    `4hwSZmN4ptDB+3CYuve3lPmv0DsHXdx7ISxUJccgaqesG4NTjr5W1836r2GQvo1hY6` +
    `witcWOJPMMVYB8stGE0JGfqqSfZSK9soAHPQQh9QBoLFBA9uk8rZvG4Rhypoa5K5Yb` +
    `voHsxfa6/vo9lmHJzDFkHzKYQdYe50cxlU+gu7TYLns+h5OzoMfeOVua93V6BCerPT` +
    `2FZ9Vt7cSZK2p88lGvP9Ryi3v8xpS9y7gxSO3q+zHo+qmK7eu3LSBRsUQtZG/N7KQ/` +
    `3TdaogB8n4gwOL97eN8erXuAvlXQoEJHVyUcg67bwV8aWd9f0bkYZtdPMSy+lFX17W` +
    `EjOoj70yHzmk7B6Oqez1nZoLyNqAUo95ntDrUflfFfbaYHub96Wv1dxuW371aQbhc9` +
    `fGP5TtqN0TYxNnP9c2pifMrHrTjMwVz/3HX38ZyvxHzGwpk0YUkqYeKEha1Mlz7aeq` +
    `vtkgdzDge+Fi3Jnog5sfSZpQkFum8ve/uWZRechyuJLXVVQgAM2SrpS9tqD9rEhbkK` +
    `s5kzsFDLppZgGrKqLVZDPEFWt6mVaS8QsI4y7bk8X99yWz+fUxrFtoibOmQMymKBi4` +
    `O/NLLh454X83P4v//5X9AmZeR5fAxtbJ6QPpJ7hMYnHY1dUUrDpAZJ+IJSWXAr4aAw` +
    `dS0L901yd0Ik/ekeqZIGwllbAuqXBJHG6T+ZgkUL9bCizZiTEKko0nfsktrBh12VXN` +
    `4ksRc128X2MSjLSRk/vcGCOIm3/IcZJ8Cl9wrsrWyWRn/md7PX5IPio7rIUuMLhJ7V` +
    `UmOHska3DVHYj3JO5yiXKG/WZh0VofLqr51GLog/FLA21Vs6ZnvKkkOS9SSTmxJ/+Y` +
    `s8xpB1uosp9yopChpM6vAh37503N9OlhxVmcqdyob1/Y5k7ac9m/TOVyHDgka82iIi` +
    `GhuQv52NhOh8jw6mKBGuxY3EmIKhX2koZO2E0lRrW8i5ioZj+GY0oPVambMDasfpbN` +
    `BcamXODyOe70V8fhjxed/SPgnHPKEjSFVH1XZYTGJw8cz53pnnh82PztYlyLtNJTQX` +
    `XeLa3MoIBIWMvoJv8ehohroq+O23OHr5I5tnz1Kk4FEI3UXPF3M4H0WA6eJTj9vZgZ` +
    `3p88PTz5Ppgd3oagIMlX1ZfFo/nfVGH+HDf70L74je2fkfH6XYX9hhiudffvkoxf5O` +
    `7qH4kHwLuPuiVa0M9rbIH4vHw2ErInj+CEHcoo8i+PwRgqdPIvcwEB7TEk1sNlKXFF` +
    `hbzIeunut3vnkvr0e3ldFtW76/ouTb+3fSNpVr68r2Vt+PP1Y5MjDUBN2VPXzG8yss` +
    `KRfP+jcdD61UGBBoIQN3qMlhZMIIKrVWjss/3HyisBZ3LHR3mPDQ5xKvbfgUM2Gqja` +
    `O3KQvT6DLbIbtL8qOKqKESieeHahTm85QKZV/SsPW3ZZmlOTK8DPNPlRamJtEsiArb` +
    `q/tQc/U6BH8IlFZcShdVU0rLVdeonxt8OrYr01QlvQ0oSxCBszPAyR6Ug0Vt1gnbb4` +
    `YLp+GHJE5HHrtzLn6IyM71ZSbKMhtDr4x8uIhduOcv+9x4j3Pu884yPP75AaND5J7p` +
    `xI5/9i1+JexbgS1+vP726COlxsY1eBjS4fHhRlZW78yWKWc9gHAkQvw3BHKReFe6OX` +
    `vKxFayN2ItB44eIhdkHlwswDfJ2AyyySRrtxngfZ/yGLJPy+o7fk7VP0JNjWZAztt9` +
    `V+rt+6xImtiEos/BFoe3oSKnHSUm17eBQZuLg1SC8HiUCn1SWl0S5MTdb6ip7oTIdn` +
    `fp9xjXrnlhaFeJd66j1qM7iPu9dsRRtNucmNY/YicfZSm9yqk1nN54T9RkNi00Dhfp` +
    `vyu1/J7k8o+ll8MJhjdjIM38UxPN/izxkDbdj6eb/aT2pZxoiQnnoYz3xIiwtzR82C` +
    `0Su8N5s5H6L/L6ih5HDTzesmxN0MLk/sVVePdkNJJInkHettnIX8b++PbyTTCe3j3y` +
    `Q0umqEx6ZrtL5+UPP15dBkIsWlNV/p49ruvQoLUs+FQ5ZbOW1orlPka9I2R+0EWvax` +
    `BqQoe4PYKyf9sdkeuEarEvkodS3pjRPmEKdPsJUz6NLI20+jMHW1PfgLDYeMsCq+Ic` +
    `Z+hQ0r/jDiewoqrI2p1aS37rRYR2lOp3k1+IXNAVpH8qBRlW4BwOadqfAeH/m1reKt` +
    `NYHx35VwABnQ+fwoEOQ/DL/0MQ4eV+95Z/w8dvwwJv2tO395Gcg5RT6cLiHllSKvAT` +
    `kQbWQFrcuwii22fy+CKerJhkFU/G2l1G7649XlB0cd/d+Pfv5j/i0j++4scvB9ra+I` +
    `EA8FYPQHN88y9Pdx6GZ5URVPfveKyPbVzfbG02mvBLHlwmZjTOKPRjAw1KbxoHCyWr` +
    `kn/Rww9amSu7kvo77r1/wUti7oKZWknt6ECtWAm9TDGOIA3RvqlIn1P5wemUcmFIV8` +
    `74l3gcH44O/j5E0s8D7PubD3EhE36G4n/58cA2xaePYzj4cOHQc4WBtwfD1ROBjSGT` +
    `yQuFoQcOh/HL+B2EP3XByqi5XisXfgoxlOejWN5P5OHXPP2fSrDJhDh/BDvzQc//bD` +
    `5xkG2D4xOj2EE9PbK5ya56nzOafguSLjFqU8mf6KelIGBRS7sCvu/CTGfNWoL/RZSF` +
    `XE5gOYGXq9qs5QhsY7H2AdPUgVJ4qRg9mOueqnLsCJvJfvOOWWed8MF/2oup+Add/l` +
    `3e6zLP4mH6Bd6I87g0i6P/DwAA//8oxRBr/jwAAA==`)
  if err != nil {
  	panic(err)
  }
  container["templates/style.css"], err = decode(`` +
    `H4sICGqlsVwA/2MzUjViR1V1WTNOegCsGXtv27j9f38KTocbGiO2k1yzaxQM2NZ1wI` +
    `D1VjTDMGC4P2jpJ5sLRWok5ccd8t0PfMkiLcp2UhR1TP7eb5JeTNHf/v6fz59yRDl/` +
    `bhvUSqhaiv5UQ0kw+n8LgoBE08VksuTlHv06QehAswSlQKCKM4UkUCgU4cwgGywDmF` +
    `W4JnSfo+wrX3LF0WfOeHaNas64bHABj9PF5AiVrNYKeCuza1S0QpINPE48liS/QI7u` +
    `PjS7xwlCNRYrwnL03i4bXJaErXJ0Y9cFp1zkaIPFu9ms4gJWgresvNKwJS6e7dIjHH` +
    `auHicvk4lzw7uasNmWlGqdox//8KHZXRlHdB7R1vaZfQeV/mctG9T6RXMnrGnVf9W+` +
    `gT9mCnYq+/k62GNtvQQR7zZYyi0XZfazke3Uur25+d7YxEUJIke3zQ5JTkmZMN2gzQ` +
    `QuSSs75y35Tutp/OcwltxAZltYPhM1G8Go+S8j4J4PbqE2zl1MUcHrmjMk1Z7aLJsv` +
    `ycqY1ce/06a9TCbzJaflAboFnSVaEC0tXEerrY/obzy9rDGlMfhm/uO902hOCs4snF` +
    `CaI8YZPPZ8rNEQWju5bsk3ICrKtzlak7IEpvdKIhuK9zlaUl486x2pBH+GRCJaoM+w` +
    `D9/39ihh8D+uE9ygez9o10LpyxGXJcIWwbkd/R5JUEitoZflyOSjz5C712SIr7bboN` +
    `pmS64Urx3WYGUV91de991XkA1nuqi9AXJLVLEmbKVbyhaA6bpta4be1XxJKFwhzEok` +
    `+Ba9K0E+K95cWWM6R1cUbJ5R2M1KImwvyh0fDcGUrNiMKKhljgpgCoTVaE1Kq0jDJb` +
    `FUeCk5bRWg35G64UJhpjQLxZsczR4eHh6aXQSiUKlh2MtksmyVconV9ae70KF3xxXY` +
    `Mgnq8a0RG81d3XVmxjEHl0TF8WAxRyLaCMJdPzyr91iTZ8JqYtTsfJSvdTkZbrzBBV` +
    `F7rcP9ed3asah40cq3sSiJxEvqCizmEoyU4n1ilBR354yQgXI4zmHBt93M0AQfbW34` +
    `4qdbvJe+YC6rCl+QfBtx06V2HiunXJjXPb7zCttgbEAoUmDq803xxiIW4JpyJMuOiB` +
    `oThlaCmO41N6sAV4O0AvrvTEHdUKxgZg20VYBuK+GrIcTCArDMjc+zuZH0SQgu0Dzr` +
    `733kTAlOB3aBKTTPzglzp/e5ivaPWRTveauQO00kTRg2ImXGoCE+yQ5cfvVO04LyA/` +
    `s46b+rqtvqtnrsyL24AQYOFOJqFRK44NroYoqAlYhXYVL4LPESg2Tpq3FuzuBWcfuh` +
    `A9KtxvOnUIL+m8AW6S9PnK1GvmTfhuQLxXsQaG4Wn3kJ3ZfMVZbHjhzr9w9YRtYAlt` +
    `4/YH2iuJGuK0aIDtSbOO/t4AiGyb3ds6NYAq1yHdHUJPJi/9oKbG4WA3I97FjwGbMt` +
    `pY4X7Bw8INZCDpjG+wN4en8gd+NUNWdhH6wuf4PwXZK852XqP4hUUVo9ARbFOtr8i+` +
    `BbCVn/+PCDPzD3eaWyTMNCbCsmhW+hIYXVIUVhoZGfj/zpneyiGri5F+nLu0T4kXK+` +
    `dagVpD97ujwp3vSWXwRsCG9lb+sn2Kne8ivUfGNDspieDHZSZnaEMyw5sxNpuogqw7` +
    `BMVof+jGvJWJqkeDqcCY5VSstxGDGl8VmSSkM1xTz2aprEwgfSLMoon2imKQRp1rWJ` +
    `NyTZeH5pCR85k219mAZfoQGsuuUTYSvag2JW8joLe5lnkWhpDhzSODEJEgsNKZwmCQ` +
    `oLjWQYZZMyDNRSKL5aUfinHRpmFpRQcDss9N2qBKHv1gPRDMLmY2kG5EqQLpTdxOxO` +
    `vu7k5nvkez9eLoq1P3GMt3BcKLIBrcK/iKKATqyzmOrPQumGfXLjmJAu2xqdWPfaij` +
    `8xHDC+CL4SICUKxrdLv9iOKM4ROD3l+xO9f5o4MjgpwMLfJMG4Ji1Ag9/Cv3NkUoTH` +
    `uOBdcFjskNSSbOylf/xOfaiHm7k7mPl3CvcSMabQiy4/jKSuNcIQRlQHTZeg3vLX1l` +
    `ed69NtVLP2BzRpTCbcfPkIlGa9F4zg1ev0HbCv8vk6vl7LYT39Fc9r03ub8jnins77` +
    `kbUvoS8Hsnknc+jJ5Kxss40XI/uYwMU+CnG3/6o4j4a4Y+09eNh4W4yPdD5LyTeoOR` +
    `7kQJ0LIx3QfpNwz4/siVpXDI+I/DvRIAVQGnfI68mcwU51k3oxHXqnu73qP9f6Q66v` +
    `pFig379ksPdnun8xN0/Jd6cepbw0Ow39qhuaIZIbaeEyxjFDKVid8361mCL37m5foU` +
    `L3jBru/3sHjPazzlSUMirQv3d66Le1A5tE8LrTQ2rKRtITbA5nhJN8hs4CAfAcLql3` +
    `kBgenyrMpI0FSIWF6mekm8f+/XYxRS3bgCAVqcAehee6NZPjhyK3bZV1i2/fsx1j3z` +
    `rc8hNTYp8FohPNJYReWL/jZRqy/iJIjcU+G4I9QcFZib3KJ6bJgEGnau1QCX0HJXxh` +
    `YK/tZGl3aFZagq1Bv4q6lt92JRYuYxxTPsHKYXT9/ydcAwpWWfTc98H9CnxhpztyY9` +
    `I5P1QC3VXC/D3d8fwj/LCzYq8cOyDh13GfnL/qtdRQwyiTAuBjgD/cPENoRDHUJgNg` +
    `iJ9qiDHcUJVk02tOOVPrWbEmtHwHG2BX1wbuTrcxMHHR8b+AjnOOT0zjkoaOV8c/OI` +
    `4J5WWZtEbDUsacw/dcW4ZwB0y5724BwCtdb78FAAD//2HYeROPJAAA`)
  if err != nil {
  	panic(err)
  }
  container["templates/theme-default.css"], err = decode(`` +
    `H4sICNOasVwA/2RHaGxiV1V0WkdWbVlYVnNkQzVqYzNNPQBcikEOgjAURPc9xSTdkZ` +
    `SqqGnKacpvESL4SVvThfHuBiQunLd7b2xkzngJQFcgXsbg0UeeMeS8JKt1KaUuTaKB` +
    `eUo18aynsdOlUXkIc1Ax+JpSQqWFAJTqHN1vkZ8PbyFDv9JuoecYfuGw7RvoaCGNN2` +
    `RoFycLeTUruzj/Py4W0jlnnGnF+xMAAP//Q68dl8MAAAA=`)
  if err != nil {
  	panic(err)
  }
  container["templates/theme-juri.css"], err = decode(`` +
    `H4sICNOasVwA/2RHaGxiV1V0YW5WeWFTNWpjM009ADzMQQ6DIBCF4T2nmMSdCaJVUf` +
    `E0OkA11Y4BGhZN795oSWf5f5OnHFGANwMQOSAdq9FgHe2whHB4JUSMsYi1x4Vo8wXS` +
    `LrZ1FrHmYTG74c7oAr2HXDAGwPk84ePu6PXUCrJOo+7b8QJLzvyhvO4HWCnIZIlGzi` +
    `ncFGT9oJuhSqE5P5oB5ZRCe45LtJ0d2ecbAAD//9Kzz8TDAAAA`)
  if err != nil {
  	panic(err)
  }
}

func Content(filename string) (*[]byte, error) {
  if file, ok := container[filename]; ok {
    return file.content, nil
  }
  return nil, fmt.Errorf("file2go %s not found", filename)
}

func ContentMust(filename string) *[]byte {
	content, err := Content(filename)
	if err != nil {
		panic(err)
	}
	return content
}

func ModTime(filename string) (*time.Time, error) {
  if file, ok := container[filename]; ok {
    return file.modTime, nil
  }
  return nil, fmt.Errorf("file2go %s not found", filename)
}

func ModTimeMust(filename string) *time.Time {
	modTime, err := ModTime(filename)
	if err != nil {
		panic(err)
	}
	return modTime
}

// eof