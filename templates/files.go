// Code generated by "file2go -output templates/files.go templates/index.html templates/javascript.js templates/style.css templates/theme-default.css templates/theme-juri.css"; DO NOT EDIT.

// Encoded files:
// → templates/index.html
// → templates/javascript.js
// → templates/style.css
// → templates/theme-default.css
// → templates/theme-juri.css

package templates

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"io/ioutil"
	"time"
)

// file stores the content and modTime of the decoded string
type file struct {
	content *[]byte
	modTime *time.Time
}

var container map[string]*file

// Init populates *file with data decoded from base64Encoded string
func decode(base64Encoded string) (*file, error) {
  gzipEncoded, err := base64.StdEncoding.DecodeString(base64Encoded)
	if err != nil {
		return nil, fmt.Errorf("failed to decode data(BASE64): %s", err)
	}

	var buf bytes.Buffer
	_, err = buf.Write(gzipEncoded)
	if err != nil {
		return nil, fmt.Errorf("failed buffer decode data: %s", err)
	}

	zr, err := gzip.NewReader(&buf)
	if err != nil {
		return nil, fmt.Errorf("failed to create reader from buffer: %s", err)
	}
	defer zr.Close()

  decoded, err := ioutil.ReadAll(zr)
	if err != nil {
		return nil, fmt.Errorf("failed to decode data(GZIP): %s", err)
	}

	return &file{
		content: &decoded,
		modTime: &zr.ModTime,
	}, nil
}

func init() {
  container = make(map[string]*file)
  var err error
  
  container["templates/index.html"], err = decode(`` +
    `H4sICFKhsVwA/2FXNWtaWGd1YUhSdGJBPT0A7Btdj+O28T2/YqK+NIgki5JlWwtri8` +
    `vdtSmQSxd7h+3HGy3RNhNJVEnaXifIfy9IyrJky18b7+5dEaDoHqnhfM9wOBOPv373` +
    `j7ef/n33HuYyz26/Gqs/kOFiFluksG6/AhjPCU7VPwDGOZEYkjnmgsjYWsipM7Kanw` +
    `qck9jK2YRmxFmRiYPL0klwiScZsSBhhSSFjK01ER3HlpSsSsZlA3BFUzmPU7KkCXH0` +
    `wgZaUElx5ogEZyRGtsYDIOacFj87kjlTKuOCbQhktPgZOMliS8h1RsScEGnBnJNpte` +
    `MmQpwDLOckJ05KpniRyeahrx2ncdoAz6UsxU2vN2WFFO6MsVlGcEmFm7C8lwjxlynO` +
    `abaO79mESfbtB1YwqxJkl/xtte84t08nQ2dzSdhCHCcyllRm5PafZAIf7t6Oe2apfK` +
    `C3cYLxhKVroGlsqX80VAAlFgJKzHFOJOECppzlkGNauDMGksGcpikpgBblQsKUkiwV` +
    `W5lSuoQkw0LE1pympBZ6bMAVvZWwQK5LEluSPEoLljhbkNj69Vd3JX77bcNJL6XL26` +
    `+2XH18+BvQhBWGltkXyxlgTrFjWIotyRfEgilLFkJ5amxNcSaIBVpBsZVSUWZ4fVOw` +
    `osGZWOcTlmnWFAEnoTxRXq7c+Dv2GFseeOCr/9VnAMYGCpLH2EKeBcna/OWxNbJuxz` +
    `3zuabRM0QO0lRsnaJYYjmHNLY+QGAH8ABoCD8AGtrIg/8okur7+QTxQpyUkZNEggld` +
    `q2/BnCjviy3Ut+BR76xjK1CkFeDZ55DfffAkz4VxlzOV5G+VFHXqqAWNUEOnoyfqlJ` +
    `Pl+fyhUYMiOs1htAX3n8afkKy8xOSjrelG2nIDbbjBxYYTBPNkfr5qlL3cEAIbDTtU` +
    `0oy8wETeUAde6IZPCL2Migu8SrnJ99CHBwggOGqvgYZEIwV63PXsqEIZQXQCZbRBeR` +
    `wQ2SiscKIQUHgCqwbWaPdBT+pvyrKU8HM1mINv+zCHEDIIbN8NYQ6a8Ai+B/8pQcdW` +
    `p6nPQHJciCnjubokcCEyLMmfPdvxv2nAbfgULKUlS+mNuaYwT6ztnvI7B4VuP/BDL7` +
    `Qah6EBtI4t3x16QRCisHGYmyjarnU8deMQEnOVNRvgpEhjy2vDaxs6yHdR5A0iZA/d` +
    `Yeij4bAPb2BgD0ApBIGDIjf0/SAY2kPXi4L+qD/cfm4hdHzPHUQj2/FcNAx8Dw2DFq` +
    `LAjfojb4RsJ3AR8pAfHEIUGSX1h3aXLlhZX9mtYw1TcSaVnRykuP9m34t3EpY7DLcp` +
    `S2UDlbQi9XcdW2HHRdWbne1nE1xctSTYDUFPhWD/oPt3lCmsEIv85B1+nkMH7mDoDY` +
    `YDv2mKljejwB0E4XAwusSbz/DlSgFuhPx+5CEbjdzBqB9GDfdtIETgeG4fRSgcBIGC` +
    `9fww8lDLP90w6o9QpK5UdxhGPgo7/TN0URiqcBn5vh8F/QaOaKMNu5YaMnAGtge/NM` +
    `Xr8NTA63DTRvZTF5s90GnPQRcnu8rmTkp1fZv+Yfz/H+O3Id3QRm6oy/u9GmjrJof8` +
    `hJOS4JNVTSNfDVrpqt+Zrlp1l0qqjRPB8dLrOJ9nu/NzM3xNEwhazC56RQ4r/vwjEj` +
    `W4Q/YA+uoKDmEJyL/8MaD5e4rqr8voVd0eFynLLylFVSgOIIO+uoDnMDhaKPumUB6p` +
    `B1t19GK1GxYvS+DPxOs1NX/Gy3LLW+iG9lDR8mwfUN+sjr9nFKR6/B6Vwa9kmD/lGZ` +
    `PTND0dr20h+kYI5Bkp+iekUEdQWJ/JQB0KT4uOIiX7xRJNmJTnR0PFHqrYGxqR1Pok` +
    `e8qWD0r7p60zPMs8455YzprNv4zhFNiCw094iUXCaSm3LcdqLXgSW9vv7k9CETGLJq` +
    `4c0wJmnKadTUv1ddsa3MC/55xxyIkQeEa23c7qqNJ4DWU1MZlzE8ZTwkkKpiNatTYb` +
    `CBon3rJCcpY1LbQhkUiefWTFrKZQ462/tF5GivlkwTkpZLYGnEi6JCBYMWvw3yKgu8` +
    `Q1dnNAof2k9oETQX8h1q1etWRoIcFc6obKHpY3+kONxiyP4Mkmi7wLjdrfYlGrbiR7` +
    `J+84m3FSt/v3KJb1932EB9kkGS6FyuMVOWWK92YPRI6zzLr1bnx0GEG64FhSVrQwvK` +
    `s2Nyj8G+TvoGg2yGtzixWVyRwmRK4IKUBPYoTVsndTN4rUAyUrmLDHeyJKVgi6JNYh` +
    `VW7Af1AG3lGijlJlXypAzglU4xWdfHb8DWA8WUjJCi2/ab9t7kPdozc3Y/tI1e2vOF` +
    `H5zTqr9b+LBWC8EAQeM1r8fGNmL3/atgFvx72FIHuUTTpqbxkRTjvJju4+mlboYX2I` +
    `LoBnl35D9dnl/46z1R5jTfknGoC/tAKqLuY1FdAZoWWG1zbo6QsQmbhHY/Muw2vCL4` +
    `hOc0D9/xENm1mTTvax1QH77LrWDDxB0wcl4sR0wiqZ7s3yS5eqGtFtDGVWXbPVlxJQ` +
    `c/C8KcI48Ef1nDiSIvVro9JLB+zzZ0tN8wUUccfJkrLFXsnS9JINSO0o3Wee3z04Wb` +
    `6IUn4kj3vlR0MhZkpcKaMD9tkVoRm4siLU1fHXv//rw/sbwGkKlp5GVEJLBpzkbEl0` +
    `4VVV/PuF/t51tKPcDywlx66aBgtTWqSAVZkpCYcVXiseJJvNMsUDFV0PjB1K91Wrpr` +
    `LTJ3PYdEcgZ3vZrZXuNdQ7Uyi+akqsGk6/y9hdsr0vtGivIs22N3UNHz7lBlWjescN` +
    `9O5JN9BQn4UbGCmu6QYa4yu5wU5T/gKxdk3ebfSPVWu8bXTTkO4y+s7tr+E2Zu+Q6k` +
    `raOXz7G/a71dKpmEMW7xLsgM1fTK5Tdr9IwHM94u1mlt12iWrcedonKsBXdIrNNP7q` +
    `XlEhfj232Js5X88vDm6YpS45SJECm0KjN1r/95/QfFTr5tPDbrepbrMtKVndVWDWbs` +
    `OVFHL/Wb15KmcHul2bb+8LySkRMGMwJ5zs1j5n9gQ0+6SQfA2S5GWGJYEVzTKYEPU9` +
    `ISnQQrI2V92iNhlb17KqevCerXab0QfuZwVdqftITbgTzCTLjkZpmXV2G17Ah4+8zX` +
    `+f316sgXtdqb+GDtST4QVCd9+P7jhlV3UiThmqrwrz8FHPjxL+uyCLbSVYcspeQ9GH` +
    `mwMv7GtKUf6eosyg8zPRVTV1/WzUFeypy0xRPxN1VSPdVwnjt/sarK+czfdPrQlia/` +
    `fE/LAD2Zv2JLG9fWqO2IWvNVFs7Z6YJ3Yge7c7ttv9UKP0b4KO8d85wzw9kzlR01Tz` +
    `pI6K5sAFv50xfcceG6Pkx2Zx0FXvVOw0fvazP9fb/sjHQH8yvbjGj33ML8Q6h1ytt9` +
    `BiklPZOSz7kmZhh5V/T8Qi2zq3qtfozgC/rXeuDzyhuqzO79SWnQ5lQD+7ulHwN2lq` +
    `3X77Ryb7AjNZM1m9o5wkkjW867x8lW7O/dBU45GYqQ9ABXRh3HQSbsdF/en84KiPXD` +
    `1C0qxzrg4vUZMcnZy/aAmXZtfLE1tbHUkWNdCPOCf7nqF26+BRi8uCp7sJsv31a2/C` +
    `0rVejHvmR9//CwAA//8do0KqBT4AAA==`)
  if err != nil {
  	panic(err)
  }
  container["templates/javascript.js"], err = decode(`` +
    `H4sICHuisVwA/2FtRjJZWE5qY21sd2RDNXFjdz09ALRb73IbN5L/zqfoTDbO0KJISU` +
    `5uc5SZVOI4tbnKOi4rtXtVLtcGnAFJRENgAmBE6xx9vQe4R7wnueoGMAMMh5SU5PxB` +
    `5gD9D0Cj+4cezA3TUKk1LGDVyMIKJfOtWY/hwwigUNKoik8rtabGy9Hd5QgZSr5shl` +
    `nECvIVqwwfQ8I1m4HZKG1hpTSUqmi2XNrpmtuXFcef39x+X+aiHJN4HosWpZOsuW20` +
    `PMZLilDTxtrazGczY1lxrW64XlVqNy3UdvZrww1KNbO/fvbZZ599fj7bqN2pVadrbk` +
    `/thp+ywjasOtVcllzz8nSlpD3dbbg8FdacSmVPS74SkpenQp4WxpC9hTGxxdyZNYFa` +
    `q5pre5sMYCdkqXZo/gu1rRvLyyt7W/GOSzZVNcb+1579H6xqeN4Ke9Qwz8+/uPjsfF` +
    `awqmgqZvmp5e/t6U6UdnO6E3Zz+gu7YabQorazi/Oz88+f/fuzj8MPGtya25/4e/tP` +
    `ZIlHiYImgPNzJf6LuyHOZugAa3HD5QQaw6FgxYaXUDB5wwyt/ZJbyzXUXK+U3jJZcM` +
    `fHK8MnUGjOLAfJd55nBEAz7AQsRgCQWDT1Pb/9Rl35UN+icxon3/tNnjmCbDy+9Hpw` +
    `ON+xrahuh3RFvYP6Ym50ipzn2VKVt9l4Ahl50op6I4WFkjiRSE+2OL+gtjy7KDMi9E` +
    `QkH5fAzzmcQFa/hwxOIruD4C23WhQ4+MC95cw0mqO5tHgk2julp56SYzxqw06Lihnz` +
    `gzB2ysoypye3i1lZFpVJt/IEiso4X6EYkmeOKsdBiBJHNMGfyHgC2diNnw8qMo+LLB` +
    `G/3sZ26u0DzCSix1mp+Vbd8M5Q1LUR5WBw81qwO1LiBfspQrOIIuvkmY3aHZGH3fvy` +
    `3FiGxJXCsGU1aKEbnScoYQFZ+J217Fw+nDvzYezpCJ6C2QlbbDA27HZcQilWK665tH` +
    `Aj+M6M4OlshLnIP8MiBBt8BMm2fA7Lxlol4ftv0f8F372u2G0ljJ1Dhv9lE99+xZku` +
    `NnPIDP1o278VmhdW6ds5ZEutdobrLJ7lf6CqaGTIk8T1tse1AvljjuzXIKSzPHSR8X` +
    `42Zn7WaCxuFAaekM4ZuQt2eC4/T/l1JwigYMYRzcHthR1smS02Qq5jXuJHf7gmJwj/` +
    `OI3EvL1+d3B1O+Kl5uy6ayj5ijWVnUcUmJZEWXJQdsO1iXrItx+m+7DOu1H3N0yG76` +
    `L5wwmoeSFYBYxWw8CSGV6CkmA3HAyveGG7aenmkWYxSzwh6wZWqO2WyTL3rpFNIMvG` +
    `l6SOyxJYIBgNWt3Jdt4XCUa8RJYvFglFvMA4Ud5dMXhn46kbRt6bzJRmpYrGxCR3Q8` +
    `Zh453bij5mv7zhLst0cGYC9rbmE1jJDuTxahqIMdpxyXWweaArDwIm4NAhar+jpB8x` +
    `WcuKDfHlmZIYt1q9RB+AzxtuMP3dKFUq5WK4a+lZvRXyu6sJbNn7766ccZTjMYBQW8` +
    `iVlhIwr6ZCSq7/9tPff2izKHsfgA+vpkUluHS5Hgl2G1FxyFcGvlw4XfDkSYIYcksY` +
    `yYzhy1ZUGx4MnC7gwg3MA2cDz52giMiLdsvV2vMUWdH/dhxYVakdKMmhZmvuVpeoaW` +
    `y6kQWztLFo6p0gb7t9b6cVl2u7gS/hi8eYD4TvM6sUVEqu5wRDrEcV+M9NKiowlSh4` +
    `fjaBSNspnHeUkYlWN/wy2uQ4LW1/pzteq6Nano0x8T3Z8KoS9WUWOf2IpBjE3tMWUS` +
    `1wxglWdVnN+ZaOnatzJl7F8LJDHeab2xeIBF6xLc8zJyJrUZ/AH5QfBCzg7BIEPEdr` +
    `nNmXIE5Owlgda86rt+LdBM4vJnDxRbQbUJrkuzcD/t8ZSc4eu/DfuFhvbLftrRbrNd` +
    `f7UpwMf2Qphakxsbgdihjd79UwPBcRvbCwJznSmDYAK7kGY5vVKmzmNIAGuh1fGlVc` +
    `c+sOWL4zsqzYlhMomWVdSPoIE2zIxsHV0Us/QEsNdzR5OzNFvfl/XP34amqsFnItVr` +
    `dI6DTNO4554IvxsnNTP4KdZnXNNVjlzjzeWGaASVCyqERxjXT8PdvWFZ9jqK4rdpuN` +
    `p74XFrC08kVIMtQ5gXOHT7ueI+M/BEJ8e8hfHddlGvh35l+sLPUEduZyNPILvhfFs0` +
    `qxMptEXnZjvYs4fnSyPNuZbDy9wVMrOYTmrISVVlsHDSQIWTcWVoJXpYO3zo+c1gkE` +
    `f5qErRdQcI9MafRlhoYUGybXKYdDiAxWfAefriu1ZJX5FNfIalZck5PVWhXc4DKVUD` +
    `SaEKexeABVK0dQsVuu/S5af9toUgYLOJ+ehb28flmx2lDwOotar0jOwi8DCppDVrMG` +
    `wcPIQQppGkSu5KoTv1o1ZzZpMkKuqx4Vk6XaplQUgs/cg+TvrW9wixwM1VppTChv37` +
    `VtASZ/JyqeduGqISK74oWSZXJAoqUNHkYBRuCk1Ewb/r20rh9m8G9nPsYTiObFPs0n` +
    `HQ3uYKR5DudnXaB3XNkZZhfDizg14NHB86H+lM9ZlD2RS1Nfur8oYiukF+GwR8x8iD` +
    `vlo79PZ/HmQuoTyOaRjTTpGAs3wrTzZkA3kqog/IZr8ro1twYKViHwxcZbFKBkSbGk` +
    `LtGF7KatkDg/Q74yuKKQVEah395pEfjeuEjrl9JJeq3VWvO0VNVCtjzz4rNxkll7Xp` +
    `AHb/eLxvMsmHIfY9g90XK7TfLWxbt3BIHpJ+GQsK2edxsvOT4JWWhKtR7YOy8VK9pr` +
    `ePbBeZIK44wUZsMDNsfg62cCkTTl/53HeO3wYBZrfYregUv8SXsyaQlPFnDeByytk7` +
    `ezBZ/ABY4v8jG0g8JBv7KRLSshr7Nx4qhHuXylocfoAgO3P4ktV43NUy+Y4JjOQhrw` +
    `joLnQ4oSg7Vdv9fMGj7CQ1o3FB9ZpnVjNr7kG23TGXz3/X/+/eUcKqWuDTTr6jYKCn` +
    `V04KMWq6OWIHnL6nw4/ABxnCxI1Am4rNMGD5L+fKlh9mXAfp3nbpmQJL/nusZqR+PK` +
    `JxEZTVQyqXs7yXu2t7vF1mfxgS70mo1YJae4dv7zLBunZ95BualHuTO24+9x303g82` +
    `i53VS31AciwqH5CYvjqlXJ9MTO5PwNt3iTxJwOtMTOgcgpJC7IlW4fRDnGaLgR602F` +
    `qJW2O3aGCOdSqY38gVmfFqENlJP24EAbMjz6JBweXf5tnyjPhieXiNsnJdfhd7DU79` +
    `cFASzvvykMCEAgMbEFAoPGzHtGBTyQmhMgQc9kAgFDps57Rl+G1XCFw5/jtcv/8oHs` +
    `vRv/7L0qVF6ouV9CceFpnrZhVO+KHlat1xVH6PEaib2cbhvESCssYNTbAS6/mpfHyi` +
    `7GqjrSjY/5AV0ev+2pSdp7xROatS5Vw1aVHAqrK+p7m/lFzQjW4kLiL7d41EYLlr07` +
    `GuGiXEk97+I9T0HKoakTyL51ZbQsGiFt05bgpUz7e/mlTz4gL1W4Jy+Ksv1Y8DUhky` +
    `vc4Qfigd/JsBIVnwDTVhg7ASssPVbLZvuv0EhPve3G8wynHjVk4ymxoSZR8bbfsfci` +
    `mmtsaYixR0JtYZvcT4NL5qRisowtTxAAdfSNoYGdQAZvEVHGvNj6LjsEDA4KS0p9fk` +
    `Uk3+E0vVL9FxIT4NLq2wlI/fBV6S9Oi09xfUhel+GlUxlelyjJ0Ygcj9Tei5BiAN6E` +
    `lxUtyf4CU7PAPUtvPKSOmn9tuL69osopJtiPMfq94FX19X0ecZT7p+N+cFzz8QV7iA` +
    `/NZqBkdevK/s5zPItYgbCfmu5lSkgBj7So3fePZDxpGZ0jt4+pQ3dU77I4qv4/Ltm3` +
    `Dzux9BAEPXrv8wc/1JLGOV9ReMNNraRJdpZa/tLfT6667cpLsAC1/MWJdzWruLdFnj` +
    `7zYl8v8eYZJxQ2gQwPhdl4PgAr29LPXi4L6dJF6ihhJlAA+aeGfgeTfPCpfSFhHys6` +
    `WFFxy0FVJQTCLtEmNYgW2kKUczHFYiq2ClZi3WgOqiEP3yEUdB20A2otVPsSDUGkit` +
    `5OudsJrsCzWBASwJOmOy+jchAGsT02/trwxtUvny8u4H//+39AqlSV1/I46XgeRQ0o` +
    `8F4pH3VS9s0plRN2QIhH1cKA3TALhdKaF/arlsS5IIn1hW9aWmoIZegesR8aRD5A//` +
    `E+YTRkT83axD/tYjVtrk5pAoB8ChLpa7A0D+FaT6BWRhDAB2EcvsBfr/B80Ms97h8G` +
    `1UCZSg/b2jmskp/62e3VVEC4CnXiw/HbtT2PpmMx2py8r4tSYZSLu430Ei3P2mwsEm` +
    `Y3E0srURNKGIp3dfWaqswPHb4Xd/9r4L0MTWWLbpFTlXsIM9Z1tAAe1nZq1RXV6PNx` +
    `KnlvYLju/WEN2YqnnwFLRz2u/Rl9Q1jkUOU+0Zs53JJNktaBMUX9iTndNqYyIuX5Lb` +
    `vmGKQwuQgJBdeWCUmnDgO5O03ACXw1HnQWLdT5EW/B7uyAn2mhLo6zXhxhfXac9dm+` +
    `k34UioPhhDTkrWhwf2ljlNijvXgE7bP7aQcdm95oceDv64pJh4HZUt3whAgHmDSAP0` +
    `xTZY1OrPDbb3Eg9RW3J0/6bGEzI30Xzp8v4GKckPanL5rAB+z3aAofQ/3sIdSD09hB` +
    `HQzz+8Z7uHI232t/nHLPkd5rSVScX/z1iJIHzsd9Si4+//yIkgcu0UEld4dW/v4ghv` +
    `8yXIJeGKN2tBqPqMdjGvTjWjJ9f9AEXJ0/ZsKzQzmINEJ2dkh+T+DdgUSSYmNW11yW` +
    `OcbC+GpODKb7tZK8B6EivuS9fX4c2LvLQW+4aSobwfv22pDvuQ++O2LQRB0jTlc5/A` +
    `BrAj3z/qvFu8g6DH80qIGbHZCWwRN1UImtsA6D46KQjC1770w3g3edWl3xKA/VzxPV` +
    `Ulm6Q7dSjSyzQeH7gh+JYocxqqMYAodO18Og4aGUa/TXZZn1kUa4+unvUa6UJgMNsA` +
    `oPxrcB9u4d33x5MoW8QhZVU3LjYG8/fHfAxmxUU5V0iaksgQXtVoEDTyCsuzkQq/6q` +
    `n6/vD4/xhkSGbssPvMB5hNy9CxYZK+mCRB/t312mIaG35w6HhfB7b6sf2+tluMKI8C` +
    `Xd7GnX8IsdiPfNhpnXTHPZw9VtFS+V6FzzQF2v43Q1uqys3qidk57tkYTqHllRE9Ee` +
    `zfEiYUTY3wSt0a/Ylh8oeEHY4U65w2DwVdI2h2w6TWx/2xc+gezjsvrGXRztF/oHDy` +
    `upsTeHrgm1d1Ejg1Kn618Q7S/+AbdL41vC9JAAF062fUhP1FN7W1OBpDMmG5qE3+db` +
    `+95Ft9+PHl4Pe87jfceF5G7KUml/zDUe5Rz7SCl4y15Pz+TjsOnu/hPQ78xbvy9z/d` +
    `HcdTx7uakZzGF/chZ7cL6520tSD8hlD5Z+KJ9FE9Ez51CWfXi0GYatd/FNBVVz+U++` +
    `vKIboUMDpY9CJN9BS5X7G4le+s5MlUQxyR3Zmyip+U9mfnz98lXnYnsXKu4icUWl0h` +
    `L/kLwXP/x49bIT6Axtqqq9oxIDTtwCkhfu5cS+wi03hq0Pq+y9fXC3W+kyEtJNqfg/` +
    `IJb374AkQjsDWxmRCPqTLI/HJv4KqZL0HUIqPQITdD2UPlcEBivNzQZcaRmYAaO2HP` +
    `zHOAZyPoX1FF5stNryMZjGoDuBanSQFO51RRd0ust3RNS6tTtkvXGq/eccYTjpRSk/` +
    `Hnc3SdVD3he+trKqDssWLrVRTMcp7NrdHVC65dpsQ9hHR2tJSNAEqEqJ/9ea3wjVGE` +
    `/r9256mad2heBDttVRJTjYMGCct2kCsfmPsc19zNQzDbUds81daOvZcGzq/kTjendR` +
    `YjOT6y3d3Zj+7ZVHXo9Jr8Lg4z0H9/RCDbjpPMDTveOfzSgZheRglb9f6nLT6Ojnaf` +
    `F3WV12CV/B+Y+4UFVbnZ3A0Ysux663DNxNGYY0RDaBjCc3TobuqhznL+MrLb7y4u4S` +
    `P22nK5gKzBixlvRFxyhc/EU80yy3woZvtYZScBRD+yk1fHm498mWm5fujXK/P9xz/7` +
    `P19HylHTy6CKsq+oJYq8qM2rjWha8JdNvynu13dP3vm8QQLX5+4YyZw18+EOPdz+1W` +
    `6E1AWPAkld61nwa0L/fiz0VH4dZn3EhfyI7dxx5crUb/FwAA//+9BpTmNEEAAA==`)
  if err != nil {
  	panic(err)
  }
  container["templates/style.css"], err = decode(`` +
    `H4sICMajsVwA/2MzUjViR1V1WTNOegC0GWlv47j1u38Fq8UWkyB2jp10JwoKtJ1OgQ` +
    `Kd7WBSFAWK/UBLTzYbilRJyscu8t8LXpJIi7KdTLHYTMh339TL9SX6y1//9flTjijn` +
    `z22DWglVS9EfaigJRv9tQRCQ6PJ6Nlvyco9+nSHU0yxBKRCo4kwhCRQKRTgzyAbLAO` +
    `YVrgnd5yj7ypdccfSZM55doZozLhtcwOPl9ewAlazWCngrsytUtEKSDTzOPJYkv0CO` +
    `7j40u8cZQjUWK8Jy9N4eG1yWhK1ydGPPBadc5GiDxbv5vOICVoK3rLzQsCUunu3RI/` +
    `Q3F4+zl9nMueFdTdh8S0q1ztGPv/vQ7C6MIzqPaGuHzL6DSv9nLRvV+kVzJ6xp1b/V` +
    `voHfZwp2Kvv5Krhjbb0EEd82WMotF2X2s5Ht1Lq9ufne2MRFCSJHt80OSU5JmTDdoM` +
    `0FLkkrO+ct+U7rafznMJbcQOZbWD4TNZ/AqPkvE+CBD26hNs69vkQFr2vOkFR7arNs` +
    `sSQrY9YQ/06b9jKbLZaclj10CzpLtCBaWriOVlsf0N94elljSmPwzeLHe6fRghScWT` +
    `ihNEeMM3gc+FijIbR2ct2Rb0BUlG9ztCZlCUzflUQ2FO9ztKS8eNY3Ugn+DIlEtECf` +
    `YR++H9xRwuA/XCe4QXd+oIQ92xQ8SOHi7sI7S/sfSl+zuCwRtlxcbNBvkQSF1BoGfJ` +
    `BJWp9Gd69JI1+St0FJzpdcKV47rHHd7zvdd19BNpzpyvcGyC1RxZqwle47WwCmi7ut` +
    `GXpX8yWhcIEwK5HgW/SuBPmseHNhjemiUVGwyUhhNy+JsA0rd3w0BFOyYnOioJY5Ko` +
    `ApEFajNSmtIg2XxFLhpeS0VYB+Q+qGC4WZ0iwUb3I0f3h4eGh2EYhCpcZhL7PZslXK` +
    `ZV/XxO5Ch94dlmnLJKjHt0ZsMsF1a5obx/QuiSrowWJORLQRhLumeVKDsibPhdXEqN` +
    `n5KF/rmjPceIMLovZah/vTWrpjUfGilW9jURKJl9QVWMwlmDvF+8S88cU6PWdGyuEw` +
    `hwXfdoNFE3y0teGLn27xXvqCOa8qfEHybcRNl9pprJxyYV4P+C4qbIOxAaFIganPN8` +
    `Ubi1iA69yRLDtHakwYWgliutfCnAJcDdIK6H/nCuqGYgVza6CtAnRbCV8NIRYWgGVu` +
    `fJ4tjKRPQnCBFtnw7iNnSnA6cgtMoUV2Spg7vU9VdPgWo3jPW4XckyNpwrgRKTNGDf` +
    `FJ1nP51TtNC8p79nHSf1dVt9Vt9diRe3EjDBwoxNUqJHDBtdHrSwSsRLwKk8JniZcY` +
    `JMtQjVNzBreK2x86IN1pOn8KJeg/CWyR/uWJs9XEL9m3IflC8R4EWpjDZ15C90vmKs` +
    `tjR4719z2WkTWCpe97rE8UN9J1xQjRgQYT570dHMEwubd3dhRLoFWuI5qaRF7sn1uB` +
    `zefHiFwPOxR8wmxLqeMFOwePiLWQHtN4fwRP34/kbpyq5sHsg9XlbxC+c5L3tEz9G5` +
    `EqSqsnwKJYR5d/EnwrIRs+H37wr+ohr1SWaViIbcWk8C00pLA6pCgsNPLzgT+9k11U` +
    `AzcPIn1+lzjaIawvrQz9c6DGk+LN4PhFwIbwVg6uftKfj49mOh8Na1JEdoAzIQhpt4` +
    `Q1YFgm60D/jKvGGJakeOqn/6FKaTkOI6bUmqepNHQkN6I08NlhKjnIja62/2+ZoSV8` +
    `5Ey2dd/Cv0IDWHXHJ8JWdADFrOR1FjYgzyLRhxw4pHFiEiQWGlI4TRIUFhrJMMomZR` +
    `iopVB8taLwd9vpTQMvoeC2w+sPohKE/moeiWYQNh9LM9VWgnSh7MZc91x1zy3f2N77` +
    `mXBWrP0zYbrv4kKRDWgV/kEUBXTknMVUfxRKd9mjF4eEdNnW6Mh50CH8mO8xvgi+Ei` +
    `AlCmauS7/YjijOETg9modjePgEODA4KcDC3yTBuCYtQIPfwr9zZFKExzhj4zcudkxq` +
    `STaJ3VLwIdzXw83Cvab8csGtD6YUetHlh5HUtUYYwojqoOkS1Ff+W/NVj/F0G9Ws/a` +
    `tKGpMJN798BEqzwdohWFUd/3Abqny6jq/XclxP/13mtRkslHyOuKX4MLJ2x/nSky06` +
    `mWN7jpOyzTZejOwGgIt9FOLu/lVxngxxx9p7sL94W4wPdD5JyTeoOR3kQJ0zIx3Qfp` +
    `NwLw7siVpXDI+I/HJnlAIojTvk1WzBYKe6SX19ObZcu70Y7lj9e9VXUizQ358z2Icz` +
    `3a+5zf737tgmyUuz09CfuqEZIrmRFh5jHDOUgtMpS6frS+SW5XZ1FLpn0nD/v3fAZD` +
    `/rTEUpowL9B6+HYVvr2SSC170eUlM2kp5g078RjvIZewsEwFO4pJYXMTx+VZhJGwuQ` +
    `Cgs1zEg3j/3S9foStWwDglSkAvsUXujWTA63O+7aKusO375nO8a+dbjjJ6bEPgtEJ5` +
    `pLCD2zfqfLNGT9RZAai302BnuCgrMSe5WPTJMRg47VWl8JQwclfGFgr+1kaXdoVlqC` +
    `rUF/irqWv3YlFh5jHFM+wclhdP3/J1wDCk5ZtKP74P6+e2anO3Bj0jk/VALdVcL8e7` +
    `zj+c35uLNirxw6IOHXaZ+cfhq01FDDKJMC4GOAP948Q2hEMdYmA2CIn2qIMdxQlWQz` +
    `aE45U+t5sSa0fAcbYBdXBu5etzEw9Ud092fLac7xi2la0tjz6vCvhFNCeVkmrdGwlD` +
    `Gn8D3VljHcEVPuu68A4JWut/8FAAD//6XIsJ1pJAAA`)
  if err != nil {
  	panic(err)
  }
  container["templates/theme-default.css"], err = decode(`` +
    `H4sICNOasVwA/2RHaGxiV1V0WkdWbVlYVnNkQzVqYzNNPQBcikEOgjAURPc9xSTdkZ` +
    `SqqGnKacpvESL4SVvThfHuBiQunLd7b2xkzngJQFcgXsbg0UeeMeS8JKt1KaUuTaKB` +
    `eUo18aynsdOlUXkIc1Ax+JpSQqWFAJTqHN1vkZ8PbyFDv9JuoecYfuGw7RvoaCGNN2` +
    `RoFycLeTUruzj/Py4W0jlnnGnF+xMAAP//Q68dl8MAAAA=`)
  if err != nil {
  	panic(err)
  }
  container["templates/theme-juri.css"], err = decode(`` +
    `H4sICNOasVwA/2RHaGxiV1V0YW5WeWFTNWpjM009ADzMQQ6DIBCF4T2nmMSdCaJVUf` +
    `E0OkA11Y4BGhZN795oSWf5f5OnHFGANwMQOSAdq9FgHe2whHB4JUSMsYi1x4Vo8wXS` +
    `LrZ1FrHmYTG74c7oAr2HXDAGwPk84ePu6PXUCrJOo+7b8QJLzvyhvO4HWCnIZIlGzi` +
    `ncFGT9oJuhSqE5P5oB5ZRCe45LtJ0d2ecbAAD//9Kzz8TDAAAA`)
  if err != nil {
  	panic(err)
  }
}

func Content(filename string) (*[]byte, error) {
  if file, ok := container[filename]; ok {
    return file.content, nil
  }
  return nil, fmt.Errorf("file2go %s not found", filename)
}

func ContentMust(filename string) *[]byte {
	content, err := Content(filename)
	if err != nil {
		panic(err)
	}
	return content
}

func ModTime(filename string) (*time.Time, error) {
  if file, ok := container[filename]; ok {
    return file.modTime, nil
  }
  return nil, fmt.Errorf("file2go %s not found", filename)
}

func ModTimeMust(filename string) *time.Time {
	modTime, err := ModTime(filename)
	if err != nil {
		panic(err)
	}
	return modTime
}

// eof