// Code generated by "file2go -output templates/files.go templates/index.html templates/javascript.js templates/style.css templates/theme-default.css templates/theme-juri.css"; DO NOT EDIT.

// Encoded files:
// → templates/index.html
// → templates/javascript.js
// → templates/style.css
// → templates/theme-default.css
// → templates/theme-juri.css

package templates

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"io/ioutil"
	"time"
)

// file stores the content and modTime of the decoded string
type file struct {
	content *[]byte
	modTime *time.Time
}

var container map[string]*file

// Init populates *file with data decoded from base64Encoded string
func decode(base64Encoded string) (*file, error) {
  gzipEncoded, err := base64.StdEncoding.DecodeString(base64Encoded)
	if err != nil {
		return nil, fmt.Errorf("failed to decode data(BASE64): %s", err)
	}

	var buf bytes.Buffer
	_, err = buf.Write(gzipEncoded)
	if err != nil {
		return nil, fmt.Errorf("failed buffer decode data: %s", err)
	}

	zr, err := gzip.NewReader(&buf)
	if err != nil {
		return nil, fmt.Errorf("failed to create reader from buffer: %s", err)
	}
	defer zr.Close()

  decoded, err := ioutil.ReadAll(zr)
	if err != nil {
		return nil, fmt.Errorf("failed to decode data(GZIP): %s", err)
	}

	return &file{
		content: &decoded,
		modTime: &zr.ModTime,
	}, nil
}

func init() {
  container = make(map[string]*file)
  var err error
  
  container["templates/index.html"], err = decode(`` +
    `H4sICPaksVwA/2FXNWtaWGd1YUhSdGJBPT0A7Fvdj+O2EX/PXzFRXxpEkkXJsq2Ftc` +
    `Xl7toUyKWLvcP2442WaJuJJKokba8T5H8vSMqyZMtfG+/uXRHgcF5Rw/n4zZAcztjj` +
    `r9/94+2nf9+9h7nMs9uvxuoDMlzMYosU1u1XAOM5wan6A2CcE4khmWMuiIythZw6I6` +
    `v5qsA5ia2cTWhGnBWZOLgsnQSXeJIRCxJWSFLI2FoT0TFtScmqZFw2CFc0lfM4JUua` +
    `EEc/2EALKinOHJHgjMTI1nwAxJzT4mdHMmdKZVywjYCMFj8DJ1lsCbnOiJgTIi2Ycz` +
    `KtRtxEiHOI5ZzkxEnJFC8y2Zz0teM0ZhviuZSluOn1pqyQwp0xNssILqlwE5b3EiH+` +
    `MsU5zdbxPZswyb79wApmVYbsir+txh3n9uli6GwuCVuI40LGksqM3P6TTODD3dtxzz` +
    `yqGOhtgmA8YekaaBpb6o8GBFBiIaDEHOdEEi5gylkOOaaFO2MgGcxpmpICaFEuJEwp` +
    `yVKxtSmlS0gyLERszWlKaqPHhlzJWwkL5LoksSXJo7RgibMFia1ff3VX4rffNpr0Ur` +
    `q8/Wqr1ceHvwFNWGFkmXGxnAHmFDtGpdiSfEEsmLJkIVSkxtYUZ4JYoAGKrZSKMsPr` +
    `m4IVDc3EOp+wTKumBDgJ5YmKchXG37HH2PLAA1/9q+cAjA0VJI+xhTwLkrX55LE1sm` +
    `7HPfO6ltEzQg7KVGqdklhiOYc0tj5AYAfwAGgIPwAa2siD/yiR6v35AvFCnLSRk0SC` +
    `WbpW34I5UdEXW6hvwaMeWcdWoEQrwrPnIb974kmdCxMuZ4Lkb0GKOjFqUSPUwHT0RE` +
    `w5WZ6vHxo1JKLTGkZbcv9p+gnJyktcPtq6bqQ9N9COG1zsOEEwT+bnQ6P85YYQ2GjY` +
    `AUlz5QVm5Q31wgvd8AlLL6PigqhSYfI99OEBAgiO+mugKdFIkR4PPTuqWEYQnWAZbV` +
    `geJ0Q2CiueKAQUnuCqiTXbfdKT+E1ZlhJ+LoI5+LYPcwghg8D23RDmoAWP4Hvwn7Lo` +
    `2Oq09BlIjgsxZTxXhwQuRIYl+bNnO/43DbqNnoKltGQpvTHHFOaJtR1Tceeg0O0Hfu` +
    `iFVmMyNIjWseW7Qy8IQhQ2JnOzirbPej118xASc7VrNshJkcaW16bXPnSQ76LIG0TI` +
    `HrrD0EfDYR/ewMAegAIEgYMiN/T9IBjaQ9eLgv6oP9y+bjF0fM8dRCPb8Vw0DHwPDY` +
    `MWo8CN+iNvhGwncBHykB8cYhQZkPpDuwsLVtZHdmtaw1WcSeUnByntv9mP4p0Nyx2G` +
    `2y1L7QZq04rU5zq2wo6Dqjc7O84muLhqSrC7BD21BPsHw78jTWGFWOQnz/DzAjpwB0` +
    `NvMBz4TVe0ohkF7iAIh4PRJdF8RixXALgR8vuRh2w0cgejfhg1wrfBEIHjuX0UoXAQ` +
    `BIrW88PIQ634dMOoP0KROlLdYRj5KOyMz9BFYaiWy8j3/SjoN3hEGzTs2mrIwBnYHv` +
    `zSNK8jUgOvI0wbu5862OyB3vYcdPFmV/ncSanOb9M/nP//4/w2pRvayA11er+XA23D` +
    `5FCccFISfDKraexXg9Z21e/crlp5l9pUGzOC46nXcT3PDufnVviaLhC0mF10ixxW+v` +
    `lHLGpoh+wB9NURHMISkH/5ZUDr9xTor6voVcMeFynLL0lF1VIcQAZ9dQDPYXA0UfZN` +
    `ojxSF7Zq6sWwGxUv28CfSddrIn/GzXKrW+iG9lDJ8mwfUN88Hb/PKEp1+T1qg1/ZMH` +
    `/KNSanaXp6vbaN6BsjkGes6J+wQk1BYT0nAzUpPG06ipTtF1s0YVKevxoq9VCl3tCY` +
    `pJ5Pqqd8+aDQP+2d4VnuGffEctYs/mUMp8AWHH7CSywSTku5LTlWz4InsbV97/4klB` +
    `Dz0OSVY1rAjNO0s2ip3m5Lgxv695wzDjkRAs/IttpZTVWI11RWk5OZN2E8JZykYCqi` +
    `VWmzwaAx4y0rJGdZ00MbEYnk2UdWzGoJNd/6TetmpJRPFpyTQmZrwImkSwKCFbOG/i` +
    `0BukpcczcTFNtPahw4EfQXYt3qp5YNLSaYS11Q2ePyRr+o2ZjHI3yyySLvYqPGt1zU` +
    `UzeTvZl3nM04qcv9exLL+v0+w4NqkgyXQu3jlTjlivdmDESOs8y69W58dJhBuuBYUl` +
    `a0OLyrBjcs/Bvk77BoFshrd4sVlckcJkSuCClAd2KE1fJ3Exsl6oGSFUzY4z0RJSsE` +
    `XRLrEJQb8h+Ug3dA1KtU+ZcKkHMCVXtFbz478QYwniykZIW235TfNuehrtGbk7E9pa` +
    `r2V5qo/c06q/S/ywVgvBAEHjNa/Hxjei9/2pYBb8e9hSB7ks121B4yJpwOkh3sPppS` +
    `6GE8RBfBs1u/kfrs9n/H2WpPsab9E03AXxqAqop5TQA6V2iZ4bUNuvsCRCbu0bV5l+` +
    `E14ResTjNB/X8EYdNr0pt9bHXQPjvWWoEnIH3QIk5MJayy6d48fulWVS26jaPMU1dv` +
    `9aUM1Bo87xZhAvijuk4c2SL1baPCpYP2+XdLLfMFgLjjZEnZYi9laUbJhqQOlO45zx` +
    `8enCxfBJQfyeNe+tEAxHSJKzA6aJ8dCK3ASwBxT3K2PHaWckPwmmBMcHFtLNQx+te/` +
    `/+vD+xvAaQqW7sxUVksGxmidhFa3n/1Lz97RvIPvB5aSY8duQ4UpLVLAKuWWhMMKr5` +
    `UOks1mmdKBiq7L1o6k+6psVbnpk5lsKkWQs72dvuViTfXOJM2vejxUxbff5ewu294X` +
    `2rRXsWZbp7tGDJ8Kg6povxMGevRkGGiqzyIMjBXXDAPN8ZXCYKdBcYFZuy7vdvrHqk` +
    `3Qdropznc5fScT0nQbt3dYdSV0DmdCRv1uWDqBOeTxLsMO+PzF7Drl94sMPDci3m76` +
    `+u2QqFq/p2OiInzFoNh8M+HqUVExfr2w2Ou/Xy8uDg6YR51ykCIFNoVGnbj+Liw0Cw` +
    `y6EPewW3mrS45LSlZ3FZm1W3wmhdwvMWzKBtmByt/m3ftCckoEzBjMCSe7uc+Z9RGt` +
    `PikkX4MkeZlhSWBFswwmRL1PSAq0kKytVbepTcXWta0qH7xnq93C/IHzWVFXcB/JCX` +
    `cWM8myo6u0zDorLy8Qw0fqFL8vbi9GoPP+8iIYHL6VXHXp7sfRHafsqkHEKUP1UWEu` +
    `Pur6UcJ/F2SxzQRLTtlrAH24UPLCsaaA8veAMk3fzwSrqgP92cAV7MFlOsqfCVxVe/` +
    `tVlvHbfQTrI2fz/lOrm9oaPdFL7WD2pt1VbQ+f6ql28Wt1V1ujJ3qrHcze7bYwd1/U` +
    `LP2boKMVek5jU/enTuQ0VW+tI6M5cMBv+23fscdGW/2xmRx05TuVOo2fQO33OLc/eD` +
    `LUn0xdsvHDJ/Nruc6GX+sutJjkVHY2Dr+kvuBh8O+JWGTb4Fb5Gt35MkMbd64nPCG7` +
    `rObv5JadAWVIP7u8UfA3aWrdfvvHTvYF7mTNzeod5SSRrBFd5+1X6WbeD00Yj6yZeg` +
    `JURBeum07B7XVRvzp/cdRTrr5C0qzzOwbwEjnJ0W8RvGgKl2bX2ye2vjqyWdREP+Kc` +
    `7EeGGq0Xj3q4bPF0F0G2vwTuTVi61g/jnvkB/P8CAAD//0qO/QERPwAA`)
  if err != nil {
  	panic(err)
  }
  container["templates/javascript.js"], err = decode(`` +
    `H4sICPM0slwA/2FtRjJZWE5qY21sd2RDNXFjdz09ALQ77XIbN5L/9RSd2VtnGFGkJC` +
    `e3OcpMKrGVOl8ljstK7V6Vy7ULzTRJRCDAABhR2kR/7wHuEe9JrhofM8BwSMnZXf+w` +
    `OEB/Av2FHswt0yDUEuawaGRluZLl2ixH8OsRQKWkUQInQi3d4MXRw8URIdR43Qyj8A` +
    `WUCyYMjiDDmk7BrJS2sFAaalU1a5R2skR7KZB+fnv/ui55PXLkMSXNa09Zo220PITr` +
    `GBGnlbUbM5tOjWXVjbpFvRBqO6nUevpLg4aomumfPv/888+/OJuu1PbEqpMl2hO7wh` +
    `NW2YaJE42yRo31yUJJe7JdoTzh1pxIZU9qXHCJ9QmXJ5UxTt7KmFRi9GKNYaPVBrW9` +
    `zxTYclmrLYn/Uq03jcX6yt4L7LBkI8SI5t8G9D8z0WDZEvsoNc/Ovjz//GxaMVE1gl` +
    `k8sXhnT7a8tquTLberk5/ZLTOV5hs7PT87Pfvi+X88/0P84ZRbov0J7+xfCCXVkgiN` +
    `gdbniv8dvYrTKRnAkt+iHENjECpWrbCGislbZtzeX6O1qGGDeqH0mskKPR4Kg2OoND` +
    `KLIHEbcI4A3Ap7AvMjAMgkmoSZ335zU+XQ3LwzGk8/2E1ZeIBiNLoIfEid79iai/sh` +
    `XsnsIL8Um4yixLK4VvV9MRpD4Sxp4WYThpWStJAE72TxduHGyuK8LhxgAHL0aQvCms` +
    `MxFJs7KOA4kTsSXqPVvCLlI/YamWk0krhu8xzpYJQBeuIM46McdlIJZsz33NgJq+vS` +
    `PXkvZnVdiZ5jjKESxtsKih1U83GxIsHX65SzXj+Zsca1usWON6GveI05tkf0CjliBc` +
    `EUHYpZqe0QipNkEKPmhl2LQT4oJmG2hjkU8XfR4qJ8ImqR6fS6HoqrNFMiPebqDEPT` +
    `TB86cBxGCJN9HK/CMIqfSzGOpp8dwWdgttxWKwoh2y1KqPligRqlhVuOW3MEn02PKG` +
    `WFZ5jHmESPINkaZ3DdWKskvH5FbsJx+1awe8GNnUFBf4pxGL9CpqvVDArjfrTjr7jG` +
    `yip9P4PiWqutQV2kq/ZnYpXoRDhZ+G9n/Ci4NFmsmKwFzsiVHcaFmyL7L4nyDXDplY` +
    `pYTq+wttNgD05Nr6CBZ06cqbNlmghYfn1QwBywvAl8IK5sedPRB6iY8bgz8C65hTWz` +
    `1YrLZUqyVYIgnAodXUfbmYzIxlqTcQtk3t98yKavNbKbbqDGBWuEnSUQlP54XSMou0` +
    `Jt+qK4uQFZvLHnskRTfIIoD0fd/7QkG6w4E8Dcjhq4ZgZrUBLsCsGgwMp2CxWXuLOI` +
    `do2LzLKKTs9KrddM1mUwtWIMRTG6cKxR1sAiwNGgtB1tb80JYSrTnLnM5xlEuv09Yw` +
    `meQOmjyNdPTLyuZX94oarGpKMPQ4LS4IN385A2Lm/RJ7o0ftv7DY5hIbs6E8UkAlMs` +
    `R4k6yj8wVUYCY/AFKnF/cHVHgmQtq1YOryyUJANq+Tr4WHu9Q0MZ+FapWimfdPxIT+` +
    `o1l99djWHN7r678sK5MoOCkxsL6d1YsK4KQDHhUqL+z59++L5N5ewuVl8ud3GUvuAg` +
    `gO2KC4RyYeCruecGz55lZUtpXaFmRlQnGPiqpRcXa2HgZA7nXr9Qwht44aklQIG+37` +
    `VWqM8IlUxyi8CEUFtQEmHDlug32UGTGlY3smLWZSa3A55QUMDe2YlAubQr+Aq+/Ggd` +
    `gt9bpUAouZy5qsiGIof++eUlLkbwCsvTMSQsT+Csg0zktLrBi8TpaW3a+Y53umsHuT` +
    `wnBYpnKxSCby6KxAF88jZ0FJi0Bd6clHVVXpfJvZ3p1NA6w3K+OlAymW/vX1LN84at` +
    `sSw8iaItQjn9cMmGwxxOL4DDC5LGi30B/Pg46upRSxTv+YcxnJ2P4fzLxDP8PvPlEv` +
    `W7HX/wNML5p+ZmQ8nE+xoV/MHronA+zgVi0buQYEwbYpVcgrHNYtEy35q/srrWY9ga` +
    `76h5oIyYW7w2qrpB689vYTKRtVrXY6iZZV24+YSyb8zi0X7J6n6FFhoe3GJszYT4lv` +
    `919eObibGayyVf3BOg5zTrMGYRLy3HvdmFULPVbLNBDVb5I1UQlhlgEpSsBK9uCA7v` +
    `2HojcEaxeiPYfTGahFmYw7WVL2MycZNjOPPFcjdzQP99xUsYj3mqw7rogvp0CgwWuI` +
    `VPl0JdM2E+JVWsZtWN24uNVhUa0qaGqtGuoDOWjoFq4QEEu0ftD6OvGs1IApjD2eTU` +
    `e8TyUrCNcf562o5dOQq+BCQCMyg2rKEcGiJuQ+Wg28exU3CDzCYDhsulyCCYrNU6hX` +
    `Bx5pR+Sryz4TG66fJSa6UpaL7/EEZirfkdF5hOaGQ1lSBXWClZZweXWzr6d+695qT4` +
    `hmmDr6X1szCFfz9tXdlgtQvxxwhBZkwQL+DsNG6hxyhOKWAarGIWiAdDLikAzdrZsK` +
    `N2xU0rpgHdSHe8x1vUbiOXaA1UTNBBhAbvCVvJ2lnxpqa9sSt0Zhs2j7DquLtcuu6A` +
    `+x2sgIqsW+/zbtU8lbdaLTXm/ZdwiiiLQLoYZdG5t9xlNB+3QlgWUYjH0KIptivrbe` +
    `69968PrrRyP10yizb6orPhuAPTKXBZaReoQ+noDYEvnOlSvU2rI5WFBZfcrNBXfC3R` +
    `4zmcpel7QBJj1aYt7yhChIUrRiHpbEOJUZz+sdgtjQ4gtAsI01S3z+Ds9JRsJ5Ajj0` +
    `H7E1+jamyZ796YYE9HXRFIZwbnQHv7kl1dumZcOtii3Ym1WcIndP6NCgdvnGwaswpN` +
    `SS/SdArfvf7vHy5nIJS6MdAsxX3rSptwhg7PVrfPkd6abcohZwUHfTx3RI7BzVwEd3` +
    `NUX1xrmH7lV8YbXl5CGKsvjtKzU758O4HY7XoQqi2jTrsKJc6ZFV8khXq7zmURi/qH` +
    `ffTm85QgnaQ8ZoL3MIYv8o1swXYd9OAu9pbDr3p3eovkvRmRtTdZCOgyl2tVl0UK6D` +
    `l0O09ZNUZwKJVuH3g9oni14suV4MuVd06a9FEoqhA3nFmXF6ANY+NwrHDe4R9C5hmH` +
    `7ElJJ/x26cX/9rkn/FZy6X9FqZxvzl2adaaYZrqY6xJh2lw3wHqWiRBTXso+Zr1MPJ` +
    `fpdgWbZSKGNfbr/7d0/ct/+9XJ9zD6m9uJeDJ2g9HC/OHVp+xZOkIhLR5krVouBVJe` +
    `fUuAgUI07rRYiFvSznU1Q9ifOJOcTD1HFzkjR3ooBzm40mOHeDLaEg5xp0uDsFY1Qm` +
    `W1OAJ4X4SNotO+3x765TfFjbmtKD4cCD7BtV5x45zLVwHHULzybZfo6gHsUuZQlzIF` +
    `SvKJg/jQxQAfnV5x0y6I99BLGWNCmkPibArvKXTwIRzm7v2Ny/xX5J2DLh68EBZc4B` +
    `iYttzYMVhu3aO4btZ/jYPuaQwbZbjbttSRsCxoC4hPMZo4dOLHBYZZT6RXFvjBAOGQ` +
    `egBuLFIg9vm809uNwzGUnhrlrlRu+BqKF9tr/dV7KsOymWMoPhQwg6J9U5DEVN/c7t` +
    `Jiq/Z8DidncR/bDq0YaInIdMqF5eEzRWDVLe3Eqit38ClHvfOhxC2t8RtV997zjQGl` +
    `1fdjkPqpG9vf37aApI111GL2lp4dhhcHSiIJQId5HzBofve9QNu1DwB9q3CDnByd13` +
    `AMUreDvzSo769cX4yy6x8oLL5EIb45bEQHcX86ZF7TKSgp7n2f1htUsBG+AG4/NV2/` +
    `/FEZ/9VmepD7q6fV33VafofTCtHtokc4WL5Ds1HSZMamrn/OTcx3+fxRHOagrn/uTv` +
    `fpXKjEQsaimTxhoSth0oRFR5kufbT1VntKHsw5t6gNLcEsbW798PYV6WRVpQQECN/o` +
    `OkzMR9GWVpaKCXNi3G+vWqz2w1m1twlFceGTukA6n4saImBMfdkhty0doc2ClPgoNV` +
    `oFC75sNIJqnIluqbTyE86EN5qr9m0GFWWqfQHgXzP7HsF87nIynbH8CZEYAzdULdPg` +
    `Lw02vnf0Yn4O//c//wtS5YwCj4+hTScxok/kHqHxSUdjV5RaeVKDJEJ1yg3YFbNQKa` +
    `2xsl9nL3IcydAqdFvpBmLjLgMNKkGy4+4P5mCJogGWtel3EsOeSxsdu6wQCTGcZ2+S` +
    `skBOO9slijFw4zM8/XpD1XUWvP0/Sl8RLn9J4V3fm6WSn4bV7HUMgPu+X2Kp6duInt` +
    `W6UyLJmry6SHJIksA6R7kkeYs2hfEE1Wt/bSVxIfyh6LcRb13P7ikqx4wdSGavXcJL` +
    `auIxhqLbu5RyryxzQcOTOtwx3Jfb+8vpJaetzOXOZaPDwo5k7a89i/QulDTDgia82o` +
    `okGRuQv51NhOh8z3W5XFZdsxukmEJ5hEuoUFvGpSvcDZS+JIdj+Ho0sOuaq7MD207T` +
    `xaC5aK7ODyOe70V8fhjxed/SPok9o3i8yLfOle5Rmd1XqlHavTPPD5ufa9Qj4N1GMO` +
    `krOHatbjEBISGTRwjnRdfncUc0+O23NHqF/s+zZzlS9CiC7qLnizmcjxLAXPnc43ZW` +
    `YGf6/PD082x6YDW6AoNCZV+WkNZPZ73RR/j4f7036wm9s/M/PUqxr9hhiudffPEoxf` +
    `5K7qH4kD1F3H3RSnNFB2XiT9XR4bCVEDx/hCAt0UcRfP4IwdMnkXsYCI95icY2G5S1` +
    `C6wt5kNXz/WP0WUvryevPpNXd+X+itJfBXiHphG2rSvbKwJh/LHK0QODdtBd2eMbRr` +
    `/C0uXiWf+1yUMrFQUEp8jAC9mss5kxAsHX3PryL5bOkzW780J3nYmHPpdUt+GWaMZU` +
    `KusuyixUI+tih+wuyY8qooZKJD8/VKN4Pk+pUPYlDaO/qesiz5HxBlu4UrVQ2olmgA` +
    `k6q93Hmqt3Qggdpbzi4rISTY3GV12jfm4I6disVCNqd9GgroFFzlaBT/bALSy0Wmds` +
    `vx4unIZvpViZeOxOk/0QkZ13oQWr62IMvTLy4SJ14Z6/7HPjPc65zzvreJPoe4oOiX` +
    `vmEzv+2bf4FTNvmUaZVXFtHyWn5o1rsLPS4flOSVGLd2rrKRc9gNhfcfw3DuQi8658` +
    `cfaUia1kb9gaB/oYiQt6Hr5YgK+zsRkUk0nRLjPA+z7lMRR/qMW3/m5Wvx+bG82AnL` +
    `f73s+3l70SaVITSn5HWxxeBuGcdpSZXN8GBm0uDVIZwtOjVGiaROTx3rAVD1Z5OUro` +
    `7r1lS6HYXdDfY4e7lkhZgGeOvE5OKV0D8PeaXLcIKZV/xJh+rzlFfnl1kT09mgmCUV` +
    `3kZ8fHo+b+uLkvcu4R9+A54ndlv9+T//6xDPjROfCfmgX3b8XDv35Xe/kw39CPDVR7` +
    `K9aH3dq1ewGhNij/gtdX7gLYwAU14y0IWpgy3CqLd7uUJBLZVc/bNkmGF84/vr18Ew` +
    `2m9678oSVTCZX3pXfpvPz+x6vLSMiL1gjhH7Nyk4xYYuU75zmbNRrDlvsY9drk/tKa` +
    `u0FEUBPXW+4RxP4b/YRcJ1SLfZFdBgtmTJYJU3BveGHqm6S1QiM/tbBV+gaYAbzbYE` +
    `XFekkzrlca7rrHxjATwtm55Wv099kcoZ1NDavpb8FcuNes4ToYFHQw8AHYTYfWFP3d` +
    `aLzlqjEhHvuPKCK674nFPpOH8B9OHIKIt827TyE2vis4LPCmbQq+T+QcpJxLF5V7RK` +
    `Vc4CciDejgdnGvEo5un8njSjx5YzItnoy1q0bvPkGqUHI5obvV0L9/8BEXG9JrDPRw` +
    `4LSdXoIAv9QD0D6+hdu1O5ffC6GYC787Hhtim6+ltqYYTfxtJVKTspjPJe6DCglcbh` +
    `oLC46i9h9E+Uu7nqt3Jf53WvtwS9mJuQumNEdpXZ+vWjG5zDGOIA/R4ayTXxkLg9Op` +
    `y4IxUVkVbhv6+HB08Bsa7L74SDJd/IonfB3z4G3KN0XHcPByxqErGQP3K4brNQc2hg` +
    `KzWxhDlzgO49fpXY/QDKJqqLlecxs/9xjK8Eks76fw+DFU/3MQbzIxzh/Bznzc5382` +
    `nzTItsHxiVHs4D49srjZqgafU9J975KrmJyenT+5L3OBwUKjWYF/DUeZzqg1QvigzE` +
    `CJE1hO4OVKqzWOwDSGah9QjY6U4m3M5FJgdx3Xx464mN5v3nnWRSd89J/2fVn6PVy4` +
    `e/i6Lot02H3AOPJ5HNXi6P8DAAD//wjbFZU+PgAA`)
  if err != nil {
  	panic(err)
  }
  container["templates/style.css"], err = decode(`` +
    `H4sICGqlsVwA/2MzUjViR1V1WTNOegCsGXtv27j9f38KTocbGiO2k1yzaxQM2NZ1wI` +
    `D1VjTDMGC4P2jpJ5sLRWok5ccd8t0PfMkiLcp2UhR1TP7eb5JeTNHf/v6fz59yRDl/` +
    `bhvUSqhaiv5UQ0kw+n8LgoBE08VksuTlHv06QehAswSlQKCKM4UkUCgU4cwgGywDmF` +
    `W4JnSfo+wrX3LF0WfOeHaNas64bHABj9PF5AiVrNYKeCuza1S0QpINPE48liS/QI7u` +
    `PjS7xwlCNRYrwnL03i4bXJaErXJ0Y9cFp1zkaIPFu9ms4gJWgresvNKwJS6e7dIjHH` +
    `auHicvk4lzw7uasNmWlGqdox//8KHZXRlHdB7R1vaZfQeV/mctG9T6RXMnrGnVf9W+` +
    `gT9mCnYq+/k62GNtvQQR7zZYyi0XZfazke3Uur25+d7YxEUJIke3zQ5JTkmZMN2gzQ` +
    `QuSSs75y35Tutp/OcwltxAZltYPhM1G8Go+S8j4J4PbqE2zl1MUcHrmjMk1Z7aLJsv` +
    `ycqY1ce/06a9TCbzJaflAboFnSVaEC0tXEerrY/obzy9rDGlMfhm/uO902hOCs4snF` +
    `CaI8YZPPZ8rNEQWju5bsk3ICrKtzlak7IEpvdKIhuK9zlaUl486x2pBH+GRCJaoM+w` +
    `D9/39ihh8D+uE9ygez9o10LpyxGXJcIWwbkd/R5JUEitoZflyOSjz5C712SIr7bboN` +
    `pmS64Urx3WYGUV91de991XkA1nuqi9AXJLVLEmbKVbyhaA6bpta4be1XxJKFwhzEok` +
    `+Ba9K0E+K95cWWM6R1cUbJ5R2M1KImwvyh0fDcGUrNiMKKhljgpgCoTVaE1Kq0jDJb` +
    `FUeCk5bRWg35G64UJhpjQLxZsczR4eHh6aXQSiUKlh2MtksmyVconV9ae70KF3xxXY` +
    `Mgnq8a0RG81d3XVmxjEHl0TF8WAxRyLaCMJdPzyr91iTZ8JqYtTsfJSvdTkZbrzBBV` +
    `F7rcP9ed3asah40cq3sSiJxEvqCizmEoyU4n1ilBR354yQgXI4zmHBt93M0AQfbW34` +
    `4qdbvJe+YC6rCl+QfBtx06V2HiunXJjXPb7zCttgbEAoUmDq803xxiIW4JpyJMuOiB` +
    `oThlaCmO41N6sAV4O0AvrvTEHdUKxgZg20VYBuK+GrIcTCArDMjc+zuZH0SQgu0Dzr` +
    `733kTAlOB3aBKTTPzglzp/e5ivaPWRTveauQO00kTRg2ImXGoCE+yQ5cfvVO04LyA/` +
    `s46b+rqtvqtnrsyL24AQYOFOJqFRK44NroYoqAlYhXYVL4LPESg2Tpq3FuzuBWcfuh` +
    `A9KtxvOnUIL+m8AW6S9PnK1GvmTfhuQLxXsQaG4Wn3kJ3ZfMVZbHjhzr9w9YRtYAlt` +
    `4/YH2iuJGuK0aIDtSbOO/t4AiGyb3ds6NYAq1yHdHUJPJi/9oKbG4WA3I97FjwGbMt` +
    `pY4X7Bw8INZCDpjG+wN4en8gd+NUNWdhH6wuf4PwXZK852XqP4hUUVo9ARbFOtr8i+` +
    `BbCVn/+PCDPzD3eaWyTMNCbCsmhW+hIYXVIUVhoZGfj/zpneyiGri5F+nLu0T4kXK+` +
    `dagVpD97ujwp3vSWXwRsCG9lb+sn2Kne8ivUfGNDspieDHZSZnaEMyw5sxNpuogqw7` +
    `BMVof+jGvJWJqkeDqcCY5VSstxGDGl8VmSSkM1xTz2aprEwgfSLMoon2imKQRp1rWJ` +
    `NyTZeH5pCR85k219mAZfoQGsuuUTYSvag2JW8joLe5lnkWhpDhzSODEJEgsNKZwmCQ` +
    `oLjWQYZZMyDNRSKL5aUfinHRpmFpRQcDss9N2qBKHv1gPRDMLmY2kG5EqQLpTdxOxO` +
    `vu7k5nvkez9eLoq1P3GMt3BcKLIBrcK/iKKATqyzmOrPQumGfXLjmJAu2xqdWPfaij` +
    `8xHDC+CL4SICUKxrdLv9iOKM4ROD3l+xO9f5o4MjgpwMLfJMG4Ji1Ag9/Cv3NkUoTH` +
    `uOBdcFjskNSSbOylf/xOfaiHm7k7mPl3CvcSMabQiy4/jKSuNcIQRlQHTZeg3vLX1l` +
    `ed69NtVLP2BzRpTCbcfPkIlGa9F4zg1ev0HbCv8vk6vl7LYT39Fc9r03ub8jnins77` +
    `kbUvoS8Hsnknc+jJ5Kxss40XI/uYwMU+CnG3/6o4j4a4Y+09eNh4W4yPdD5LyTeoOR` +
    `7kQJ0LIx3QfpNwz4/siVpXDI+I/DvRIAVQGnfI68mcwU51k3oxHXqnu73qP9f6Q66v` +
    `pFig379ksPdnun8xN0/Jd6cepbw0Ow39qhuaIZIbaeEyxjFDKVid8361mCL37m5foU` +
    `L3jBru/3sHjPazzlSUMirQv3d66Le1A5tE8LrTQ2rKRtITbA5nhJN8hs4CAfAcLql3` +
    `kBgenyrMpI0FSIWF6mekm8f+/XYxRS3bgCAVqcAehee6NZPjhyK3bZV1i2/fsx1j3z` +
    `rc8hNTYp8FohPNJYReWL/jZRqy/iJIjcU+G4I9QcFZib3KJ6bJgEGnau1QCX0HJXxh` +
    `YK/tZGl3aFZagq1Bv4q6lt92JRYuYxxTPsHKYXT9/ydcAwpWWfTc98H9CnxhpztyY9` +
    `I5P1QC3VXC/D3d8fwj/LCzYq8cOyDh13GfnL/qtdRQwyiTAuBjgD/cPENoRDHUJgNg` +
    `iJ9qiDHcUJVk02tOOVPrWbEmtHwHG2BX1wbuTrcxMHHR8b+AjnOOT0zjkoaOV8c/OI` +
    `4J5WWZtEbDUsacw/dcW4ZwB0y5724BwCtdb78FAAD//2HYeROPJAAA`)
  if err != nil {
  	panic(err)
  }
  container["templates/theme-default.css"], err = decode(`` +
    `H4sICNOasVwA/2RHaGxiV1V0WkdWbVlYVnNkQzVqYzNNPQBcikEOgjAURPc9xSTdkZ` +
    `SqqGnKacpvESL4SVvThfHuBiQunLd7b2xkzngJQFcgXsbg0UeeMeS8JKt1KaUuTaKB` +
    `eUo18aynsdOlUXkIc1Ax+JpSQqWFAJTqHN1vkZ8PbyFDv9JuoecYfuGw7RvoaCGNN2` +
    `RoFycLeTUruzj/Py4W0jlnnGnF+xMAAP//Q68dl8MAAAA=`)
  if err != nil {
  	panic(err)
  }
  container["templates/theme-juri.css"], err = decode(`` +
    `H4sICNOasVwA/2RHaGxiV1V0YW5WeWFTNWpjM009ADzMQQ6DIBCF4T2nmMSdCaJVUf` +
    `E0OkA11Y4BGhZN795oSWf5f5OnHFGANwMQOSAdq9FgHe2whHB4JUSMsYi1x4Vo8wXS` +
    `LrZ1FrHmYTG74c7oAr2HXDAGwPk84ePu6PXUCrJOo+7b8QJLzvyhvO4HWCnIZIlGzi` +
    `ncFGT9oJuhSqE5P5oB5ZRCe45LtJ0d2ecbAAD//9Kzz8TDAAAA`)
  if err != nil {
  	panic(err)
  }
}

func Content(filename string) (*[]byte, error) {
  if file, ok := container[filename]; ok {
    return file.content, nil
  }
  return nil, fmt.Errorf("file2go %s not found", filename)
}

func ContentMust(filename string) *[]byte {
	content, err := Content(filename)
	if err != nil {
		panic(err)
	}
	return content
}

func ModTime(filename string) (*time.Time, error) {
  if file, ok := container[filename]; ok {
    return file.modTime, nil
  }
  return nil, fmt.Errorf("file2go %s not found", filename)
}

func ModTimeMust(filename string) *time.Time {
	modTime, err := ModTime(filename)
	if err != nil {
		panic(err)
	}
	return modTime
}

// eof