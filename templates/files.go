// Code generated by "file2go -output templates/files.go templates/index.html templates/javascript.js templates/style.css templates/theme-default.css templates/theme-juri.css"; DO NOT EDIT.

// Encoded files:
// → templates/index.html
// → templates/javascript.js
// → templates/style.css
// → templates/theme-default.css
// → templates/theme-juri.css

package templates

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"io/ioutil"
	"time"
)

// file stores the content and modTime of the decoded string
type file struct {
	content *[]byte
	modTime *time.Time
}

var container map[string]*file

// Init populates *file with data decoded from base64Encoded string
func decode(base64Encoded string) (*file, error) {
  gzipEncoded, err := base64.StdEncoding.DecodeString(base64Encoded)
	if err != nil {
		return nil, fmt.Errorf("failed to decode data(BASE64): %s", err)
	}

	var buf bytes.Buffer
	_, err = buf.Write(gzipEncoded)
	if err != nil {
		return nil, fmt.Errorf("failed buffer decode data: %s", err)
	}

	zr, err := gzip.NewReader(&buf)
	if err != nil {
		return nil, fmt.Errorf("failed to create reader from buffer: %s", err)
	}
	defer zr.Close()

  decoded, err := ioutil.ReadAll(zr)
	if err != nil {
		return nil, fmt.Errorf("failed to decode data(GZIP): %s", err)
	}

	return &file{
		content: &decoded,
		modTime: &zr.ModTime,
	}, nil
}

func init() {
  container = make(map[string]*file)
  var err error
  
  container["templates/index.html"], err = decode(`` +
    `H4sICDM4slwA/2FXNWtaWGd1YUhSdGJBPT0A7Fzdk+I2tn/PX3Hi+3JTsdWWv90FfW` +
    `syM3ezVZlsV8/U7MebwQKUGIuVBDRJ5X/fkmSMDQZDh+6ebKVqakDy0fn8STrSMT34` +
    `+t3f3n765/17mMl5cffVQH1AkZXToUVK6+4rgMGMZLn6AjCYE5nBeJZxQeTQWsqJk1` +
    `jNR2U2J0Nrzka0IM6ajJxssXDG2SIbFcSCMSslKeXQ2hDRMWxFyXrBuGwQrmkuZ8Oc` +
    `rOiYOLphAy2ppFnhiHFWkCG2NR8AMeO0/NmRzJlQOSzZVkBBy5+Bk2JoCbkpiJgRIi` +
    `2YcTKpetBYiHOI5YzMiZOTSbYsZHPQ147TGG2IZ1IuxO3NzYSVUqApY9OCZAsq0JjN` +
    `b8ZC/N8km9NiM3xgIybZtx9YyazKkH3xd1W/49w9XQydziRhS3FayEBSWZC7v5MRfL` +
    `h/O7gxTYWBmy0IBiOWb4DmQ0t9abgAFpkQsMh4NieScAETzuYwz2iJpgwkgxnNc1IC` +
    `LRdLCRNKilzsbMrpCsZFJsTQmtGc1EYPDLmStxYWyM2CDC1JHqUFq6xYkqH1669oLX` +
    `77bavJTU5Xd1/ttPr4+S9Ax6w0sky/WE0h4zRzjEpDS/IlsWDCxkuhkDq0JlkhiAXa` +
    `QUMrp2JRZJvbkpUNzcRmPmKFVk0JcMaUjxXKFYy/Y49DywUXPPWvHgMwMFQwfhxa2L` +
    `VgvDGffGgl1t3gxjyuZdwYIUdlKrX6JC4yOYN8aH0A3/bhM+AYfgAc29iFfymR6vn5` +
    `ArOl6LWRk7EEM3WtwIIZUegbWjiw4FH3bIaWr0QrwrPHYa97YK/OpYHLmU7ydk5KO3` +
    `3Uosa44dPkiT7lZHW+fjhpSMT9GqY7cu9p+gnJFpeEPNmFLtGRi3TgoosDJ0jGx7Pz` +
    `XaPihULwbRx3uKQ583wz82I98UIUPmHqFVRcgCoFk+8hgM/gg38yXpGmxIkiPQ09O6` +
    `1YppD2sEy3LE8TYhuHFU8cAg57uGpizfaQtNd/E1bkhJ/rwTl4tgczCKEA3/ZQCDPQ` +
    `ghP4HrynTDq27pc+BcmzUkwYn6tNIitFkUnyv67teN806LZ6CpbTBcvprdmmMj62dn` +
    `0Kdw4OUeB7oRtajcHQINoMLQ/Fru+HOGwM5mYW7dp6PnXzEDLjatVskJMyH1pum17H` +
    `0MEewqkbpdiOURx6OI4DeAORHYFyCAYHpyj0PN+P7Ri5qR8kQbx73GLoeC6K0sR2XI` +
    `Rj33Nx7LcY+SgNEjfBtuMjjF3s+ccYpcZJQWx3+YIt6i27NawRKs6kipODlfbfHKJ4` +
    `b8FCcbhbstRqoBatVH1uhlbYsVHdTM/G2Sgrr5oS7E9BV03B4Cj8O9IUVorlvHcPPw` +
    `/QPopiN4ojrxmKFpqxjyI/jKPkEjSfgeXKASjFXpC62MYJipIgTBvwbTDE4LgowCkO` +
    `I99XtK4Xpi5u4ROFaZDgVG2pKA5TD4ed+AwRDkM1XRLP81I/aPBIt96wa6uhACeyXf` +
    `ilaV4HUn23A6aN1U9tbHaklz0HX7zYVTF3cqrz2/zP4P/3BL9NiUIbo1Cn9wc50A4m` +
    `x3DCyYJkvVlNY72KWstV0LlctfIutag2RvinU6/Tep4N5+dW+JohELScXnSKjCv9vB` +
    `MWNbTDdgSB2oJDWAH2Lj8MaP2e4vrrKnpV2GdlzuaXpKJqKkZQQKA24BlEJxNlzyTK` +
    `iTqwVUMvdrtR8bIF/Jl0vabnzzhZ7nQLUWjHSpZre4AD0zp9nlGU6vB70gavsmH2lG` +
    `PMnOZ5/3xtGxEYI7BrrAh6rFBDcFiPKUANCvtNx6my/WKLRkzK82dDpR6u1IuNSard` +
    `q56K5Wfl/f7oxL3hOZr6FKQ/A99JC1CUeH7opWoXdzGOo1Dt7LoL2y5yPT/0VT4RRk` +
    `HsRmp9imI3TJJmloBRGnpp4NlO9Q0rFAbIV1+xnlt+xdP2EA60mMb4RB3F1CgbI1/J` +
    `CVOVeSgxXmB74CE/NuIDFGjpHqzAQ2mSaPV+Oen6LhMDFOiuwMYRCiBBruGrm1rphn` +
    `oxio0gzUB/67kjQ1tzfOQZczBGsbZbSQixMgdwWHHTUpv+DJCvrdQClZ494Opg3mHS` +
    `SdhFKEkNjwBFobZXpYna72FiYxTozggw8mwPJYb5IQgwVgfi6jG4Fa9IQSOs4HAqXG` +
    `ojRIbODpCHjTEORvoLVnrouDXh5xqgKfSklYituraL0srZKKwxGhqrGiwcF8WGh7P1` +
    `ZdijZ4LUBoMCE18Hm0AFatJU7nNr4LmHoDqNWcW4ip5rwI/1ErKVAkXL83gr2TuieX` +
    `sRHNyI1bRZNChYlgNbcvgpW2VizOlC7koVVVvw8dDaPUc/CSXENJq85hktYcpp3lns` +
    `UE93JYUt/XvOGYc5ESKbkl2VpBqq1raaympyMuNGjOeEkxxMJaUqiTQYNEa8ZaXkrG` +
    `guhlsRY8mLj6yc1hJqvvWT1o2KUn685JyUsthANpZ0RUCwctrQvyVAV5dq7maAYvtJ` +
    `9QMngv5CrDvdatnQYpJxqS9iD7i80Q9qNqZ5gk8xWs672Kj+HRfV6mZyMPKesykndZ` +
    `nwQOKifn7I8KiapMgWQuV/lTgVivemD8Q8Kwrrzr318HEG+ZJnkrKyxeFd1bll4d1i` +
    `b49Fs7BWh1usqRzPYETkmpASdAVXWK14N32jRH2mZA0j9vhAxIKVgq6IdcyVW/IfVI` +
    `D3nKhnqYovFSBnBKqyrN7n9/AGMBgtpWSltt9c22/zaF3bMxl1e0hVJaw0UZmEdVbJ` +
    `cJ8LwGApCDwWtPz51tRs/2dXPrgb3CwFOZBslqN2lzGhHyR7vvtoSijH/SG6CJ7d+q` +
    `3UZ7f/O87WB4o17R9pAv7SDqiqH9d0QOcMXRTZxgZdtQUix+jk3Lwvsg3hF8xOM0D9` +
    `f8LDpkatF/uh1UH77L7WCjzB00ct4sTcoFc2PZjmH92qqrS/DZRpdb2T8VIGag2ed4` +
    `kwAP4o2eLUEqlvKSq/dNA+/2qpZb6AI+45WVG2PEhZmijZktRA6R7z/PDgZPUiTvmR` +
    `PB6kHw2HmLdLKmd00D67I7QCL+GIBzJnq1N7KTcEr+mMUVa+iC/e6mul466orp1e0R` +
    `NGgyv7QqUU///Xf3x4fwtZnoOlq9uV2ZKBAYBOyKuT4OEB8CBN2fPvB5aTUylIQ4UJ` +
    `LXPI1PFDEg7rbKN0kGw6LZQOVHQdPPckPVRX/1WgPpnB5rYd5uxg12vBXVO9MweIV9` +
    `0qqwLG7wp2l23vS23aq1izq3VcA8N9MKgKn3sw0L29MNBUXwQMjBXXhIHm+Eow2Cvy` +
    `XmDWfsi7g/6xKrW2g24KnF1B38sKNd027B1WXck7x7NCo363WzodcyziXYYdifmL2d` +
    `UX94sMPBcRb7fvRrUhUb0+04+JivAVQbF9u+vqqKgYvx4sDt5huh4ujnaYpk45SJkD` +
    `m0Djzrz+PQE0L1v0peTn/VvI+vp1Rcn6viKz9i/iSSkPr1u2VyjFkVvQ7bP3peSUCJ` +
    `gymBFO9nOfM++KtPqklHwDkswXRSYJrGlRwIio52OSAy0la2vVbWpTsU1tq8oHH9h6` +
    `v0hxZH9W1JW7T+SEe5OZFMXJWbooOm+hXgDDJ+5sfh9uL/ZA51nuRXxw/IR21al7iK` +
    `N7TtlVQcQpw/VWYQ4+6vixgH8vyXKXCS44Za/h6OOXRi+MNeUo78BR5sWZL8RX1Vs8` +
    `X4y7/AN3mbdyvhB3Va8Ivco0fnvowXrL2T7/1Kost3p76sodzN60K8zt7r76che/Vq` +
    `W51dtTZ+5g9m6/nLv/oGbp3fodZeFziry6VteT01R1xo6M5sgGv6s9fsceG68YPDaT` +
    `g658p1Kn8TPSw3rv7kejhvqTuaNt/HjU/OK4s/jZOgstR3MqO4uof6Qa6XHnPxCxLH` +
    `bgVvka3Xuxo+13rgc8Ibusxu/llp2AMqRfXN4o+Js8t+6+/XMl+wOuZM3F6h3lZCxZ` +
    `A13nrVf5dtwPTTeemDP1AKiILpw3nYLb86J+dP7kqIdcfYbkRef7FvASOcnJNypeNI` +
    `XLi+utE7tYnVgsaqIfszk5RIbqrSePalw2ebovQXZ/TeFmxPKNbgxuzB8R+U8AAAD/` +
    `/xqE2olVRAAA`)
  if err != nil {
  	panic(err)
  }
  container["templates/javascript.js"], err = decode(`` +
    `H4sICMRDslwA/2FtRjJZWE5qY21sd2RDNXFjdz09ALQ77XIbN5L/9RSd2VtnaFGkJD` +
    `u3OcpMKrGdOl8ljstK7V6Vy7ULzTRJRCDAABhR2kR/7wHuEe9JrhofM8BwSMnZXf+w` +
    `OEB3oxvoL/T03DANQi1hDotGVpYrWa7NcgS/HgFUSholcCLU0g1eHN1fHBFCjVfNMA` +
    `pfQLlgwuAIMqzpFMxKaQsLpaFWVbNGaSdLtK8F0s9v797UJa9HjjympHntKWu0jZaH` +
    `cN1CtNLK2o2ZTafGsupa3aBeCLWdVGo9/aVBQ1TN9E/Pnz9//sXZdKW2J1adLNGe2B` +
    `WesMo2TJxolDVqrE8WStqT7QrlCbfmRCp7UuOCS6xPuDypjHH8VsakHKNnawwbrTao` +
    `7V0mwJbLWm2J/ZdqvWks1pf2TmCHJRshRjT/LqD/mYkGy5bYJ4l5dvbl+fOzacVE1Q` +
    `hm8cTirT3Z8tquTrbcrk5+ZjfMVJpv7PT87PTsi2f/8ewP8YcTbon2J7y1fyGUVEoi` +
    `NAban0v+d/QiTqekAEt+g3IMjUGoWLXCGiomb5hxZ3+F1qKGDeqF0msmK/R4KAyOod` +
    `LILILEbcA5AnA77AnMjwAg42gSZn77zU2VQ3PzTmk8/aA3ZeEBitHoIqxD4nzH1lzc` +
    `Da2VzA6ul2KTUpRYFleqvitGYyicJi3cbLJgpSRtJME7XrxeuLGyOK8LBxiAHH06gr` +
    `DncAzF5hYKOE74joTXaDWvSPiIvUZmGo3Erjs8RzooZYCeOMX4JIOdVIIZ8z03dsLq` +
    `unRP3opZXVeiZxhjqITxuoJiB9V8mq9I8PU6XVmvH72wxrW6wW5tQl/xGnNsj+gFcs` +
    `QKgik6FLNS2yEUx8kgRs0NuxKD66CYhNka5lDE30WLi/KRqEUm05t6yK/STIn0mIsz` +
    `DE0zfeiw4jBCmOzjeBGGUfxcinE0fXoET8Fsua1W5EK2W5RQ88UCNUoLNxy35gieTo` +
    `8oZIVnmEefRI8g2RpncNVYqyS8eUVmwnH7TrA7wY2dQUF/inEYv0Smq9UMCuN+tOOv` +
    `uMbKKn03g+JKq61BXaS79mdaKpGJcDL33874UXBhslgxWQuckSk7jAs3RfpfEuVr4N` +
    `ILFbGcXGFvp0EfnJheQANPHDtTp8s0EbD8/qCAOWB5HdaBuLPldUcfoGLG487Am+QW` +
    `1sxWKy6XKclWCIJwInR0HW2nMiIba1XGbZD5cP0xm77SyK67gRoXrBF2lkBQ+ON1ja` +
    `DsCrXps+LmBnjxyp7zElXxEazcH3X/05ZssOJMAHMnauCKGaxBSbArBIMCK9ttVNzi` +
    `TiPaPS4yzSo6OSu1XjNZl0HVijEUxejCLY2yBhYBjga57Wh7bU4IU5rm1GU+zyDS4+` +
    `8pS7AECh9Fvn9i4mUt+8MLVTUmHb0fYpQG772Zh7Dx+gZ9oEv9t73b4BgWssszUUwi` +
    `MPlylKgj/wNTZSQwBp+g0ur3Lu9IkKxl1crhlYWSpEDtug4+5l7v0VAEvlGqVsoHHT` +
    `/S43rN5XeXY1iz2+8uPXMuzSDn5MZiuLYuB0Ax4VKi/s+ffvi+DeTsNuZeLnJxlD7d` +
    `IIDtiguEcmHgq7lfC548yZKW0ro0zYwoSzDwVUsvbtXCwMkczr10IYE38MJTS4ACfX` +
    `9mLVNPCZUUcovAhFBbUBJhw5boj9hBOwF1IytmXVxy++8JBQHsrZ0IlEu7gq/gy0+W` +
    `IVi9VQqEksuZy4lsSHHon99eWsUIXmF5OoZkyRM46yATPq1u8CIxedqbdr5bOz21g6` +
    `s8IwGKJysUgm8uikT9feg2dBGYtOndnIR1OV4Xx72W6UTNoMzii+eZsqinvVDjwq5I` +
    `s+EupTLf3r2knOgtW2NZ+EWKNknl9MMFIw5zOL0ADi+IXy/YBfDj47gbHrVE8YF/HM` +
    `PZ+RjOv2wt5+nUm7jVfLlE/X7HYjyVcEOqudlQuPHWSFeCYJeRPe8JA7Fof0gwpnXC` +
    `Si7B2GaxaP3L1vyV1bUew9Z4U85dacTc4pVR1TVaf8MLkwmv1boeQ80s6xzSZxSfY5` +
    `yPOk6a+Su00HDvtmNrJrRu+V+XP76dGKu5XPLFHQH6lWYdxizipQl7e8wkwVazzQY1` +
    `WOUvXYFZZoBJULISvLomOLxl643AGXnzjWB3xWgSZmEOV1a+jOHGTY7hzKfT3cwB+f` +
    `elN2E8RrIO66Jz+9MpMFjgFj5fCnXFhPmcRLGaVdfuLDZaVWhImhqqRruUz1i6KKqF` +
    `BxDsDrW/rr5qNHN2MYezyam3muVrwTbG2fRpO3bpKPgkkQjMoNiwhqJsKH00lDC6cx` +
    `w7ATfIbDJguFyKDILJWq1TCOeLTumnxFsbHqMpL19rrTQ51g8fw0jMRr/jAtMJjaym` +
    `JOUSKyXr7Gpzw0SDnYGvOQm+YdrgG2n9LEzh309bYzZY7UL8MUKQGhPECzg7jUfoMY` +
    `pTcqoGqxgp4tWRS3JSs3Y2nKhdcdOyaUA30hUA8Aa1O8glWgMVE3RVocE7wlaydlq8` +
    `qels7Aqd2obDI6w6ni6Xrn7gfgctoDTsxtu82zVP5Z1WS415hSbcM8oikC5GmQfvbX` +
    `cZ1cftEJZFZOIhtKiK7c56nfvg7eujS77cTxfwoo6+6HQ4nsB0ClxW2rnqkFx6ReAL` +
    `p7qUkdPuSGVhwSU3K/Q5YUv0eA5naYgf4MRYtWkTQPIQYeOKUQhM25CGFKd/LHaTpw` +
    `MI7QbCNJXtKZydnpLuBHJkMWh/4mtUjS3z0xsT7OmoSxPpVuEMaG/lsstc14xLB1u0` +
    `J7E2S/iMbshR4GCNk01jVqFs6VmaTuG7N//9w+sZCKWuDTRLcdea0ibcssOz1e1zpL` +
    `dmm3LIWMFBH88dkWNwMxfB3BzVF1capl/5nfGKl6cZxuqLo/R2lW/fjiN2px6YalOt` +
    `0y6LiXNmxRdJKt/uc1nEtP9+H735PCVIdy2PmeDdj+GL/CBbsF0DPXiKve3wu97d7y` +
    `J5r0ak7U3mArrI5YrZZZEC+hW6k6eoGj04lEq3D7wekb9a8eVK8OXKGydNei8URYgH` +
    `zqyLC9C6sXG4eDjr8A8h8oxD9KSgE3678OJ/+9gTfiu59L8iV8425y7MOlVMI12MdQ` +
    `kzbawbWHqWsRBDXrp8jHoZey7S7TI2y1gMe+z3/2/p/pf/9qvj7370N3cS8e7sBqOG` +
    `+eutD9mzdIRcWrzqWrVcCqS4+o4AA4Wo3GmyEI+knetyhnA+cSa5u/oVneeMK9JDOb` +
    `iCSz12iCejLeHgd7owCGtVI1RWiyOAD0U4qGIMhT8e+uUPxY25oyg+HnA+wbReceOM` +
    `y2cBx1C88oWZaOoB7LXMoV7LFCiJJw7iY+cDvHd6xU27Id5CX8voE9IYEmdTeE+hgw` +
    `/uMDfvb1zkvyTrHDTxYIWw4ALHwLTlxo7BcusexVWz/mscdE9j2CjD3bGlhoRlQUdA` +
    `6xSjiUOn9bjAMOuJ9NICPxggHFIPwI1FCrR8Pu/kduNwDKWnRrEr5Ru+huLF9kp/9Y` +
    `HSsGzmGIqPBcygaN8lJD7Vl7+7sNiKPZ/DyVk8x7aGKwaKJjKdcm55+E4Rluq2dmLV` +
    `pbv4lKOktkKHKnFLe/xW1b03gWNAafXdGKR+7MH2z7dNIOlgHbUYvaVfDsOrBSWRGK` +
    `ALv3cYNL/75qCt6weAvla4QU6Gzms4BqnbwV8a1HeXrnJG0fUP5BZfohDfHFaig7g/` +
    `HVKv6RSUFHe+kusVKugIXwC3n5uuov4gj/9qNT24+qvH5d91mn6H2wrR7bxHuFi+R7` +
    `NR0mTKpq5+zlXM1wH9VRzmoK5+7m736VzIxELEopk8YKFLYdKARVeZLny0+VZ7Sx6M` +
    `OTeoDW3BLC2A/fDuFclkVaUEBAhfDDtMzHvRllYWiglzYtxvL1rM9sNdtXcIRXHhg7` +
    `pAup+LGiJgDH3ZJbdNHaGNghT4KDRaBQu+bDSCapyKbim18hNOhTeaq/Z9ByVlqn1F` +
    `4F9E+xrBfO5iMt2x/A2RFgZuKFumwV8abHzt6MX8HP7vf/4XpMoXCmt8Cm26iRF9Iv` +
    `cAjc86Grus1MqTGiQRslNuwK6YhUppjZX9OnvV40iGcqI7SjcQS3cZaBAJkhN3fzAH` +
    `SwQNsKwNv5Po9lzY6JbLEpHgw3n2rilz5HSyXaAYAzc+wtOvt5RdZ87b/6PwFeHy1x` +
    `je9L1aKvl52M1exQC4r/slmpq+r+hprbslEq/Jy40khiQBrDOU18Rv0YYwnqB66a+s` +
    `pFUIf8j7bcQ7V7N7jMgxYgeS2YuZ8Bqb1hhD0Z1dSrmXljmn4Ukdrhjui+397fSc01` +
    `HmfOe80WVhh7P2155Neh9SmmFGk7XajCQZG+C/nU2Y6GzPVblcVF2zaySfQnGES6hQ` +
    `W8alS9wNlD4lh2P4ejRw6pqrswPHTtPFoLpors4PI57vRXx2GPFZX9M+izWjeL3Ij8` +
    `6l7lGY3Zeukdu9M88Oq58r1CPg7UYw6TM4dqVuMAEhJpNHCPdFV+dxVzT47bfUe4X6` +
    `z5MnOVK0KILuvOeLOZyPEsBc+NzidnZgZ/r88PSzbHpgN7oEg1xln5cQ1k9nvdEH1v` +
    `H/eu/eE3pn5396kGJfsMMUz7/44kGK/Z3cQ/E+e4q4+7yV5oouyrQ+ZUeH3VZC8PwB` +
    `grRFn0Tw2QMETx9F7n7APeYpGttsUNbOsbaY910+179Gl724nrweTV7dlfszSt8s8B` +
    `5NI2ybV7ZNBGH8oczRA4N20F3a4wtGv8LSxeJZ/7XJfcsVOQQnyMBL26yymS0Egq+5` +
    `9elfTJ0na3brme4qE/f9VVLZhkui2aJSWddKs1CNrIsdsrskPymJGkqR/PxQjuLXeU` +
    `yGsi9oGP1NXRd5jIw9bqHpaqG0Y80AE3RXu4s5V++GECpKecbFZSWaGo3Pukb92BDC` +
    `sVmpRtSuGaGugcWVrQIf7IFbWGi1zpb9ejhxGu5bsTKx2J0i+yEiO+9CC1bXxRh6ae` +
    `T9RWrCPXvZZ8Z7jHOfddax1+h78g6JeeYTO/bZ1/gVM++YRpllcW0dJafmlWuwstLh` +
    `+UpJUYv3auspFz2AWF9x628cyEVmXfnm7EkTW87esjUO1DESE/Rr+GQBvs7GZlBMJk` +
    `W7zQAf+pTHUPyhFt/67q1+PTZXmgE+b/a9n2/bwRJuUhVKfkddHN4G4Yx2lKlcXwcG` +
    `dS51UhnC471UKJpE5PFetxUvVnk6SujuvWVLodjd0N+jh7uaSFGAZ4a8Tm4pXQHw96` +
    `pctwkplX9EmX6vOsX18uwie3owEgSlusjvjg97zf1+c5/n3MPuwXvE74p+vyf+/WMR` +
    `8JNj4D81Cu4/ivt//an24mF+oJ/qqPZmrPe7uet92lzQiPo9LjSaVdewSFNqg/IveH` +
    `XpesMGeteMVy5oYcrQcBbbvpQkElmf6E0bP8O76B/fvX4bdWnnNbpr0UkZTLsgK3c1` +
    `nmgUitWl75BbKF0h6CCNVbBEC4JZNBZWdi0AbXUEXSduYLMSKi+J7/L58vsfL19HRr` +
    `3ojRD+Mct0yX4kOjKx/RE0xkFffXseu1raBslRSyk7ja4tM+l3yM5lDM99k0EqzxqN` +
    `Yct9EvVeBfjGPNclRVATVz/vEcR+10JCzr8XwBsbFK3rdAs2SmYHU3Cvr2HqK8C1Qi` +
    `M/t7BV+hqYAbzdYEU3kZJmXCE4tPrHqjcTwhmx5Wv0zXqO0I5ahvPyLT4X7h1y6HWD` +
    `gm49Prq46VB3o78bjTdcNSYEG/8NSUT3Bb9YRPMQ/ruRQxCx2b77EmTjS57DDG/aiu` +
    `eHhM9Byjl3UbgHRMoZfiTSgAzuFPcK4ej2F3lYiEcfTCbFo7F2xeg1S6QCJZ0XXctG` +
    `v7niE7o20h4NejhQSkg7PMBv9QC0d96hdXin978gd0ixZcdUg3f2ieLWFKOJb8UiMS` +
    `lE+0DpvieRwOWmsbDgKGr/PZjvSParelPif6e9D23ajs1dMKU5Sus8dbVicpljHEEe` +
    `ZMJFLu+HC4PTqQvxMQpbFVopvX84OvgJEXYfvCRhPH7EFD4Ouvc65Su+YzjYeXKo32` +
    `SgeWQ4GXVgYygwazEZ6lA5jF+njSyh0kWpXnO15jZ+7TKUviROvJ+fxG/B+l/DeJWJ` +
    `fv4IdubjOf+z10mdbOscH/RidIwCmewfmOPFLXHU1bfDzj+w29k2ByNU0n3/k8uc1A` +
    `qcgbkvlYGBj+3+pSOFPqPWCOEDOwMlTmA5gZcrrdY4AtMYyvRANTpSir2nSUrQNR97` +
    `ZxJ31xvSe7900TEfDap9O5h+Hxg6Ld/UZZEOuw86Rz6wo1oc/X8AAAD//5GTA+ZOPw` +
    `AA`)
  if err != nil {
  	panic(err)
  }
  container["templates/style.css"], err = decode(`` +
    `H4sICM4+slwA/2MzUjViR1V1WTNOegCsGftv47b5d/8VnIoOiRHbSXpZLwoGbMtuwI` +
    `Bdd7gMw4ChP9DSJ5sLRWok5UeL/O8FX7JIi7KTHIrmQn7v9ydmMUV/+/t/Pn/KEeX8` +
    `uW1QK6FqKfpTDSXB6P8tCAISTReTyZKXe/TrBKEDzRKUAoEqzhSSQKFQhDODbLAMYF` +
    `bhmtB9jrKvfMkVR58549kVqjnjssEFPEwXkyNUslor4K3MrlDRCkk28DDxWJL8Ajm6` +
    `/djsHiYI1VisCMvRB3tscFkStsrRtT0XnHKRow0WF7NZxQWsBG9ZealhS1w826NHON` +
    `xcPkxeJhPnhouasNmWlGqdox//8LHZXRpHdB7R1vaZfQeV/s9aNqj1i+ZOWNOq/6p9` +
    `A3/MFOxU9vNVcMfaegkivm2wlFsuyuxnI9updXN9/b2xiYsSRI5umh2SnJIyYbpBmw` +
    `lcklZ2zlvyndbT+M9hLLmBzLawfCZqNoJR819GwD0f3EBtnLuYooLXNWdIqj21WTZf` +
    `kpUxq49/q017mUzmS07LA3QLOku0IFpauI5WWx/RX3t6WWNKY/D1/Mc7p9GcFJxZOK` +
    `E0R4wzeOj5WKMhtHZy3ZFvQFSUb3O0JmUJTN+VRDYU73O0pLx41jdSCf4MiUS0QJ9h` +
    `H7/v3VHC4H9cJ7hB937QroXSlyMuS4QtgnM7+j2SoJBaQy/LkclHnyG3b8kQX203Qb` +
    `XNllwpXjuswcoq7i697ruvIBvOdFF7A+SWqGJN2Eq3lC0A03Xb1gxd1HxJKFwizEok` +
    `+BZdlCCfFW8urTGdoysKNs8o7GYlEbYX5Y6PhmBKVmxGFNQyRwUwBcJqtCalVaThkl` +
    `gqvJSctgrQ70jdcKEwU5qF4k2OZvf39/fNLgJRqNQw7GUyWbZKucTq+tNt6NDb4wps` +
    `mQT18N6Ijeau7joz45iDS6LiuLeYIxFtBOGuH57Ve6zJM2E1MWp2PsrXupwMN97ggq` +
    `i91uHuvG7tWFS8aOX7WJRE4iV1BRZzCUZK8SExSorbc0bIQDkc57Dg225maIJHWxu+` +
    `+OkW76UvmNdVhS9Ivo246VI7j5VTLszrHt95hW0wNiAUKTD1+aZ4YxELcE05kmVHRI` +
    `0JQytBTPeam1OAq0FaAf3vTEHdUKxgZg20VYBuKuGrIcTCArDMjc+zuZH0SQgu0Dzr` +
    `3z1ypgSnA7fAFJpn54S50/tcRftrFsV73irktomkCcNGpMwYNMQn2YHLr95pWlB+YB` +
    `8n/XdVdVPdVA8duRc3wMCBQlytQgIXXBtdTBGwEvEqTAqfJV5ikCx9Nc7NGdwqbn/o` +
    `gHSn8fwplKD/JrBF+pcnzlYjv2TvIvlC8R4E6v06N4fPvITul8zVlhcRudbfH7CMtA` +
    `EsfX/A+kRxI11fjBAdqDdzPtjREYyTO3tnh7EEWuU6pqlZ5MX+tRXYfFsMyPWwY8Fn` +
    `TLeUOl6wc/CAWAs5YBrvD+Dp+4HsjZPVbMM+WF0GB+F7Tfqel6v/IFJFufgEWBTr6P` +
    `Ivgm8lZP0F4ge/Mvd5pbJMw0JsKyaFb6EhhdUhRWGhkZ+P/Omd7KIauLkX6df3ifBH` +
    `yvn98tU/e7o8Kd70jl8EbAhvZe/qJ9ip3vEr1HwDvYtHCpiZEC2mJ4Of1OGozSQ0ye` +
    `yMmi6iSjEsk9Wif8a1ZSxPUjwdtoRjldJyHEZMaXyYpNLQmMK5OUlj4TGViUWayIAH` +
    `cjVKS5+tprMEudr1mndk6niSagmPnMm2PoyUr9AAVt3xibAV7UExK3mdhQ3Rs0j0RQ` +
    `cOaZyYBImFhhROkwSFhUYyjLJJGQZqKRRfrSj800bTDJQSCm4njv5EK0HoT/SBaAZh` +
    `87E0U3YlSBfKbux2C7RbAH2j/eBn1Kti7ReX8TmAC0U2oFX4F1EU0IlzFlP9WSjd9U` +
    `9eHBPSZVujE+deL/JrxwHji+ArAVKiYAdw6RfbEcU5AqdXhf5a0F9JjgxOCrDwd0kw` +
    `rkkL0OD38O8cmRThMV7xvDgsdkhqSTb27WD80/xQD9dzt9355w73oDGm0IsuP4ykrj` +
    `XCEEZUB02XoL7yX79v+jxIt1HN2m950phMuPnlESjNeg8hwePZ6U/Jvsrn6/h2LYf1` +
    `9F+KXpveE5fPEfcC34+sfVB9OZDNO5lDLy9nZZttvBjZNwku9lGIu/s3xXk0xB1r78` +
    `HDxftifKTzWUq+Q83xIAfqvDLSAe03Cff8yJ6odcXwiMg/Nw1SAKVxh7yazBnsVDep` +
    `F9Oh576by/6rr9+MfSXFAv39awZ7f6b7h3fzIn176m3LS7PT0J+6oRkiuZEWHmMcM5` +
    `SC0znPYIspcs/39jErdM+o4f5/74DRftaZilJGBfr3tod+WzuwSQSv2x5SUzaSnmBz` +
    `2BFO8hnaBQLgOVxSjykxPN4qzKSNBUiFhepnpJvH/hl4MUUt24AgFanArsJz3ZrJ8W` +
    `uTu7bKusO379mOsW8d7viJKbHPAtGJ5hJCX1m/42Uasv4iSI3FPhuCPUHBWYm9yiem` +
    `yYBBp2rtUAl9ByV8YWBv7WRpd2hWWoKtQX+Kupa/diUWHmMcUz7ByWF0/f8nXAMKTl` +
    `n0ZvjR/TH5lZ3uyI1J5/xQCXRbCfPv6Y7n3/KHnRV75dgBCb+O++T8U6+lhhpGmRQA` +
    `HwL84eYZQiOKoTYZAEP8VEOM4YaqJJtec8qZWs+KNaHlBWyAXV4ZuNtuY2DiQ8f/IX` +
    `Wcc7wxjUsaWq+O/245JpSXZdIaDUsZcw7fc20Zwh0w5a77CgBe6Xr7LQAA//8GAYv7` +
    `1iQAAA==`)
  if err != nil {
  	panic(err)
  }
  container["templates/theme-default.css"], err = decode(`` +
    `H4sICNOasVwA/2RHaGxiV1V0WkdWbVlYVnNkQzVqYzNNPQBcikEOgjAURPc9xSTdkZ` +
    `SqqGnKacpvESL4SVvThfHuBiQunLd7b2xkzngJQFcgXsbg0UeeMeS8JKt1KaUuTaKB` +
    `eUo18aynsdOlUXkIc1Ax+JpSQqWFAJTqHN1vkZ8PbyFDv9JuoecYfuGw7RvoaCGNN2` +
    `RoFycLeTUruzj/Py4W0jlnnGnF+xMAAP//Q68dl8MAAAA=`)
  if err != nil {
  	panic(err)
  }
  container["templates/theme-juri.css"], err = decode(`` +
    `H4sICNOasVwA/2RHaGxiV1V0YW5WeWFTNWpjM009ADzMQQ6DIBCF4T2nmMSdCaJVUf` +
    `E0OkA11Y4BGhZN795oSWf5f5OnHFGANwMQOSAdq9FgHe2whHB4JUSMsYi1x4Vo8wXS` +
    `LrZ1FrHmYTG74c7oAr2HXDAGwPk84ePu6PXUCrJOo+7b8QJLzvyhvO4HWCnIZIlGzi` +
    `ncFGT9oJuhSqE5P5oB5ZRCe45LtJ0d2ecbAAD//9Kzz8TDAAAA`)
  if err != nil {
  	panic(err)
  }
}

func Content(filename string) (*[]byte, error) {
  if file, ok := container[filename]; ok {
    return file.content, nil
  }
  return nil, fmt.Errorf("file2go %s not found", filename)
}

func ContentMust(filename string) *[]byte {
	content, err := Content(filename)
	if err != nil {
		panic(err)
	}
	return content
}

func ModTime(filename string) (*time.Time, error) {
  if file, ok := container[filename]; ok {
    return file.modTime, nil
  }
  return nil, fmt.Errorf("file2go %s not found", filename)
}

func ModTimeMust(filename string) *time.Time {
	modTime, err := ModTime(filename)
	if err != nil {
		panic(err)
	}
	return modTime
}

// eof