// Code generated by "file2go -output templates/files.go templates/index.html templates/javascript.js templates/style.css templates/theme-default.css templates/theme-juri.css"; DO NOT EDIT.

// Encoded files:
// → templates/index.html
// → templates/javascript.js
// → templates/style.css
// → templates/theme-default.css
// → templates/theme-juri.css

package templates

import (
	"bytes"
	"compress/gzip"
	"encoding/base64"
	"fmt"
	"io/ioutil"
	"time"
)

// file stores the content and modTime of the decoded string
type file struct {
	content *[]byte
	modTime *time.Time
}

var container map[string]*file

// Init populates *file with data decoded from base64Encoded string
func decode(base64Encoded string) (*file, error) {
  gzipEncoded, err := base64.StdEncoding.DecodeString(base64Encoded)
	if err != nil {
		return nil, fmt.Errorf("failed to decode data(BASE64): %s", err)
	}

	var buf bytes.Buffer
	_, err = buf.Write(gzipEncoded)
	if err != nil {
		return nil, fmt.Errorf("failed buffer decode data: %s", err)
	}

	zr, err := gzip.NewReader(&buf)
	if err != nil {
		return nil, fmt.Errorf("failed to create reader from buffer: %s", err)
	}
	defer zr.Close()

  decoded, err := ioutil.ReadAll(zr)
	if err != nil {
		return nil, fmt.Errorf("failed to decode data(GZIP): %s", err)
	}

	return &file{
		content: &decoded,
		modTime: &zr.ModTime,
	}, nil
}

func init() {
  container = make(map[string]*file)
  var err error
  
  container["templates/index.html"], err = decode(`` +
    `H4sICPaksVwA/2FXNWtaWGd1YUhSdGJBPT0A7Fvdj+O2EX/PXzFRXxpEkkXJsq2Ftc` +
    `Xl7toUyKWLvcP2442WaJuJJKokba8T5H8vSMqyZMtfG+/uXRHgcF5Rw/n4zZAcztjj` +
    `r9/94+2nf9+9h7nMs9uvxuoDMlzMYosU1u1XAOM5wan6A2CcE4khmWMuiIythZw6I6` +
    `v5qsA5ia2cTWhGnBWZOLgsnQSXeJIRCxJWSFLI2FoT0TFtScmqZFw2CFc0lfM4JUua` +
    `EEc/2EALKinOHJHgjMTI1nwAxJzT4mdHMmdKZVywjYCMFj8DJ1lsCbnOiJgTIi2Ycz` +
    `KtRtxEiHOI5ZzkxEnJFC8y2Zz0teM0ZhviuZSluOn1pqyQwp0xNssILqlwE5b3EiH+` +
    `MsU5zdbxPZswyb79wApmVYbsir+txh3n9uli6GwuCVuI40LGksqM3P6TTODD3dtxzz` +
    `yqGOhtgmA8YekaaBpb6o8GBFBiIaDEHOdEEi5gylkOOaaFO2MgGcxpmpICaFEuJEwp` +
    `yVKxtSmlS0gyLERszWlKaqPHhlzJWwkL5LoksSXJo7RgibMFia1ff3VX4rffNpr0Ur` +
    `q8/Wqr1ceHvwFNWGFkmXGxnAHmFDtGpdiSfEEsmLJkIVSkxtYUZ4JYoAGKrZSKMsPr` +
    `m4IVDc3EOp+wTKumBDgJ5YmKchXG37HH2PLAA1/9q+cAjA0VJI+xhTwLkrX55LE1sm` +
    `7HPfO6ltEzQg7KVGqdklhiOYc0tj5AYAfwAGgIPwAa2siD/yiR6v35AvFCnLSRk0SC` +
    `WbpW34I5UdEXW6hvwaMeWcdWoEQrwrPnIb974kmdCxMuZ4Lkb0GKOjFqUSPUwHT0RE` +
    `w5WZ6vHxo1JKLTGkZbcv9p+gnJyktcPtq6bqQ9N9COG1zsOEEwT+bnQ6P85YYQ2GjY` +
    `AUlz5QVm5Q31wgvd8AlLL6PigqhSYfI99OEBAgiO+mugKdFIkR4PPTuqWEYQnWAZbV` +
    `geJ0Q2CiueKAQUnuCqiTXbfdKT+E1ZlhJ+LoI5+LYPcwghg8D23RDmoAWP4Hvwn7Lo` +
    `2Oq09BlIjgsxZTxXhwQuRIYl+bNnO/43DbqNnoKltGQpvTHHFOaJtR1Tceeg0O0Hfu` +
    `iFVmMyNIjWseW7Qy8IQhQ2JnOzirbPej118xASc7VrNshJkcaW16bXPnSQ76LIG0TI` +
    `HrrD0EfDYR/ewMAegAIEgYMiN/T9IBjaQ9eLgv6oP9y+bjF0fM8dRCPb8Vw0DHwPDY` +
    `MWo8CN+iNvhGwncBHykB8cYhQZkPpDuwsLVtZHdmtaw1WcSeUnByntv9mP4p0Nyx2G` +
    `2y1L7QZq04rU5zq2wo6Dqjc7O84muLhqSrC7BD21BPsHw78jTWGFWOQnz/DzAjpwB0` +
    `NvMBz4TVe0ohkF7iAIh4PRJdF8RixXALgR8vuRh2w0cgejfhg1wrfBEIHjuX0UoXAQ` +
    `BIrW88PIQ634dMOoP0KROlLdYRj5KOyMz9BFYaiWy8j3/SjoN3hEGzTs2mrIwBnYHv` +
    `zSNK8jUgOvI0wbu5862OyB3vYcdPFmV/ncSanOb9M/nP//4/w2pRvayA11er+XA23D` +
    `5FCccFISfDKraexXg9Z21e/crlp5l9pUGzOC46nXcT3PDufnVviaLhC0mF10ixxW+v` +
    `lHLGpoh+wB9NURHMISkH/5ZUDr9xTor6voVcMeFynLL0lF1VIcQAZ9dQDPYXA0UfZN` +
    `ojxSF7Zq6sWwGxUv28CfSddrIn/GzXKrW+iG9lDJ8mwfUN88Hb/PKEp1+T1qg1/ZMH` +
    `/KNSanaXp6vbaN6BsjkGes6J+wQk1BYT0nAzUpPG06ipTtF1s0YVKevxoq9VCl3tCY` +
    `pJ5Pqqd8+aDQP+2d4VnuGffEctYs/mUMp8AWHH7CSywSTku5LTlWz4InsbV97/4klB` +
    `Dz0OSVY1rAjNO0s2ip3m5Lgxv695wzDjkRAs/IttpZTVWI11RWk5OZN2E8JZykYCqi` +
    `VWmzwaAx4y0rJGdZ00MbEYnk2UdWzGoJNd/6TetmpJRPFpyTQmZrwImkSwKCFbOG/i` +
    `0BukpcczcTFNtPahw4EfQXYt3qp5YNLSaYS11Q2ePyRr+o2ZjHI3yyySLvYqPGt1zU` +
    `UzeTvZl3nM04qcv9exLL+v0+w4NqkgyXQu3jlTjlivdmDESOs8y69W58dJhBuuBYUl` +
    `a0OLyrBjcs/Bvk77BoFshrd4sVlckcJkSuCClAd2KE1fJ3Exsl6oGSFUzY4z0RJSsE` +
    `XRLrEJQb8h+Ug3dA1KtU+ZcKkHMCVXtFbz478QYwniykZIW235TfNuehrtGbk7E9pa` +
    `r2V5qo/c06q/S/ywVgvBAEHjNa/Hxjei9/2pYBb8e9hSB7ks121B4yJpwOkh3sPppS` +
    `6GE8RBfBs1u/kfrs9n/H2WpPsab9E03AXxqAqop5TQA6V2iZ4bUNuvsCRCbu0bV5l+` +
    `E14ResTjNB/X8EYdNr0pt9bHXQPjvWWoEnIH3QIk5MJayy6d48fulWVS26jaPMU1dv` +
    `9aUM1Bo87xZhAvijuk4c2SL1baPCpYP2+XdLLfMFgLjjZEnZYi9laUbJhqQOlO45zx` +
    `8enCxfBJQfyeNe+tEAxHSJKzA6aJ8dCK3ASwBxT3K2PHaWckPwmmBMcHFtLNQx+te/` +
    `/+vD+xvAaQqW7sxUVksGxmidhFa3n/1Lz97RvIPvB5aSY8duQ4UpLVLAKuWWhMMKr5` +
    `UOks1mmdKBiq7L1o6k+6psVbnpk5lsKkWQs72dvuViTfXOJM2vejxUxbff5ewu294X` +
    `2rRXsWZbp7tGDJ8Kg6povxMGevRkGGiqzyIMjBXXDAPN8ZXCYKdBcYFZuy7vdvrHqk` +
    `3Qdropznc5fScT0nQbt3dYdSV0DmdCRv1uWDqBOeTxLsMO+PzF7Drl94sMPDci3m76` +
    `+u2QqFq/p2OiInzFoNh8M+HqUVExfr2w2Ou/Xy8uDg6YR51ykCIFNoVGnbj+Liw0Cw` +
    `y6EPewW3mrS45LSlZ3FZm1W3wmhdwvMWzKBtmByt/m3ftCckoEzBjMCSe7uc+Z9RGt` +
    `PikkX4MkeZlhSWBFswwmRL1PSAq0kKytVbepTcXWta0qH7xnq93C/IHzWVFXcB/JCX` +
    `cWM8myo6u0zDorLy8Qw0fqFL8vbi9GoPP+8iIYHL6VXHXp7sfRHafsqkHEKUP1UWEu` +
    `Pur6UcJ/F2SxzQRLTtlrAH24UPLCsaaA8veAMk3fzwSrqgP92cAV7MFlOsqfCVxVe/` +
    `tVlvHbfQTrI2fz/lOrm9oaPdFL7WD2pt1VbQ+f6ql28Wt1V1ujJ3qrHcze7bYwd1/U` +
    `LP2boKMVek5jU/enTuQ0VW+tI6M5cMBv+23fscdGW/2xmRx05TuVOo2fQO33OLc/eD` +
    `LUn0xdsvHDJ/Nruc6GX+sutJjkVHY2Dr+kvuBh8O+JWGTb4Fb5Gt35MkMbd64nPCG7` +
    `rObv5JadAWVIP7u8UfA3aWrdfvvHTvYF7mTNzeod5SSRrBFd5+1X6WbeD00Yj6yZeg` +
    `JURBeum07B7XVRvzp/cdRTrr5C0qzzOwbwEjnJ0W8RvGgKl2bX2ye2vjqyWdREP+Kc` +
    `7EeGGq0Xj3q4bPF0F0G2vwTuTVi61g/jnvkB/P8CAAD//0qO/QERPwAA`)
  if err != nil {
  	panic(err)
  }
  container["templates/javascript.js"], err = decode(`` +
    `H4sICAessVwA/2FtRjJZWE5qY21sd2RDNXFjdz09ALRb73LjNpL/rqfoMJcJNZYl25` +
    `Pc5uRRUslkUpur7GRqnNq9qqmpXZiEJMQUwACgZV/ir/cA94j3JFfdAEiAomQ52fWH` +
    `GRFodDeA/vNDE7xlGiq1ggUsG1lYoWS+Masx/DoCKJQ0quLTSq2o8XL0cDnCASW/bo` +
    `aHiCXkS1YZPoZk1GwGZq20haXSUKqi2XBppytuX1ccf35z/32Zi3JM7HnMWpSOs+a2` +
    `0fLQWBKEktbW1mY+mxnLiht1y/WyUttpoTazXxpukKuZ/emzzz777PPz2VptT606XX` +
    `F7atf8lBW2YdWp5rLkmpenSyXt6XbN5amw5lQqe1rypZC8PBXytDCG9C2MiTXmTq0J` +
    `1FrVXNv7ZAJbIUu1RfVfqU3dWF5e2fuKd6NkU1Vj7H/rh/+VVQ3PW2ZPmub5+RcXn5` +
    `3PClYVTcUsP7X8zp5uRWnXp1th16c/s1tmCi1qO7s4Pzv//MV/vPg4/KDJrbj9id/Z` +
    `v+GQeJbIaAK4Plfiv7mb4myGBrASt1xOoDEcClaseQkFk7fM0N5fc2u5hprrpdIbJg` +
    `vuxvHK8AkUmjPLQfKtHzMCoBV2DBYjAEg0mvqe336jrnyob9EZjePv7SbPHEE2Hl96` +
    `OTid79hGVPdDsqLeQXnxaDSKnOfZtSrvs/EEMrKkJfVGAgslcSGRnnRxdkFteXZRZk` +
    `ToiYg/boFfcziBrL6DDE4ivQPjDbdaFDj5MHrDmWk0R3Vp84i1N0pPPSXDeJLDTouK` +
    `GfODMHbKyjKnJ+fFrCyLyqSuPIGiMs5WKIbkmaPKcRKixBlN8CcOPIFs7ObPBwWZp0` +
    `WWaLzexHrqzRFqEtHTtNR8o255pyjKWotyMLh5KdgdCfGM/RKhWkSRdfzMWm0P8MPu` +
    `XX5uLkPsSmHYdTWooZudJyhhAVn4nbXDuTx+dObD2PMRPAezFbZYY2zYbrmEUiyXXH` +
    `Np4VbwrRnB89kIc5F/hkUINvgIkm34HK4ba5WE779F+xd8+7Zi95Uwdg4Z/pdNfPsV` +
    `Z7pYzyEz9KNt/1ZoXlil7+eQXWu1NVxn8Sr/FUVFM8MxSVxve1wrkD3mOPwGhHSahy` +
    `5S3q/GzK8azcXNwsAzkjkjc8EOP8qvU37TMQIomHFEc3C+sIUNs8VayFU8lsajPdyQ` +
    `EYQ/TjMx728+7N3djvhac3bTNZR8yZrKziMKTEuiLDkou+baRD1k28fJ3i/zYdT9Gx` +
    `bDd9H64QLUvBCsAka7YeCaGV6CkmDXHAyveGG7ZenWkVYxSywh6yZWqM2GyTL3ppFN` +
    `IMvGlySOyxJYIBgNat3xdtYXMUa8RJovFglFvMG4UN5cMXhn46mbRt5bzJRmqYrGxC` +
    `QPQ8ph44NzRR+zX99yl2U6ODMBe1/zCSxlB/J4NQ3EGO245DroPNCVBwYTcOgQpT9Q` +
    `0o8GWcuKNY3LMyUxbrVyiT4An3fcYPq7VapUysVw19LTeiPkd1cT2LC7766ccpTjMY` +
    `BQW8iVlhIwr6ZCSq7//NNffmizKLsLwIdX06ISXLpcjwTbtag45EsDXy6cLHj2LEEM` +
    `uSWMZMaYog182fJrY4SB0wVcuNl59GzgpeMWEXn+bs9apZ7jUDTCLQdWVWoLSnKo2Y` +
    `q7LSZqmqBuZMEseRetv2PkJ2Dv7LTicmXX8CV8sX8Ou+oDgfzMKgWVkqs5YRHroQX+` +
    `uZVFAaYSBc/PJhBJO4XzjjJS0eqGX0aejsvS9ney4w07KOUFrn/2bM2rStSXWWT5I+` +
    `JiEIBPW1i1wBUnbNWlNmdgOrawzqJ4FWPMDnqYb+5fIRx4wzY8zxyLrIV+An9QkhCw` +
    `gLNLEPAStXFqX4I4OQlzdUNzXr0XHyZwfjGBiy8il0Bukm/fDThBpyRZfGzHf+Zitb` +
    `ad71stViuud7k4Hv7cUgpTY3ZxbopA3TtsmJ4Li55ZcEyONKaNwkquwNhmuQwenUbR` +
    `QLfl10YVN9y6U5bvjDQrNuUESmZZF5c+wiwbUnIwdbTSX6GlhgdavK2Zotz8P69+fD` +
    `M1Vgu5Est7JHSS5t2IeRgXg2Znpn4GW83qmmuwyh18vLLMAJOgZFGJ4gbp+B3b1BWf` +
    `Y7yuK3afjae+FxZwbeWrkGmocwLnDqR2PQfmvw+J+PaQxLpRl2n035q/s7LUE9iay9` +
    `HIb/hOKM8qxcpsElnZrfUm4sajkeXZ1mTj6S0eXckgNGclLLXaOHwgQci6sbAUvCod` +
    `xnV25KROINjTJLhegMI9MqXRlhkqUqyZXKUjHExksORb+HRVqWtWmU9xj6xmxQ0ZWa` +
    `1VwQ1uUwlFowl2GounULV0BBW759p70erbRpMwWMD59Cz48up1xWpDwessar0iPgu/` +
    `DchoDlnNGkQQI4crpGkQvpKpTvxu1ZzZpMkIuap6VEyWapNSUQg+cw+S31nf4DY5KK` +
    `q10phQ3n9o2wJW/k5UPO3CXUNYdsULJcvklERbGyyMAozARamZNvx7aV0/zODfz3yM` +
    `JyTNi12aTzoa9GCkeQnnZ12gd6OyM8wuhhdxagjnVyExYs8jCpoyRqK1MK3WBnQjqR` +
    `DBb7mmPV9xa6BgFWJPbLxHBkqW5Ml1iRto122Rwu0yjiuDIQhJlQz67U0Gseeti3N+` +
    `IR2nt1qtNE+rRS1qyjPPPhsnea23B3mwNb9kPM+CKo8NDLYbLbYz0fcu2nwgFEo/CQ` +
    `UEo37ZmX1yghGy0JToPLZ2NiKWZOl4/MB1kgq9XAqz5gEet4xPFnDeT/QDGhmr6ggR` +
    `Y+T0C4lYmJL31qO07OyTkN9jdHl4ULukMItn+hzOz87QrD7JYiUNtz+JDVeNzdNdnS` +
    `D9WQiqfuPxyEU+N1gudVPemBV8hOeebo7eT6d1Y9a+itppMJvBd9//119ez6FS6sZA` +
    `s6ruIxerozMUtVgdtQTOG1bnw84MNOJkQaxOwMXw1hWJ+8trDbMvw7J0lrhhQhL/ni` +
    `kaqx2Nq0hEZLRQyaLueIa3C693i1TP4jNS6DVrsUwORu3651k2To+Rg3wXi5QxHlvd` +
    `+N7ohwl8Hm23W+qWeo+H71ufsDmuAJQsT2xMzt7QQZokhnQQIDYOxCEhDUCudPsgyj` +
    `FGt7VYrSvEgOS+2BkilktMNrIHZn2SgTbwTVoYTr4THn1KC48um7VPlLXCk0tr7ZOS` +
    `q/A7aOo9eUFwxdtvmlRDWk1UbNPqoDLznlIhu6bqhATbU5lS6pCq857Sl2E3XC3uH/` +
    `He5f/2K+n7MP6Ht6pQzKDmflXCIYZ52obhsasjWLVaVRwT+Vsk9nw6N4hxS9jAqLeD` +
    `L343Lw9VMiged7LxMd8jy6OhHTFJe68eQavWpV7YqJJDYXVFfe8zv6kZgUTcSPzlNo` +
    `/aaMOyDwcjXJRpqOdD7PMUpBw2OYHsW1eZyqIZkpu2BK9l2t/LPH3yAX6pwB1+UZTt` +
    `x4KvCWlcoYfviQfek2EpKj4Bpq0wdgJWWHqsrpvN30MjPU2gVkbQ9qWOx/MMNwFlZe` +
    `MpMUCZouJtv2PUi22usaWhgT0SagsO8zgNbp7jimkznkMCEqijrwy24SLDe8SK8Vhs` +
    `/bAXPOxl1scv7eotFnB63inkC5x4UN6o23Z7+5LkEBFpEJr2nBd9d7d9U6uu6FCbj8` +
    `dJsc8bkORb3Ms3qv9KYgJcWn0/AamPN6K+LbXwGI2I+HWARDqR4YWJkhyVyPE87TVF` +
    `it1XKe3ripZk1wqpWWCIoXceUkfNvzRc319R7RTxwMcYrF/xqvr6MbM9OPqnw8Z6WP` +
    `JhqzrG0GczULK6d4V/Z95+iFiCsJ+a7nVKyFhP1KgNU08ceNIOdN7WPqZe11F9SHD2` +
    `v3DLvj3uwNQDPPTorc+fO1FKGpZ9OeEdN7WSJvEsdf1z359cfdvVlmAB6vpnx94VrO` +
    `LeFih7oIB9PZyQZ5xA4wQyPJNm4/kACm7rPjupN2R3l1ii/J4gFxw/NfQ7qOTjU+2r` +
    `CLvQ1qGgilsOqiohEHa4IClAtEgcIoiAiACRg1WwFKtGc1ANWfgWkavrIA+otVDtaz` +
    `TEvCp6P+XuJ7jqzmJBwAUPuu64jsJBGDyKYOMvDW9c8fLl4gL+73/+F6RKRXkpT+OO` +
    `x2GUgAwf5fJRx2VXnVI5ZnuY+EOAMGDXzEKhtOaF/aolcSZIbH3Vm7aWGkINukfspw` +
    `aRDdB/vE8YTdlTsxanTLtYTc7VCU3wmk9BIn0RluYh3Osu301AGAeH8NcbPM70co/7` +
    `w6AaKFPuwa2dwSr5qV/dXkkHhCtPJzYcv1/bsWg6xaPOyRu7KBVGubhzpNeoedZmY5` +
    `EMditxbSVKQg5D8a6u3lKJ+djpe3aPvwjeydCsLPOs2+RU5A4gjmUdrH7vxzK7a+4m` +
    `hvven9aQrnhYG9B01Bu1u6LvDsKwRG6LyZLWgTlF/Yk6nRtTFZPy/IbdcAxSmFyEhI` +
    `Jry4SkQ5KB3B1+4AS+Gg8aixbq/IC1YHe2x860UBeHh14cGPri8NAXu0b6UagEhgPd` +
    `kLWiwv2tjVFij/biCbQvHqcdNGx6ncWB39UVkw4Ds2t1yxMinGDSAP7sT4VAOmDDb7` +
    `/FgdQXCJ896w8Lzoz0XTh/uYCLcULaX75oAY/w92gJn0L94hjqwWXsoA6G+V3lPVw5` +
    `m++0P024H5HebElEnF/86YCQI9fjMSEXn39+QMiRW7RXyMO+nX88iOFfhlvQC2PUjl` +
    `rjOfpwTIN+XEuW7w+qgLvzx1R4sS8HkUTIzvbx7zF82JNIUmzM6prLMsdYGF/OicF0` +
    `v7ST9yBUNC55aZ8fBvbuetA7bprKRvC+vTjkex6D744YNFHHiNMVOn+FFYGeef+94k` +
    `OkHYY/mtTAtQ5Iq/aJOKjERliHwXFTiMeG3TnVzeBtp1ZWPMt95f5EtFSWbtEtVSPL` +
    `bJD5LuMnothhjOoohsChk3UcNNyXco3+uiyzPtIIlz/9Tcql0qSgAVbhwfg+wN6d45` +
    `uvpqaQV8iiakpuHOzth+8O2Ji1aqqSbjCVJbAg3Spw4AmEddcGYtFf9fP14+Exdkgc` +
    `0Ln8wPumJ/DduV2RsZJuR/TR/sNlGhJ6Prc/LITfO65+yNfLcIkR4Uvq7GnX8HsoiP` +
    `1mzcxbprns4eq2ipdydKa5p67XjXQ1uqys3qmt457tkITqHmlRE9EOzeEiYUTYd4JW` +
    `6Tdsw/cUvCB4uBPuMBh8lbTNIZtOE93f95lPIPu4rL5xV0f77yUGDyupsrf7ar7tbd` +
    `RIodTo+ldE+5u/x+zS+JYMOibAhZNtH9IT9dTe11Qg6ZTJhhbh99nWrnXR/feDh9f9` +
    `lvN023EhuVuylNsfM40nGccuUgrWstPTU/kwbHp4/AT0O/PW78tcfzR3Hc5ebmkGc9` +
    `g/OYsdnW8edpLUEbnsaO778lm0ED119mXZ46PNMGx9iC9WqJrLv/HrK7oOOjRR+ixE` +
    `8i20VLm/jui5b81USWSTXJC9jZKa/2jmx7ev33QmtnP/4yFiV1QqLfEP8Xv1w49Xrz` +
    `uGTtGmqkJDAjjRBSQv3MuJXYEbbgxb7RfZe/vgrrbSdTukm1Lxf4At719ZSZh2CrY8` +
    `Ihb0T7I9Hpv4+6NK0pcIKfcITNDdUPpgERgsNTdrcKVlYAaM2nDwn+MYyPkUVlN4td` +
    `Zqw8dgGoPmBKrRgVO44hXdJ+ru/hFRa9bukPXOifYfdITppPe63M53zo7+CzOgWxkw` +
    `cxX6UnEjP7WwVfoGFed3NS/woJJjDxXq/Xc+4d0EqyqKBlZs+DhcFkNWA8YdPueie3` +
    `Bu7d+HEmkoMrrkgXvVUbibpnSX1l+YIBYToPIn/l9rfitUY/xwtPbDAtws0ltPtStB` +
    `71O7jmrQkVKPqJLMpJvAoFKp2kcKGJwJ7emBqRDvAbWeMplWwcfncrSAocn07gTF00` +
    `quGXV3lPq3iJ54TSm9koSPj1Qk0otN4JZ/z5iH6E6vd0TMtZVaiYISfsi00t/Ypg9f` +
    `tar8HfCyDNfwMS27m77OF0cHv9WLP1LrEm34JNB/0YbKtYXqCRy8onToYtLAraJhdE` +
    `dkE8h4cldo6JbR4fFlfBnJF6Fmz5HZ83a5gqrAjBErSV+2EMVs5E6yzfVG2PDh2hAa` +
    `idJJH12EzzB3vl9z69K9XO/3h/v+/2w5PVtpJ48mgjHbW5UZpSGyjU9HRp+D+//Ipq` +
    `W7NeteUsYfvo7CZdu4kb71HbsvVrhajv4/AAD//1xeI67+QQAA`)
  if err != nil {
  	panic(err)
  }
  container["templates/style.css"], err = decode(`` +
    `H4sICGqlsVwA/2MzUjViR1V1WTNOegCsGXtv27j9f38KTocbGiO2k1yzaxQM2NZ1wI` +
    `D1VjTDMGC4P2jpJ5sLRWok5ccd8t0PfMkiLcp2UhR1TP7eb5JeTNHf/v6fz59yRDl/` +
    `bhvUSqhaiv5UQ0kw+n8LgoBE08VksuTlHv06QehAswSlQKCKM4UkUCgU4cwgGywDmF` +
    `W4JnSfo+wrX3LF0WfOeHaNas64bHABj9PF5AiVrNYKeCuza1S0QpINPE48liS/QI7u` +
    `PjS7xwlCNRYrwnL03i4bXJaErXJ0Y9cFp1zkaIPFu9ms4gJWgresvNKwJS6e7dIjHH` +
    `auHicvk4lzw7uasNmWlGqdox//8KHZXRlHdB7R1vaZfQeV/mctG9T6RXMnrGnVf9W+` +
    `gT9mCnYq+/k62GNtvQQR7zZYyi0XZfazke3Uur25+d7YxEUJIke3zQ5JTkmZMN2gzQ` +
    `QuSSs75y35Tutp/OcwltxAZltYPhM1G8Go+S8j4J4PbqE2zl1MUcHrmjMk1Z7aLJsv` +
    `ycqY1ce/06a9TCbzJaflAboFnSVaEC0tXEerrY/obzy9rDGlMfhm/uO902hOCs4snF` +
    `CaI8YZPPZ8rNEQWju5bsk3ICrKtzlak7IEpvdKIhuK9zlaUl486x2pBH+GRCJaoM+w` +
    `D9/39ihh8D+uE9ygez9o10LpyxGXJcIWwbkd/R5JUEitoZflyOSjz5C712SIr7bboN` +
    `pmS64Urx3WYGUV91de991XkA1nuqi9AXJLVLEmbKVbyhaA6bpta4be1XxJKFwhzEok` +
    `+Ba9K0E+K95cWWM6R1cUbJ5R2M1KImwvyh0fDcGUrNiMKKhljgpgCoTVaE1Kq0jDJb` +
    `FUeCk5bRWg35G64UJhpjQLxZsczR4eHh6aXQSiUKlh2MtksmyVconV9ae70KF3xxXY` +
    `Mgnq8a0RG81d3XVmxjEHl0TF8WAxRyLaCMJdPzyr91iTZ8JqYtTsfJSvdTkZbrzBBV` +
    `F7rcP9ed3asah40cq3sSiJxEvqCizmEoyU4n1ilBR354yQgXI4zmHBt93M0AQfbW34` +
    `4qdbvJe+YC6rCl+QfBtx06V2HiunXJjXPb7zCttgbEAoUmDq803xxiIW4JpyJMuOiB` +
    `oThlaCmO41N6sAV4O0AvrvTEHdUKxgZg20VYBuK+GrIcTCArDMjc+zuZH0SQgu0Dzr` +
    `733kTAlOB3aBKTTPzglzp/e5ivaPWRTveauQO00kTRg2ImXGoCE+yQ5cfvVO04LyA/` +
    `s46b+rqtvqtnrsyL24AQYOFOJqFRK44NroYoqAlYhXYVL4LPESg2Tpq3FuzuBWcfuh` +
    `A9KtxvOnUIL+m8AW6S9PnK1GvmTfhuQLxXsQaG4Wn3kJ3ZfMVZbHjhzr9w9YRtYAlt` +
    `4/YH2iuJGuK0aIDtSbOO/t4AiGyb3ds6NYAq1yHdHUJPJi/9oKbG4WA3I97FjwGbMt` +
    `pY4X7Bw8INZCDpjG+wN4en8gd+NUNWdhH6wuf4PwXZK852XqP4hUUVo9ARbFOtr8i+` +
    `BbCVn/+PCDPzD3eaWyTMNCbCsmhW+hIYXVIUVhoZGfj/zpneyiGri5F+nLu0T4kXK+` +
    `dagVpD97ujwp3vSWXwRsCG9lb+sn2Kne8ivUfGNDspieDHZSZnaEMyw5sxNpuogqw7` +
    `BMVof+jGvJWJqkeDqcCY5VSstxGDGl8VmSSkM1xTz2aprEwgfSLMoon2imKQRp1rWJ` +
    `NyTZeH5pCR85k219mAZfoQGsuuUTYSvag2JW8joLe5lnkWhpDhzSODEJEgsNKZwmCQ` +
    `oLjWQYZZMyDNRSKL5aUfinHRpmFpRQcDss9N2qBKHv1gPRDMLmY2kG5EqQLpTdxOxO` +
    `vu7k5nvkez9eLoq1P3GMt3BcKLIBrcK/iKKATqyzmOrPQumGfXLjmJAu2xqdWPfaij` +
    `8xHDC+CL4SICUKxrdLv9iOKM4ROD3l+xO9f5o4MjgpwMLfJMG4Ji1Ag9/Cv3NkUoTH` +
    `uOBdcFjskNSSbOylf/xOfaiHm7k7mPl3CvcSMabQiy4/jKSuNcIQRlQHTZeg3vLX1l` +
    `ed69NtVLP2BzRpTCbcfPkIlGa9F4zg1ev0HbCv8vk6vl7LYT39Fc9r03ub8jnins77` +
    `kbUvoS8Hsnknc+jJ5Kxss40XI/uYwMU+CnG3/6o4j4a4Y+09eNh4W4yPdD5LyTeoOR` +
    `7kQJ0LIx3QfpNwz4/siVpXDI+I/DvRIAVQGnfI68mcwU51k3oxHXqnu73qP9f6Q66v` +
    `pFig379ksPdnun8xN0/Jd6cepbw0Ow39qhuaIZIbaeEyxjFDKVid8361mCL37m5foU` +
    `L3jBru/3sHjPazzlSUMirQv3d66Le1A5tE8LrTQ2rKRtITbA5nhJN8hs4CAfAcLql3` +
    `kBgenyrMpI0FSIWF6mekm8f+/XYxRS3bgCAVqcAehee6NZPjhyK3bZV1i2/fsx1j3z` +
    `rc8hNTYp8FohPNJYReWL/jZRqy/iJIjcU+G4I9QcFZib3KJ6bJgEGnau1QCX0HJXxh` +
    `YK/tZGl3aFZagq1Bv4q6lt92JRYuYxxTPsHKYXT9/ydcAwpWWfTc98H9CnxhpztyY9` +
    `I5P1QC3VXC/D3d8fwj/LCzYq8cOyDh13GfnL/qtdRQwyiTAuBjgD/cPENoRDHUJgNg` +
    `iJ9qiDHcUJVk02tOOVPrWbEmtHwHG2BX1wbuTrcxMHHR8b+AjnOOT0zjkoaOV8c/OI` +
    `4J5WWZtEbDUsacw/dcW4ZwB0y5724BwCtdb78FAAD//2HYeROPJAAA`)
  if err != nil {
  	panic(err)
  }
  container["templates/theme-default.css"], err = decode(`` +
    `H4sICNOasVwA/2RHaGxiV1V0WkdWbVlYVnNkQzVqYzNNPQBcikEOgjAURPc9xSTdkZ` +
    `SqqGnKacpvESL4SVvThfHuBiQunLd7b2xkzngJQFcgXsbg0UeeMeS8JKt1KaUuTaKB` +
    `eUo18aynsdOlUXkIc1Ax+JpSQqWFAJTqHN1vkZ8PbyFDv9JuoecYfuGw7RvoaCGNN2` +
    `RoFycLeTUruzj/Py4W0jlnnGnF+xMAAP//Q68dl8MAAAA=`)
  if err != nil {
  	panic(err)
  }
  container["templates/theme-juri.css"], err = decode(`` +
    `H4sICNOasVwA/2RHaGxiV1V0YW5WeWFTNWpjM009ADzMQQ6DIBCF4T2nmMSdCaJVUf` +
    `E0OkA11Y4BGhZN795oSWf5f5OnHFGANwMQOSAdq9FgHe2whHB4JUSMsYi1x4Vo8wXS` +
    `LrZ1FrHmYTG74c7oAr2HXDAGwPk84ePu6PXUCrJOo+7b8QJLzvyhvO4HWCnIZIlGzi` +
    `ncFGT9oJuhSqE5P5oB5ZRCe45LtJ0d2ecbAAD//9Kzz8TDAAAA`)
  if err != nil {
  	panic(err)
  }
}

func Content(filename string) (*[]byte, error) {
  if file, ok := container[filename]; ok {
    return file.content, nil
  }
  return nil, fmt.Errorf("file2go %s not found", filename)
}

func ContentMust(filename string) *[]byte {
	content, err := Content(filename)
	if err != nil {
		panic(err)
	}
	return content
}

func ModTime(filename string) (*time.Time, error) {
  if file, ok := container[filename]; ok {
    return file.modTime, nil
  }
  return nil, fmt.Errorf("file2go %s not found", filename)
}

func ModTimeMust(filename string) *time.Time {
	modTime, err := ModTime(filename)
	if err != nil {
		panic(err)
	}
	return modTime
}

// eof