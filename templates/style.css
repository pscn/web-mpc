/* FIXME: lookup useful @media queries */

body {
  /* FIXME: better font selection */
  font-family: "Roboto", sans-serif;
  /*font-family: 'Bowlby One SC';*/
  font-size: 16px;
  margin: 4px;
  padding: 0px;
  color: black;
  background: var(--c3);
}

@media (min-width: 768px) {
  body {
    /*background: #efefef;*/
  }
}

input[type="text"],
input[type="number"],
input[type="password"] {
  width: 100%;
  border: 1px solid black;
  border-radius: 4px;
  box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
}

/* common styles */
.big {
  font-size: 25px;
}
.bold {
  font-weight: bold;
}

.medium {
  font-size: 20px;
}

.small {
  font-size: 16px;
}

.bordered {
  /* add a round border & set the background */
  border: 2px solid black;
  border-radius: 4px;
  margin: 2px;
  /* 
  padding: 2px; 
  */
  
  background: var(--c5);
}

.boxResponsive {
  /* switching between column (mobile) and row (desktop) */
  display: flex;
  /* flex-direction: column; */
  align-items:center;
}

@media (min-width: 768px) {
  .boxResponsive {
    flex-direction: row;
  }
}

.boxColumn {
  /* always column */
  display: flex;
  flex-direction: column;
}

.boxRow {
  /* always row */
  display: flex;
  flex-direction: row;
}

.cell {
  display: flex;
}

/* main grid */
.main {
  display: grid;
  grid-template-columns: 4px auto 1fr auto 4px;
  grid-template-areas:
    ". error error error ."
    ". connectionStatus viewControl timeDisplay ."
    ". activeSong activeSong activeSong . "
    ". playerControl playerControl playerControl ."
    ". playlistView playlistView playlistView ."
    ". searchView searchView searchView ."
    ". folderView folderView folderView ."
    ". configView configView configView .";
}

@media (min-width: 768px) {
  .main {
    grid-template-columns: 4px auto auto 1fr auto 4px;
    /* FIXME: layout */
    grid-template-areas:
      ". error error error error ."
      ". connectionStatus timeDisplay activeSong activeSong  ."
      ". viewControl viewControl activeSong activeSong  ."
      ". playerControl playerControl activeSong activeSong  ."
      ". playlistView playlistView playlistView playlistView ."
      ". searchView searchView searchView searchView ."
      ". folderView folderView folderView folderView ."
      ". configView configView configView configView .";
  }
}

.error {
  grid-area: error;
  background: #ff1f1f;
  font-size: 24px;
}

.viewControl {
  grid-area: viewControl;
}
.connectionStatus {
  grid-area: connectionStatus;
}
.activeSong {
  grid-area: activeSong;
}

.timeDisplay {
  grid-area: timeDisplay;
}
@media (min-width: 768px) {
  .timeDisplay {
    flex-direction: row; /* FIXME: doesn't work :( */
  }
}

.playerControl {
  grid-area: playerControl;
}

.playlistView {
  grid-area: playlistView;
}

.searchView {
  grid-area: searchView;
}

.folderView {
  grid-area: folderView;
}

.configView {
  grid-area: configView;
}

/* activeSong */

.title {
  font-size: 22px;
}

.artist {
  font-size: 22px;
}

.album {
  font-size: 20px;
}

.albumArtist {
  font-size: 20px;
}

/* a song in a list */
.songRow {
  display: grid;
  grid-template-columns: auto 1fr;
  grid-template-areas: "songControl songCell";
}

.songCell {
  grid-area: songCell;
  display: grid;
  grid-template-columns: 1fr auto;
  grid-template-areas:
    "songTitle songDuration"
    "songArtist songArtist"
    "songAlbum songAlbum"
    "songAlbumArtist songAlbumArtist";
  font-size: 20px;
  padding-top: 2px;
}

@media (min-width: 768px) {
  /* desktop */
  .songCell {
    grid-template-columns: 3fr 2fr 3fr 1fr auto;
    grid-template-areas: "songTitle songArtist songAlbum songAlbumArtist songDuration";
  }
}

.songTitle {
  grid-area: songTitle;
}

.songArtist {
  grid-area: songArtist;
}

.songAlbum {
  grid-area: songAlbum;
}

.songAlbumArtist {
  grid-area: songAlbumArtist;
}

.songDuration {
  grid-area: songDuration;
}

/* search form */
.configItem {
  padding: 4px;
}
.configLabel {
}

.configValue {
}

/* unverififed */

.listing {
  grid-area: listing;
}

.listingRow {
  display: grid;
  grid-template-columns: auto 1fr;
  grid-template-areas: "listingControl listingEntry";
}

.listingControl {
  grid-area: listingControl;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-areas:
    "listingControlPrimary"
    "listingControlSecondary";
}

@media (min-width: 768px) {
  .listingControl {
    grid-template-columns: 1fr 1fr;
  }
}

.listingEntry {
  grid-area: listingEntry;
  display: grid;
  grid-template-columns: 1fr auto;
  grid-template-areas:
    "playlistTitle playlistDuration"
    "playlistArtist playlistArtist"
    "playlistAlbum playlistAlbum"
    "playlistAlbumArtist playlistAlbumArtist"
    "directoryName directoryName";
  font-size: 20px;
}

@media (min-width: 768px) {
  /* desktop */
  .listingEntry {
    grid-template-columns: 3fr 2fr 3fr 1fr auto;
    grid-template-areas:
      "playlistTitle playlistArtist playlistAlbum playlistAlbumArtist playlistDuration"
      "directoryName directoryName directoryName directoryName directoryName";
  }
}

.playlistTitle {
  grid-area: playlistTitle;
}

.playlistArtist {
  grid-area: playlistArtist;
}

.playlistAlbum {
  grid-area: playlistAlbum;
}

.playlistAlbumArtist {
  grid-area: playlistAlbumArtist;
}

.playlistDuration {
  grid-area: playlistDuration;
}

button {
  background: none;
  box-sizing: unset;
  border: 0;
  border-radius: 4px;
  outline: none;
  -webkit-transition-duration: 0.6s;
  transition-duration: 0.6s;
  /* margin: 4px;*/
  font-size: 20px;
}

button {
}
button:hover {
  background: var(--c3);
}
button:focus {
  background: var(--c3);
}
button:disabled {
  opacity: 0.5;
  color: var(--c4);
}

div.listingRow:nth-child(even),
div.songRow:nth-child(even) {
  background: var(--c5);
}

div.listingRow:nth-child(even) button:disabled,
div.songRow:nth-child(even) button:disabled{
  color: var(--c4);
}

div.listingRow:nth-child(odd),
div.songRow:nth-child(odd) {
  background: var(--c4);
}

div.listingRow:nth-child(odd) button:disabled,
div.songRow:nth-child(odd) button:disabled{
  color: var(--c5);
}
/* eof */
