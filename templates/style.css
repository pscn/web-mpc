/* FIXME: lookup useful @media queries */

body {
  /* FIXME: better font selection */
  font-family: "Roboto", sans-serif;
  /*font-family: 'Bowlby One SC';*/
  font-size: 16px;
  margin: 4px;
  padding: 0px;
  color: black;
  background: var(--c3);
}

@media (min-width: 768px) {
  body {
    /*background: #efefef;*/
  }
}

input[type="text"],
input[type="number"],
input[type="password"] {
  width: 100%;
  border: 1px solid black;
  border-radius: 4px;
  box-sizing: border-box;
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
}

/* common styles */
.big {
  font-size: 120%;
}
.bold {
  font-weight: bold;
}

.medium {
  font-size: 100%;
}

.small {
  font-size: 80%;
}

.bordered {
  /* add a round border & set the background */
  /* border: 2px solid black; */
  border-radius: 4px;
  margin: 1px;
  padding-bottom: 4px;

  background: var(--c5);
}

.boxResponsive {
  /* switching between column (mobile) and row (desktop) */
  display: flex;
  flex-direction: column;
  align-items: center;
}

.hide {
  position: absolute !important;
  top: -9999px !important;
  left: -9999px !important;
}

button {
  background: none;
  box-sizing: unset;
  border: 0;
  border-radius: 4px;
  outline: none;
  -webkit-transition-duration: 0.6s;
  transition-duration: 0.6s;
  /* margin: 4px;*/
  font-size: 90%;
}

button:hover {
  opacity: 0.5;
  background: var(--c3);
}
button:focus {
  opacity: 0.5;
  background: var(--c3);
}
button:disabled {
  opacity: 0.5;
  color: var(--c4);
}
.ctrlMode button {
  /* the stacked icons add padding somehow */
  padding: 0px;
  font-size: 75%;
}
.fas {
  vertical-align: middle;
}

@media (min-width: 768px) {
  .boxResponsive {
    flex-direction: row;
  }
}

.boxColumn {
  /* always column */
  display: flex;
  flex-direction: column;
}

.boxRow {
  /* always row */
  display: flex;
  flex-direction: row;
  padding: 2px;
}

.boxRow .fas {
  vertical-align: top;
}

.cell {
  display: flex;
}

/* main grid */
.main {
  display: grid;
  grid-template-columns: 4px 1fr 4px;
  grid-template-areas:
    ". mainError ."
    ". mainControl ."
    ". mainContent .";
}

@media (min-width: 768px) {
  .main {
    grid-template-columns: 4px 1fr 4px;
    /* FIXME: layout */
    grid-template-areas:
      ". mainError ."
      ". mainControl ."
      ". mainContent .";
  }
}

.mainError {
  grid-area: mainError;
  background: #ff1f1f;
}

.mainControl {
  grid-area: mainControl;
}

.mainContent {
  grid-area: mainContent;
}

/* end of main grid */

/* mainControl grid */
.mainControl {
  display: grid;
  grid-template-columns: auto auto auto 1fr auto auto;
  grid-template-areas:
    "ctrlConnection ctrlSong ctrlSong ctrlSong ctrlSong ctrlSong"
    "ctrlView ctrlSong ctrlSong ctrlSong ctrlSong ctrlSong"
    "ctrlPlayer ctrlPlayer ctrlMode . ctrlElapsed ctrlDuration";
}
@media (min-width: 768px) {
  .mainControl {
    grid-template-columns: auto auto auto auto 1fr auto auto;
    grid-template-areas:
      "ctrlSong ctrlSong ctrlSong ctrlSong ctrlSong ctrlSong ctrlSong"
      "ctrlConnection ctrlView ctrlPlayer ctrlMode . ctrlElapsed ctrlDuration";
  }
}

.ctrlView {
  grid-area: ctrlView;
}

.ctrlConnection {
  grid-area: ctrlConnection;
}

.ctrlSong {
  grid-area: ctrlSong;
  padding: 4px;
}

.ctrlElapsed {
  grid-area: ctrlElapsed;
  font-size: 80%;
  padding-top: 6px;
  padding-right: 2px;
}
.ctrlDuration {
  grid-area: ctrlDuration;
  font-size: 80%;
  padding-top: 6px;
  padding-right: 2px;
}

.ctrlPlayer {
  grid-area: ctrlPlayer;
}

.ctrlMode {
  grid-area: ctrlMode;
}

/* end of mainControl grid */

/* ctrlView grid */
.ctrlView {
  display: grid;
  grid-template-columns: auto;
  grid-template-areas:
    "ctrlViewList"
    "ctrlViewSearch"
    "ctrlViewBrowse"
    "ctrlViewConfig";
}
@media (min-width: 768px) {
  .ctrlView {
    grid-template-columns: auto auto auto auto;
    grid-template-areas: "ctrlViewList ctrlViewSearch ctrlViewBrowse ctrlViewConfig";
  }
}
.ctrlViewList {
  grid-area: ctrlViewList;
}
.ctrlViewSearch {
  grid-area: ctrlViewSearch;
}
.ctrlViewBrowse {
  grid-area: ctrlViewBrowse;
}
.ctrlViewConfig {
  grid-area: ctrlViewConfig;
}
/* end of ctrlView grid */

/* ctrlPlayer grid */
.ctrlPlayer {
  display: grid;
  grid-template-columns: auto auto auto auto;
  grid-template-areas: "ctrlPlayerPlay ctrlPlayerStop ctrlPlayerPrevious ctrlPlayerNext";
  /*
  grid-template-areas:
    "ctrlPlayerPlay ctrlPlayerStop"
    "ctrlPlayerPrevious ctrlPlayerNext";
    */
}
.ctrlPlayerPlay {
  grid-area: ctrlPlayerPlay;
}
.ctrlPlayerStop {
  grid-area: ctrlPlayerStop;
}
.ctrlPlayerPrevious {
  grid-area: ctrlPlayerPrevious;
}
.ctrlPlayerNext {
  grid-area: ctrlPlayerNext;
}
/* end of ctrlPlayer grid */

/* ctrlMode grid */
.ctrlMode {
  display: grid;
  grid-template-columns: auto auto auto auto;
  grid-template-areas: "ctrlModeConsume ctrlModeRepeat ctrlModeSingle ctrlModeRandom";
  /*
  grid-template-areas:
    "ctrlModeConsume ctrlModeRepeat"
    "ctrlModeSingle ctrlModeRandom";
    */
}
.ctrlModeConsume {
  grid-area: ctrlModeConsume;
}
.ctrlModeRepeat {
  grid-area: ctrlModeRepeat;
}
.ctrlModeSingle {
  grid-area: ctrlModeSingle;
}
.ctrlModeRandom {
  grid-area: ctrlModeRandom;
}
.toggleOn {
  text-decoration: underline;
}
/* end of ctrlMode grid */

/* ctrlSong */

.title {
  font-size: 120%;
}

.artist {
  font-size: 100%;
}

.album {
  font-size: 80%;
}

.albumArtist {
  font-size: 80%;
}

/* a song in a list */
.songRow {
  display: grid;
  grid-template-columns: auto 1fr;
  grid-template-areas: "songControl songCell";
  padding: 2px;
}

.songCell {
  grid-area: songCell;
  display: grid;
  grid-template-columns: 1fr auto;
  grid-template-areas:
    "songTitle songDuration"
    "songArtist songArtist"
    "songAlbum songAlbum"
    "songAlbumArtist songAlbumArtist";
  font-size: 90%;
  padding-top: 2px;
}

@media (min-width: 768px) {
  /* desktop */
  .songCell {
    grid-template-columns: 3fr 2fr 3fr 1fr auto;
    grid-template-areas: "songTitle songArtist songAlbum songAlbumArtist songDuration";
  }
}

.songTitle {
  grid-area: songTitle;
}

.songArtist {
  grid-area: songArtist;
}

.songAlbum {
  grid-area: songAlbum;
}

.songAlbumArtist {
  grid-area: songAlbumArtist;
}

.songDuration {
  grid-area: songDuration;
}

/* search form */
.configItem {
  padding: 4px;
}

/* unverififed */

.listing {
  grid-area: listing;
}

.listingRow {
  display: grid;
  grid-template-columns: auto 1fr;
  grid-template-areas: "listingControl listingEntry";
}

.listingControl {
  grid-area: listingControl;
  display: grid;
  grid-template-columns: 1fr;
  grid-template-areas:
    "listingControlPrimary"
    "listingControlSecondary";
}

@media (min-width: 768px) {
  .listingControl {
    grid-template-columns: 1fr 1fr;
  }
}

.listingEntry {
  grid-area: listingEntry;
  display: grid;
  grid-template-columns: 1fr auto;
  grid-template-areas:
    "playlistTitle playlistDuration"
    "playlistArtist playlistArtist"
    "playlistAlbum playlistAlbum"
    "playlistAlbumArtist playlistAlbumArtist"
    "directoryName directoryName";
  font-size: 80%;
}

@media (min-width: 768px) {
  /* desktop */
  .listingEntry {
    grid-template-columns: 3fr 2fr 3fr 1fr auto;
    grid-template-areas:
      "playlistTitle playlistArtist playlistAlbum playlistAlbumArtist playlistDuration"
      "directoryName directoryName directoryName directoryName directoryName";
  }
}

.playlistTitle {
  grid-area: playlistTitle;
}

.playlistArtist {
  grid-area: playlistArtist;
}

.playlistAlbum {
  grid-area: playlistAlbum;
}

.playlistAlbumArtist {
  grid-area: playlistAlbumArtist;
}

.playlistDuration {
  grid-area: playlistDuration;
}

div.listingRow:nth-child(even),
div.songRow:nth-child(even) {
  background: var(--c5);
}

div.listingRow:nth-child(even) button:disabled,
div.songRow:nth-child(even) button:disabled {
  color: var(--c4);
}

div.listingRow:nth-child(odd),
div.songRow:nth-child(odd) {
  background: var(--c4);
}

div.listingRow:nth-child(odd) button:disabled,
div.songRow:nth-child(odd) button:disabled {
  color: var(--c5);
}
/* eof */
